{"version":3,"sources":["jasminegui/var.cljs"],"mappings":"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","names":["G__49342","G__49343","re-frame.core/reg-sub","db","regression","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","risk","G__49346","G__49347","all-proxies","days-with-data","total-days","cljs.core/count","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4529__auto__","s__49349","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","b__49351","cljs.core/chunk-buffer","i__49350","vec__49359","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__49348","cljs.core/chunk-rest","vec__49366","cljs.core/first","cljs.core/cons","cljs.core/rest","kb","d","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core/name","cljs.core/str","jasminegui.var/nav-var-bar","cljs.core/deref","active-var","G__49377","re-frame.core/subscribe","re-com.core/h-box","re-com.core/v-box","s__49380","b__49382","i__49381","iter__49379","item","jasminegui.static/var-navigation","re-com.core/button","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__49384","G__49410","re-frame.core/dispatch","jasminegui.var/overview","re-com.core/label","jasminegui.var/marginal","jasminegui.var/portfolio-proxy-table","js/module$node_modules$react_table$lib$index.default","G__49419","jasminegui.tables/case-insensitive-filter","jasminegui.var/var-table","G__49422","jasminegui.tables/round1pc","jasminegui.tables/round1","jasminegui.tables/round0pc","jasminegui.var/dropdown-width","jasminegui.var/var-table-view","re-com.core/title","re-com.core/p","jasminegui.var/backtest-chart","dates","G__49429","data","G__49430","chart-period","G__49431","line","p1__49428#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","jasminegui.static/var-charts-choice-map","days","G__49433","cljs.core/Keyword","js/Error","G__49434","G__49435","G__49436","G__49437","oz.core/vega-lite","jasminegui.charting/backtest-chart","cljs.core/take-last","G__49440","G__49441","jasminegui.var/histogram-chart","G__49443","G__49444","G__49445","p1__49442#","G__49446","G__49449","G__49450","G__49451","G__49452","jasminegui.charting/return-histogram","G__49463","jasminegui.var/var-controller","p1__49464#","p1__49465#","portfolio-map","s__49468","b__49470","i__49469","iter__49467","p","G__49478","portfolio","G__49479","G__49480","re-com.core/single-dropdown","G__49481","re-com.core/gap","G__49482","jasminegui.var/proxy-table","G__49484","display","s__49486","b__49488","i__49487","vec__49496","iter__49485","vec__49499","k","v","jasminegui.var/proxy-table-view","jasminegui.var/portfolio-proxies","jasminegui.var/active-home","G__49511","js/window","G__49512","jasminegui.var/var-view","cljs.core/chunk-first"],"sourcesContent":["(ns jasminegui.var\r\n  (:require\r\n    [re-frame.core :as rf]\r\n    [reagent.core :as reagent]\r\n    [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                         single-dropdown hyperlink\r\n                         input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n    [re-com.box :refer [h-box-args-desc v-box-args-desc box-args-desc gap-args-desc line-args-desc scroller-args-desc border-args-desc flex-child-style]]\r\n    [re-com.util :refer [px]]\r\n    [re-com.validate :refer [string-or-hiccup? alert-type? vector-of-maps?]]\r\n    [\"react-table\" :as rt :default ReactTable]\r\n    [goog.string :as gstring]\r\n    [goog.string.format]\r\n    [jasminegui.mount :as mount]\r\n    [jasminegui.tables :as tables]\r\n    [jasminegui.static :as static]\r\n    [jasminegui.charting :as charting]\r\n    [oz.core :as oz])\r\n  )\r\n\r\n\r\n;\r\n;{:daily {:beta 1.2260532296491367, :rsq 0.8849355266051778},\r\n; :weekly {:beta 1.318406056405913, :rsq 0.9682877396734104},\r\n; :monthly {:beta 1.3517721344251228, :rsq 0.9896161636479072}}\r\n;\r\n;\r\n;\r\n;\r\n;\r\n;\r\n;\r\n;{:daily {:sd-3y 0.05075792288462579,\r\n;         :sd-1y 0.08181622471933907,\r\n;         :var-3y-99pct -0.01575246019256893,\r\n;         :var-3y-95pct -0.0027800223125257206,\r\n;         :var-1y-99pct -0.027673840035470465,\r\n;         :var-1y-95pct -0.007117672811373987,\r\n;         :maxd-1y -0.1179462293850927,\r\n;         :maxd-3y -0.14836531983027934},\r\n; :weekly {:sd-3y 0.08738352600045841,\r\n;          :sd-1y 0.14156626769555813,\r\n;          :var-3y-99pct -0.08792046764255501,\r\n;          :var-3y-95pct -0.007750608408804038,\r\n;          :var-1y-99pct -0.08792046764255501,\r\n;          :var-1y-95pct -0.017187007926761422,\r\n;          :maxd-1y -0.11505966664407652,\r\n;          :maxd-3y -0.14467278052642674},\r\n; :monthly {:sd-3y 0.13930849870633258,\r\n;           :sd-1y 0.21764709073569768,\r\n;           :var-3y-99pct -0.18965485658006875,\r\n;           :var-3y-95pct -0.02340672603291527,\r\n;           :var-1y-99pct -0.18965485658006875,\r\n;           :var-1y-95pct -0.0021206313396463505,\r\n;           :maxd-1y -0.10090678426046451,\r\n;           :maxd-3y -0.1357390240242926}}\r\n\r\n\r\n\r\n(rf/reg-sub\r\n  :var/table\r\n  (fn [db]\r\n    (let [regression (get-in db [:var/data :regression])\r\n          risk (get-in db [:var/data :risk])]\r\n      [{:id \"Daily 1y\"    :std (get-in risk [:daily :sd-1y])    :beta (get-in regression [:daily :beta-1y])   :rsq (get-in regression [:daily :rsq-1y])   :var95 (get-in risk [:daily :var-1y-95pct])   :var99 (get-in risk [:daily :var-1y-99pct])   :maxd (get-in risk [:daily :maxd-1y])}\r\n       {:id \"Daily 3y\"    :std (get-in risk [:daily :sd-3y])    :beta (get-in regression [:daily :beta-3y])   :rsq (get-in regression [:daily :rsq-3y])   :var95 (get-in risk [:daily :var-3y-95pct])   :var99 (get-in risk [:daily :var-3y-99pct])   :maxd (get-in risk [:daily :maxd-3y])}\r\n       {:id \"Weekly 1y\"   :std (get-in risk [:weekly :sd-1y])   :beta (get-in regression [:weekly :beta-1y])  :rsq (get-in regression [:weekly :rsq-1y])  :var95 (get-in risk [:weekly :var-1y-95pct])  :var99 (get-in risk [:weekly :var-1y-99pct])  :maxd (get-in risk [:weekly :maxd-1y])}\r\n       {:id \"Weekly 3y\"   :std (get-in risk [:weekly :sd-3y])   :beta (get-in regression [:weekly :beta-3y])  :rsq (get-in regression [:weekly :rsq-3y])  :var95 (get-in risk [:weekly :var-3y-95pct])  :var99 (get-in risk [:weekly :var-3y-99pct])  :maxd (get-in risk [:weekly :maxd-3y])}\r\n       {:id \"Monthly 1y\"  :std (get-in risk [:monthly :sd-1y])  :beta (get-in regression [:monthly :beta-1y]) :rsq (get-in regression [:monthly :rsq-1y]) :var95 (get-in risk [:monthly :var-1y-95pct]) :var99 (get-in risk [:monthly :var-1y-99pct]) :maxd (get-in risk [:monthly :maxd-1y])}\r\n       {:id \"Monthly 3y\"  :std (get-in risk [:monthly :sd-3y])  :beta (get-in regression [:monthly :beta-3y]) :rsq (get-in regression [:monthly :rsq-3y]) :var95 (get-in risk [:monthly :var-3y-95pct]) :var99 (get-in risk [:monthly :var-3y-99pct]) :maxd (get-in risk [:monthly :maxd-3y])}])))\r\n\r\n(rf/reg-sub\r\n  :var/portfolio-proxies\r\n  (fn [db]\r\n    (let [all-proxies (get-in db [:var/proxies])\r\n          days-with-data (get-in db [:var/data :days-with-data])\r\n          total-days (count (get-in db [:var/dates :daily]))]\r\n      (sort-by :days (into [] (for [[kb d] days-with-data]\r\n                                (update\r\n                                  (merge {:bond (name kb) :days (- total-days d)} (get-in all-proxies [kb]))\r\n                                  :adjdur str) ))))))\r\n\r\n\r\n;(defn var-navigation-dispatch [item]\r\n;  (println item)\r\n;  (rf/dispatch [:active-var (:code item)])\r\n;  (when (and (= item :overview) (nil? @(rf/subscribe [:var/data])))\r\n;    ;this is the first run\r\n;    (rf/dispatch [:get-var-data \"OGEMCORD\"])))\r\n\r\n(defn nav-var-bar []\r\n  (let [active-var @(rf/subscribe [:active-var])]\r\n    [h-box\r\n     :children [[v-box\r\n                 :gap \"20px\"\r\n                 :class \"leftnavbar\"\r\n                 :children (into []\r\n                                 (for [item static/var-navigation]\r\n                                   [button\r\n                                    :class (str \"btn btn-primary btn-block\" (if (and (= active-var (:code item))) \" active\"))\r\n                                    ;:style {:font-size \"12px\"}\r\n                                    :label (:name item)\r\n                                    :on-click #(rf/dispatch [:active-var (:code item)])]))]\r\n                ;(rf/dispatch [:active-var (:code item)])\r\n                ;[line :color \"#CA3E47\" :class \"separatorvline\"]\r\n                ]]))\r\n\r\n(defn overview []\r\n  [label :label \"hi\"])\r\n\r\n(defn marginal []\r\n  [label :label \"hi\"])\r\n\r\n\r\n(defn portfolio-proxy-table []\r\n  ;(println @(rf/subscribe [:var/portfolio-proxies]))\r\n  [:> ReactTable\r\n   {:data                @(rf/subscribe [:var/portfolio-proxies])\r\n    :columns             [{:Header \"Bond\"             :accessor \"bond\"    :width 150}\r\n                          {:Header \"Days with data\"   :accessor \"days\"    :width 150}\r\n                          {:Header \"Proxy\"            :accessor \"proxy\"   :width 150}\r\n                          {:Header \"Adjust duration?\" :accessor \"adjdur\"  :width 150}]\r\n    :showPagination      true\r\n    :sortable            false\r\n    :filterable          true\r\n    :defaultFilterMethod tables/case-insensitive-filter\r\n    :pageSize            25\r\n    :className           \"-striped\"}])\r\n\r\n(defn var-table []\r\n    [:> ReactTable\r\n     {:data                @(rf/subscribe [:var/table])\r\n      :columns             [{:Header \"Period\"     :accessor \"id\"     :width 90}\r\n                            {:Header \"Volatility\" :accessor \"std\"    :width 90 :style {:textAlign \"right\"} :Cell tables/round1pc}\r\n                            {:Header \"Index Beta\" :accessor \"beta\"   :width 90 :style {:textAlign \"right\"} :Cell tables/round1}\r\n                            {:Header \"Index R2\"   :accessor \"rsq\"    :width 90 :style {:textAlign \"right\"} :Cell tables/round0pc}\r\n                            {:Header \"95% VaR\"    :accessor \"var95\"  :width 90 :style {:textAlign \"right\"} :Cell tables/round1pc}\r\n                            {:Header \"99% VaR\"    :accessor \"var99\"  :width 90 :style {:textAlign \"right\"} :Cell tables/round1pc}\r\n                            {:Header \"Max loss (*)\"   :accessor \"maxd\"   :width 90 :style {:textAlign \"right\"} :Cell tables/round1pc}\r\n                            ]\r\n      :showPagination      false\r\n      :sortable            false\r\n      :filterable          false\r\n      :pageSize            6\r\n      :className           \"-striped\"}])\r\n\r\n\r\n(def dropdown-width \"150px\")\r\n\r\n\r\n(defn var-table-view []\r\n  [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n   :children [[title :label \"Backtested VaR\" :level :level1]\r\n              [var-table]\r\n              [p \"(*) Max loss goes backwards in time hence can be smaller than VaR.\"]]])\r\n\r\n\r\n(defn backtest-chart []\r\n  (let [dates @(rf/subscribe [:var/dates])\r\n        data @(rf/subscribe [:var/data])\r\n        chart-period @(rf/subscribe [:var/chart-period])\r\n        line (first (filter #(= (:id %) chart-period) static/var-charts-choice-map))\r\n        days (case (line :frequency) :daily (* (line :period) 250) :weekly (* (line :period) 52) :monthly (* (line :period) 12))]\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label \"Backtested portfolio value\" :level :level1]\r\n                 [oz/vega-lite (charting/backtest-chart\r\n                                 (take-last days (get-in dates [(line :frequency)]))\r\n                                 (take-last days (get-in data [:portfolio-value (line :frequency)]))\r\n                                 550 550)]]]))\r\n\r\n(defn histogram-chart []\r\n  (let [dates @(rf/subscribe [:var/dates])\r\n        data @(rf/subscribe [:var/data])\r\n        chart-period @(rf/subscribe [:var/chart-period])\r\n        line (first (filter #(= (:id %) chart-period) static/var-charts-choice-map))\r\n        days (case (line :frequency) :daily (* (line :period) 250) :weekly (* (line :period) 52) :monthly (* (line :period) 12))]\r\n    [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n     :children [[title :label \"Return histogram\" :level :level1]\r\n                [oz/vega-lite (charting/return-histogram\r\n                                (take-last days (get-in data [:portfolio-returns (line :frequency)]))\r\n                                550 550)]\r\n                ]]))\r\n\r\n\r\n(defn var-controller []\r\n  (let [portfolio-map (into [] (for [p @(rf/subscribe [:portfolios])] {:id p :label p}))\r\n        portfolio (rf/subscribe [:var/portfolio])\r\n        chart-period (rf/subscribe [:var/chart-period])]\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label \"Display selection\" :level :level1]\r\n                 [h-box :gap \"20px\" :padding \"0px 20px 0px 0px\"\r\n                  :children [[title :label \"Portfolio:\" :level :level3]\r\n                             [single-dropdown :width dropdown-width :model portfolio :choices portfolio-map :on-change #(rf/dispatch [:get-portfolio-var %])]\r\n                             [gap :size \"20px\"]\r\n                             [title :label \"Chart period:\" :level :level3]\r\n                             [single-dropdown :width dropdown-width :model chart-period :choices static/var-charts-choice-map :on-change #(rf/dispatch [:var/chart-period %])]]]]]))\r\n\r\n\r\n\r\n\r\n;;;;;;;;;;;;;;;;;;;;;;;;;\r\n\r\n\r\n\r\n(defn proxy-table []\r\n  (let [data @(rf/subscribe [:var/proxies])\r\n        display (sort-by :bond (into [] (for [[k v] data] (update (merge {:bond k} v) :adjdur str))))]\r\n    [:> ReactTable\r\n     {:data                display\r\n      :columns             [{:Header \"Bond\"             :accessor \"bond\"    :width 150}\r\n                            {:Header \"Proxy\"            :accessor \"proxy\"   :width 150}\r\n                            {:Header \"Adjust duration?\" :accessor \"adjdur\"  :width 150}]\r\n      :showPagination      true\r\n      :sortable            false\r\n      :filterable          true\r\n      :defaultFilterMethod tables/case-insensitive-filter\r\n      :pageSize            25\r\n      :className           \"-striped\"}]))\r\n\r\n(defn proxy-table-view []\r\n   [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n    :children [[title :label \"Bond proxies\" :level :level1]\r\n               [proxy-table]]])\r\n\r\n(defn portfolio-proxies []\r\n   [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n    :children [[title :label \"Bond proxies\" :level :level1]\r\n               [portfolio-proxy-table]]])\r\n\r\n(defn active-home []\r\n  (let [active-var @(rf/subscribe [:active-var])]\r\n    (.scrollTo js/window 0 0)                             ;on view change we go back to top\r\n    (case active-var\r\n      :overview                       [v-box :width \"850px\"\r\n                                       :gap \"20px\"\r\n                                       :padding \"80px 20px\"\r\n                                       :class \"rightelement\"  :children [[h-box :align :start :children [[var-controller] ]]\r\n                                                                                   [h-box :align :start :children [[var-table-view] ]]\r\n                                                                                   [h-box :align :start :children [[backtest-chart]]]\r\n                                                                         [h-box :align :start :children [[histogram-chart]]]\r\n                                                                                  [h-box :align :start :children [[portfolio-proxies]]]]]\r\n      :marginal                       [marginal]\r\n      :proxies [proxy-table-view]\r\n      [:div.output \"nothing to display\"])))\r\n\r\n\r\n(defn var-view []\r\n  [h-box :gap \"10px\"\r\n   ;:style {:overflow \"hidden\"}\r\n   :padding \"0px\"\r\n   :children [[nav-var-bar] [active-home]]])\r\n"]}