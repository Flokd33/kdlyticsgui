{"version":3,"sources":["jasminegui/var.cljs"],"mappings":"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","names":["G__47788","G__47789","re-frame.core/reg-sub","db","regression","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","risk","jasminegui.var/nav-var-bar","cljs.core/deref","active-var","G__47790","re-frame.core/subscribe","re-com.core/h-box","re-com.core/v-box","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4529__auto__","s__47792","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__47794","cljs.core/chunk-buffer","i__47793","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__47791","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","item","jasminegui.static/var-navigation","re-com.core/button","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__47795","G__47796","re-frame.core/dispatch","jasminegui.var/overview","re-com.core/label","jasminegui.var/marginal","jasminegui.var/var-table","display","js/module$node_modules$react_table$lib$index.default","G__47797","jasminegui.tables/round1pc","jasminegui.tables/round1","jasminegui.tables/round0pc","jasminegui.var/dropdown-width","jasminegui.var/var-table-view","p1__47798#","portfolio-map","s__47800","b__47802","i__47801","iter__47799","p","G__47803","portfolio","G__47804","re-com.core/box","re-com.core/title","re-com.core/single-dropdown","G__47805","re-com.core/p","jasminegui.var/backtest-chart","dates","G__47806","data","G__47807","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","oz.core/vega-lite","jasminegui.charting/backtest-chart","jasminegui.var/proxy-table","G__47808","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","s__47810","b__47812","i__47811","vec__47813","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","iter__47809","vec__47816","k","v","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core/str","jasminegui.tables/case-insensitive-filter","jasminegui.var/proxy-table-view","jasminegui.var/active-home","G__47819","js/window","G__47820","cljs.core/Keyword","jasminegui.var/var-view","cljs.core/chunk-first"],"sourcesContent":["(ns jasminegui.var\r\n  (:require\r\n    [re-frame.core :as rf]\r\n    [reagent.core :as reagent]\r\n    [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                         single-dropdown hyperlink\r\n                         input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n    [re-com.box :refer [h-box-args-desc v-box-args-desc box-args-desc gap-args-desc line-args-desc scroller-args-desc border-args-desc flex-child-style]]\r\n    [re-com.util :refer [px]]\r\n    [re-com.validate :refer [string-or-hiccup? alert-type? vector-of-maps?]]\r\n    [\"react-table\" :as rt :default ReactTable]\r\n    [goog.string :as gstring]\r\n    [goog.string.format]\r\n    [jasminegui.mount :as mount]\r\n    [jasminegui.tables :as tables]\r\n    [jasminegui.static :as static]\r\n    [jasminegui.charting :as charting]\r\n    [oz.core :as oz])\r\n  )\r\n\r\n\r\n;\r\n;{:daily {:beta 1.2260532296491367, :rsq 0.8849355266051778},\r\n; :weekly {:beta 1.318406056405913, :rsq 0.9682877396734104},\r\n; :monthly {:beta 1.3517721344251228, :rsq 0.9896161636479072}}\r\n;\r\n;\r\n;\r\n;\r\n;\r\n;\r\n;\r\n;{:daily {:sd-3y 0.05075792288462579,\r\n;         :sd-1y 0.08181622471933907,\r\n;         :var-3y-99pct -0.01575246019256893,\r\n;         :var-3y-95pct -0.0027800223125257206,\r\n;         :var-1y-99pct -0.027673840035470465,\r\n;         :var-1y-95pct -0.007117672811373987,\r\n;         :maxd-1y -0.1179462293850927,\r\n;         :maxd-3y -0.14836531983027934},\r\n; :weekly {:sd-3y 0.08738352600045841,\r\n;          :sd-1y 0.14156626769555813,\r\n;          :var-3y-99pct -0.08792046764255501,\r\n;          :var-3y-95pct -0.007750608408804038,\r\n;          :var-1y-99pct -0.08792046764255501,\r\n;          :var-1y-95pct -0.017187007926761422,\r\n;          :maxd-1y -0.11505966664407652,\r\n;          :maxd-3y -0.14467278052642674},\r\n; :monthly {:sd-3y 0.13930849870633258,\r\n;           :sd-1y 0.21764709073569768,\r\n;           :var-3y-99pct -0.18965485658006875,\r\n;           :var-3y-95pct -0.02340672603291527,\r\n;           :var-1y-99pct -0.18965485658006875,\r\n;           :var-1y-95pct -0.0021206313396463505,\r\n;           :maxd-1y -0.10090678426046451,\r\n;           :maxd-3y -0.1357390240242926}}\r\n\r\n\r\n\r\n(rf/reg-sub\r\n  :var/table\r\n  (fn [db]\r\n    (let [regression (get-in db [:var/data :regression])\r\n          risk (get-in db [:var/data :risk])]\r\n      [{:id \"Daily 1y\"    :std (get-in risk [:daily :sd-1y])    :beta (get-in regression [:daily :beta-1y])   :rsq (get-in regression [:daily :rsq-1y])   :var95 (get-in risk [:daily :var-1y-95pct])   :var99 (get-in risk [:daily :var-1y-99pct])   :maxd (get-in risk [:daily :maxd-1y])}\r\n       {:id \"Daily 3y\"    :std (get-in risk [:daily :sd-3y])    :beta (get-in regression [:daily :beta-3y])   :rsq (get-in regression [:daily :rsq-3y])   :var95 (get-in risk [:daily :var-3y-95pct])   :var99 (get-in risk [:daily :var-3y-99pct])   :maxd (get-in risk [:daily :maxd-3y])}\r\n       {:id \"Weekly 1y\"   :std (get-in risk [:weekly :sd-1y])   :beta (get-in regression [:weekly :beta-1y])  :rsq (get-in regression [:weekly :rsq-1y])  :var95 (get-in risk [:weekly :var-1y-95pct])  :var99 (get-in risk [:weekly :var-1y-99pct])  :maxd (get-in risk [:weekly :maxd-1y])}\r\n       {:id \"Weekly 3y\"   :std (get-in risk [:weekly :sd-3y])   :beta (get-in regression [:weekly :beta-3y])  :rsq (get-in regression [:weekly :rsq-3y])  :var95 (get-in risk [:weekly :var-3y-95pct])  :var99 (get-in risk [:weekly :var-3y-99pct])  :maxd (get-in risk [:weekly :maxd-3y])}\r\n       {:id \"Monthly 1y\"  :std (get-in risk [:monthly :sd-1y])  :beta (get-in regression [:monthly :beta-1y]) :rsq (get-in regression [:monthly :rsq-1y]) :var95 (get-in risk [:monthly :var-1y-95pct]) :var99 (get-in risk [:monthly :var-1y-99pct]) :maxd (get-in risk [:monthly :maxd-1y])}\r\n       {:id \"Monthly 3y\"  :std (get-in risk [:monthly :sd-3y])  :beta (get-in regression [:monthly :beta-3y]) :rsq (get-in regression [:monthly :rsq-3y]) :var95 (get-in risk [:monthly :var-3y-95pct]) :var99 (get-in risk [:monthly :var-3y-99pct]) :maxd (get-in risk [:monthly :maxd-3y])}])))\r\n\r\n\r\n;(defn var-navigation-dispatch [item]\r\n;  (println item)\r\n;  (rf/dispatch [:active-var (:code item)])\r\n;  (when (and (= item :overview) (nil? @(rf/subscribe [:var/data])))\r\n;    ;this is the first run\r\n;    (rf/dispatch [:get-var-data \"OGEMCORD\"])))\r\n\r\n(defn nav-var-bar []\r\n  (let [active-var @(rf/subscribe [:active-var])]\r\n    [h-box\r\n     :children [[v-box\r\n                 :gap \"20px\"\r\n                 :class \"leftnavbar\"\r\n                 :children (into []\r\n                                 (for [item static/var-navigation]\r\n                                   [button\r\n                                    :class (str \"btn btn-primary btn-block\" (if (and (= active-var (:code item))) \" active\"))\r\n                                    ;:style {:font-size \"12px\"}\r\n                                    :label (:name item)\r\n                                    :on-click #(rf/dispatch [:active-var (:code item)])]))]\r\n                ;(rf/dispatch [:active-var (:code item)])\r\n                ;[line :color \"#CA3E47\" :class \"separatorvline\"]\r\n                ]]))\r\n\r\n(defn overview []\r\n  [label :label \"hi\"])\r\n\r\n(defn marginal []\r\n  [label :label \"hi\"])\r\n\r\n\r\n\r\n(defn var-table []\r\n  (let [                                                    ;data @(rf/subscribe [:var/data])\r\n        display nil]\r\n    [:> ReactTable\r\n     {:data                @(rf/subscribe [:var/table])\r\n      :columns             [{:Header \"Period\"     :accessor \"id\"     :width 90}\r\n                            {:Header \"Volatility\" :accessor \"std\"    :width 90 :style {:textAlign \"right\"} :Cell tables/round1pc}\r\n                            {:Header \"Index Beta\" :accessor \"beta\"   :width 90 :style {:textAlign \"right\"} :Cell tables/round1}\r\n                            {:Header \"Index R2\"   :accessor \"rsq\"    :width 90 :style {:textAlign \"right\"} :Cell tables/round0pc}\r\n                            {:Header \"95% VaR\"    :accessor \"var95\"  :width 90 :style {:textAlign \"right\"} :Cell tables/round1pc}\r\n                            {:Header \"99% VaR\"    :accessor \"var99\"  :width 90 :style {:textAlign \"right\"} :Cell tables/round1pc}\r\n                            {:Header \"Max loss (*)\"   :accessor \"maxd\"   :width 90 :style {:textAlign \"right\"} :Cell tables/round1pc}\r\n                            ]\r\n      :showPagination      false\r\n      :sortable            false\r\n      :filterable          false\r\n      :pageSize            6\r\n      :className           \"-striped -highlight\"}]))\r\n\r\n\r\n(def dropdown-width \"150px\")\r\n\r\n\r\n(defn var-table-view []\r\n  (let [portfolio-map (into [] (for [p @(rf/subscribe [:portfolios])] {:id p :label p}))\r\n        portfolio (rf/subscribe [:var/portfolio])]\r\n    [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label \"Backtested VaR\" :level :level1]\r\n                 [single-dropdown :width dropdown-width :model portfolio :choices portfolio-map :on-change #(rf/dispatch [:var/portfolio %])]\r\n                 [var-table]\r\n                 [p \"(*) Max loss goes backwards in time hence can be smaller than VaR.\"]]]]))\r\n\r\n\r\n(defn backtest-chart []\r\n  (let [dates @(rf/subscribe [:var/dates])\r\n        data @(rf/subscribe [:var/data])]\r\n    (println (get-in dates [:daily]) (get-in data [:portfolio-value :daily]))\r\n    [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label \"Backtested portfolio value\" :level :level1]\r\n                 [oz/vega-lite (charting/backtest-chart (get-in dates [:daily]) (get-in data [:portfolio-value :daily]) 550 550)]\r\n                 ]]]))\r\n\r\n\r\n\r\n\r\n\r\n\r\n;;;;;;;;;;;;;;;;;;;;;;;;;\r\n(defn proxy-table []\r\n  (let [data @(rf/subscribe [:var/proxies])\r\n        display (sort-by :bond (into [] (for [[k v] data] (update (merge {:bond k} v) :adjdur str))))]\r\n    [:> ReactTable\r\n     {:data                display\r\n      :columns             [{:Header \"Bond\"             :accessor \"bond\"    :width 150}\r\n                            {:Header \"Proxy\"            :accessor \"proxy\"   :width 150}\r\n                            {:Header \"Adjust duration?\" :accessor \"adjdur\"  :width 150}]\r\n      :showPagination      true\r\n      :sortable            false\r\n      :filterable          true\r\n      :defaultFilterMethod tables/case-insensitive-filter\r\n      :pageSize            25\r\n      :className           \"-striped -highlight\"}]))\r\n\r\n(defn proxy-table-view []\r\n  [box :class \"subbody rightelement\" :child\r\n   [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n    :children [[title :label \"Bond proxies\" :level :level1]\r\n               [proxy-table]]]])\r\n\r\n(defn active-home []\r\n  (let [active-var @(rf/subscribe [:active-var])]\r\n    (.scrollTo js/window 0 0)                             ;on view change we go back to top\r\n    (case active-var\r\n      :overview                       [h-box :align :start :children [[var-table-view] [backtest-chart]]]\r\n      :marginal                       [marginal]\r\n      :proxies [proxy-table-view]\r\n      [:div.output \"nothing to display\"])))\r\n\r\n\r\n(defn var-view []\r\n  [h-box :gap \"10px\"\r\n   ;:style {:overflow \"hidden\"}\r\n   :padding \"0px\"\r\n   :children [[nav-var-bar] [active-home]]])\r\n"]}