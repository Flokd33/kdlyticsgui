{
"version":3,
"file":"module$node_modules$$tanstack$table_core$build$lib$utils$filterRowsUtils.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@tanstack/table-core/build/lib/utils/filterRowsUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$table_core$build$lib$utils$filterRowsUtils\"] = function(global,require,module,exports) {\n/**\n * table-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar row = require('../core/row.js');\n\nfunction filterRows(rows, filterRowImpl, table) {\n  if (table.options.filterFromLeafRows) {\n    return filterRowModelFromLeafs(rows, filterRowImpl, table);\n  }\n  return filterRowModelFromRoot(rows, filterRowImpl, table);\n}\nfunction filterRowModelFromLeafs(rowsToFilter, filterRow, table) {\n  var _table$options$maxLea;\n  const newFilteredFlatRows = [];\n  const newFilteredRowsById = {};\n  const maxDepth = (_table$options$maxLea = table.options.maxLeafRowFilterDepth) != null ? _table$options$maxLea : 100;\n  const recurseFilterRows = function (rowsToFilter, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n    const rows = [];\n\n    // Filter from children up first\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      var _row$subRows;\n      let row$1 = rowsToFilter[i];\n      const newRow = row.createRow(table, row$1.id, row$1.original, row$1.index, row$1.depth, undefined, row$1.parentId);\n      newRow.columnFilters = row$1.columnFilters;\n      if ((_row$subRows = row$1.subRows) != null && _row$subRows.length && depth < maxDepth) {\n        newRow.subRows = recurseFilterRows(row$1.subRows, depth + 1);\n        row$1 = newRow;\n        if (filterRow(row$1) && !newRow.subRows.length) {\n          rows.push(row$1);\n          newFilteredRowsById[row$1.id] = row$1;\n          newFilteredRowsById[i] = row$1;\n          continue;\n        }\n        if (filterRow(row$1) || newRow.subRows.length) {\n          rows.push(row$1);\n          newFilteredRowsById[row$1.id] = row$1;\n          newFilteredRowsById[i] = row$1;\n          continue;\n        }\n      } else {\n        row$1 = newRow;\n        if (filterRow(row$1)) {\n          rows.push(row$1);\n          newFilteredRowsById[row$1.id] = row$1;\n          newFilteredRowsById[i] = row$1;\n        }\n      }\n    }\n    return rows;\n  };\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById\n  };\n}\nfunction filterRowModelFromRoot(rowsToFilter, filterRow, table) {\n  var _table$options$maxLea2;\n  const newFilteredFlatRows = [];\n  const newFilteredRowsById = {};\n  const maxDepth = (_table$options$maxLea2 = table.options.maxLeafRowFilterDepth) != null ? _table$options$maxLea2 : 100;\n\n  // Filters top level and nested rows\n  const recurseFilterRows = function (rowsToFilter, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n    // Filter from parents downward first\n\n    const rows = [];\n\n    // Apply the filter to any subRows\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row$1 = rowsToFilter[i];\n      const pass = filterRow(row$1);\n      if (pass) {\n        var _row$subRows2;\n        if ((_row$subRows2 = row$1.subRows) != null && _row$subRows2.length && depth < maxDepth) {\n          const newRow = row.createRow(table, row$1.id, row$1.original, row$1.index, row$1.depth, undefined, row$1.parentId);\n          newRow.subRows = recurseFilterRows(row$1.subRows, depth + 1);\n          row$1 = newRow;\n        }\n        rows.push(row$1);\n        newFilteredFlatRows.push(row$1);\n        newFilteredRowsById[row$1.id] = row$1;\n      }\n    }\n    return rows;\n  };\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById\n  };\n}\n\nexports.filterRowModelFromLeafs = filterRowModelFromLeafs;\nexports.filterRowModelFromRoot = filterRowModelFromRoot;\nexports.filterRows = filterRows;\n//# sourceMappingURL=filterRowsUtils.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","filterRowModelFromLeafs","rowsToFilter","filterRow","table","_table$options$maxLea","newFilteredRowsById","maxDepth","options","maxLeafRowFilterDepth","recurseFilterRows","depth","rows","i","length","_row$subRows","row$1","newRow","row","createRow","id","original","index","undefined","parentId","columnFilters","subRows","push","flatRows","newFilteredFlatRows","rowsById","filterRowModelFromRoot","_table$options$maxLea2","pass","_row$subRows2","Object","defineProperty","value","filterRows","filterRowImpl","filterFromLeafRows"]
}
