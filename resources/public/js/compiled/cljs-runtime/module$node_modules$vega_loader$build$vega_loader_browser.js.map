{
"version":3,
"file":"module$node_modules$vega_loader$build$vega_loader_browser.js",
"lineCount":21,
"mappings":"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",
"sources":["node_modules/vega-loader/build/vega-loader.browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_loader$build$vega_loader_browser\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('topojson-client'), require('vega-format')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'topojson-client', 'vega-format'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.topojson, global.vega));\n})(this, (function (exports, vegaUtil, topojsonClient, vegaFormat) { 'use strict';\n\n  // Matches absolute URLs with optional protocol\n  //   https://...    file://...    //...\n  const protocol_re = /^(data:|([A-Za-z]+:)?\\/\\/)/;\n\n  // Matches allowed URIs. From https://github.com/cure53/DOMPurify/blob/master/src/regexp.js with added file://\n  const allowed_re = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp|file|data):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i; // eslint-disable-line no-useless-escape\n  const whitespace_re = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\n\n  // Special treatment in node.js for the file: protocol\n  const fileProtocol = 'file://';\n\n  /**\n   * Factory for a loader constructor that provides methods for requesting\n   * files from either the network or disk, and for sanitizing request URIs.\n   * @param {function} fetch - The Fetch API for HTTP network requests.\n   *   If null or undefined, HTTP loading will be disabled.\n   * @param {object} fs - The file system interface for file loading.\n   *   If null or undefined, local file loading will be disabled.\n   * @return {function} A loader constructor with the following signature:\n   *   param {object} [options] - Optional default loading options to use.\n   *   return {object} - A new loader instance.\n   */\n  function loaderFactory (fetch, fs) {\n    return options => ({\n      options: options || {},\n      sanitize: sanitize,\n      load: load,\n      fileAccess: !!fs,\n      file: fileLoader(fs),\n      http: httpLoader(fetch)\n    });\n  }\n\n  /**\n   * Load an external resource, typically either from the web or from the local\n   * filesystem. This function uses {@link sanitize} to first sanitize the uri,\n   * then calls either {@link http} (for web requests) or {@link file} (for\n   * filesystem loading).\n   * @param {string} uri - The resource indicator (e.g., URL or filename).\n   * @param {object} [options] - Optional loading options. These options will\n   *   override any existing default options.\n   * @return {Promise} - A promise that resolves to the loaded content.\n   */\n  async function load(uri, options) {\n    const opt = await this.sanitize(uri, options),\n      url = opt.href;\n    return opt.localFile ? this.file(url) : this.http(url, options);\n  }\n\n  /**\n   * URI sanitizer function.\n   * @param {string} uri - The uri (url or filename) to check.\n   * @param {object} options - An options hash.\n   * @return {Promise} - A promise that resolves to an object containing\n   *  sanitized uri data, or rejects it the input uri is deemed invalid.\n   *  The properties of the resolved object are assumed to be\n   *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be\n   *  provided by the 'href' property of the returned object.\n   */\n  async function sanitize(uri, options) {\n    options = vegaUtil.extend({}, this.options, options);\n    const fileAccess = this.fileAccess,\n      result = {\n        href: null\n      };\n    let isFile, loadFile, base;\n    const isAllowed = allowed_re.test(uri.replace(whitespace_re, ''));\n    if (uri == null || typeof uri !== 'string' || !isAllowed) {\n      vegaUtil.error('Sanitize failure, invalid URI: ' + vegaUtil.stringValue(uri));\n    }\n    const hasProtocol = protocol_re.test(uri);\n\n    // if relative url (no protocol/host), prepend baseURL\n    if ((base = options.baseURL) && !hasProtocol) {\n      // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n      if (!uri.startsWith('/') && !base.endsWith('/')) {\n        uri = '/' + uri;\n      }\n      uri = base + uri;\n    }\n\n    // should we load from file system?\n    loadFile = (isFile = uri.startsWith(fileProtocol)) || options.mode === 'file' || options.mode !== 'http' && !hasProtocol && fileAccess;\n    if (isFile) {\n      // strip file protocol\n      uri = uri.slice(fileProtocol.length);\n    } else if (uri.startsWith('//')) {\n      if (options.defaultProtocol === 'file') {\n        // if is file, strip protocol and set loadFile flag\n        uri = uri.slice(2);\n        loadFile = true;\n      } else {\n        // if relative protocol (starts with '//'), prepend default protocol\n        uri = (options.defaultProtocol || 'http') + ':' + uri;\n      }\n    }\n\n    // set non-enumerable mode flag to indicate local file load\n    Object.defineProperty(result, 'localFile', {\n      value: !!loadFile\n    });\n\n    // set uri\n    result.href = uri;\n\n    // set default result target, if specified\n    if (options.target) {\n      result.target = options.target + '';\n    }\n\n    // set default result rel, if specified (#1542)\n    if (options.rel) {\n      result.rel = options.rel + '';\n    }\n\n    // provide control over cross-origin image handling (#2238)\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n    if (options.context === 'image' && options.crossOrigin) {\n      result.crossOrigin = options.crossOrigin + '';\n    }\n\n    // return\n    return result;\n  }\n\n  /**\n   * File system loader factory.\n   * @param {object} fs - The file system interface.\n   * @return {function} - A file loader with the following signature:\n   *   param {string} filename - The file system path to load.\n   *   param {string} filename - The file system path to load.\n   *   return {Promise} A promise that resolves to the file contents.\n   */\n  function fileLoader(fs) {\n    return fs ? filename => new Promise((accept, reject) => {\n      fs.readFile(filename, (error, data) => {\n        if (error) reject(error);else accept(data);\n      });\n    }) : fileReject;\n  }\n\n  /**\n   * Default file system loader that simply rejects.\n   */\n  async function fileReject() {\n    vegaUtil.error('No file system access.');\n  }\n\n  /**\n   * HTTP request handler factory.\n   * @param {function} fetch - The Fetch API method.\n   * @return {function} - An http loader with the following signature:\n   *   param {string} url - The url to request.\n   *   param {object} options - An options hash.\n   *   return {Promise} - A promise that resolves to the file contents.\n   */\n  function httpLoader(fetch) {\n    return fetch ? async function (url, options) {\n      const opt = vegaUtil.extend({}, this.options.http, options),\n        type = options && options.response,\n        response = await fetch(url, opt);\n      return !response.ok ? vegaUtil.error(response.status + '' + response.statusText) : vegaUtil.isFunction(response[type]) ? response[type]() : response.text();\n    } : httpReject;\n  }\n\n  /**\n   * Default http request handler that simply rejects.\n   */\n  async function httpReject() {\n    vegaUtil.error('No HTTP fetch method available.');\n  }\n\n  const isValid = _ => _ != null && _ === _;\n  const isBoolean = _ => _ === 'true' || _ === 'false' || _ === true || _ === false;\n  const isDate = _ => !Number.isNaN(Date.parse(_));\n  const isNumber = _ => !Number.isNaN(+_) && !(_ instanceof Date);\n  const isInteger = _ => isNumber(_) && Number.isInteger(+_);\n  const typeParsers = {\n    boolean: vegaUtil.toBoolean,\n    integer: vegaUtil.toNumber,\n    number: vegaUtil.toNumber,\n    date: vegaUtil.toDate,\n    string: vegaUtil.toString,\n    unknown: vegaUtil.identity\n  };\n  const typeTests = [isBoolean, isInteger, isNumber, isDate];\n  const typeList = ['boolean', 'integer', 'number', 'date'];\n  function inferType(values, field) {\n    if (!values || !values.length) return 'unknown';\n    const n = values.length,\n      m = typeTests.length,\n      a = typeTests.map((_, i) => i + 1);\n    for (let i = 0, t = 0, j, value; i < n; ++i) {\n      value = field ? values[i][field] : values[i];\n      for (j = 0; j < m; ++j) {\n        if (a[j] && isValid(value) && !typeTests[j](value)) {\n          a[j] = 0;\n          ++t;\n          if (t === typeTests.length) return 'string';\n        }\n      }\n    }\n    return typeList[a.reduce((u, v) => u === 0 ? v : u, 0) - 1];\n  }\n  function inferTypes(data, fields) {\n    return fields.reduce((types, field) => {\n      types[field] = inferType(data, field);\n      return types;\n    }, {});\n  }\n\n  var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n    }).join(\",\") + \"}\");\n  }\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function (row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n      columns = [];\n    rows.forEach(function (row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n    return columns;\n  }\n  function pad(value, width) {\n    var s = value + \"\",\n      length = s.length;\n    return length < width ? new Array(width - length + 1).join(0) + s : s;\n  }\n  function formatYear(year) {\n    return year < 0 ? \"-\" + pad(-year, 6) : year > 9999 ? \"+\" + pad(year, 6) : pad(year, 4);\n  }\n  function formatDate(date) {\n    var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n    return isNaN(date) ? \"Invalid Date\" : formatYear(date.getUTCFullYear()) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2) + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\" : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\" : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\" : \"\");\n  }\n  function dsvFormat (delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n    function parse(text, f) {\n      var convert,\n        columns,\n        rows = parseRows(text, function (row, i) {\n          if (convert) return convert(row, i - 1);\n          columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n        });\n      rows.columns = columns || [];\n      return rows;\n    }\n    function parseRows(text, f) {\n      var rows = [],\n        // output rows\n        N = text.length,\n        I = 0,\n        // current character index\n        n = 0,\n        // current line number\n        t,\n        // current token\n        eof = N <= 0,\n        // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n      // Strip the trailing newline.\n      if (text.charCodeAt(N - 1) === NEWLINE) --N;\n      if (text.charCodeAt(N - 1) === RETURN) --N;\n      function token() {\n        if (eof) return EOF;\n        if (eol) return eol = false, EOL;\n\n        // Unescape quotes.\n        var i,\n          j = I,\n          c;\n        if (text.charCodeAt(j) === QUOTE) {\n          while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n          if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n            eol = true;\n            if (text.charCodeAt(I) === NEWLINE) ++I;\n          }\n          return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // Find next delimiter or newline.\n        while (I < N) {\n          if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n            eol = true;\n            if (text.charCodeAt(I) === NEWLINE) ++I;\n          } else if (c !== DELIMITER) continue;\n          return text.slice(j, i);\n        }\n\n        // Return last token before EOF.\n        return eof = true, text.slice(j, N);\n      }\n      while ((t = token()) !== EOF) {\n        var row = [];\n        while (t !== EOL && t !== EOF) row.push(t), t = token();\n        if (f && (row = f(row, n++)) == null) continue;\n        rows.push(row);\n      }\n      return rows;\n    }\n    function preformatBody(rows, columns) {\n      return rows.map(function (row) {\n        return columns.map(function (column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      });\n    }\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n    }\n    function formatBody(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return preformatBody(rows, columns).join(\"\\n\");\n    }\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(value) {\n      return value == null ? \"\" : value instanceof Date ? formatDate(value) : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : value;\n    }\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatBody: formatBody,\n      formatRows: formatRows,\n      formatRow: formatRow,\n      formatValue: formatValue\n    };\n  }\n\n  function delimitedFormat(delimiter) {\n    const parse = function (data, format) {\n      const delim = {\n        delimiter: delimiter\n      };\n      return dsv(data, format ? vegaUtil.extend(format, delim) : delim);\n    };\n    parse.responseType = 'text';\n    return parse;\n  }\n  function dsv(data, format) {\n    if (format.header) {\n      data = format.header.map(vegaUtil.stringValue).join(format.delimiter) + '\\n' + data;\n    }\n    return dsvFormat(format.delimiter).parse(data + '');\n  }\n  dsv.responseType = 'text';\n\n  function isBuffer(_) {\n    return typeof Buffer === 'function' && vegaUtil.isFunction(Buffer.isBuffer) ? Buffer.isBuffer(_) : false;\n  }\n  function json(data, format) {\n    const prop = format && format.property ? vegaUtil.field(format.property) : vegaUtil.identity;\n    return vegaUtil.isObject(data) && !isBuffer(data) ? parseJSON(prop(data), format) : prop(JSON.parse(data));\n  }\n  json.responseType = 'json';\n  function parseJSON(data, format) {\n    if (!vegaUtil.isArray(data) && vegaUtil.isIterable(data)) {\n      data = [...data];\n    }\n    return format && format.copy ? JSON.parse(JSON.stringify(data)) : data;\n  }\n\n  const filters = {\n    interior: (a, b) => a !== b,\n    exterior: (a, b) => a === b\n  };\n  function topojson(data, format) {\n    let method, object, property, filter;\n    data = json(data, format);\n    if (format && format.feature) {\n      method = topojsonClient.feature;\n      property = format.feature;\n    } else if (format && format.mesh) {\n      method = topojsonClient.mesh;\n      property = format.mesh;\n      filter = filters[format.filter];\n    } else {\n      vegaUtil.error('Missing TopoJSON feature or mesh parameter.');\n    }\n    object = (object = data.objects[property]) ? method(data, object, filter) : vegaUtil.error('Invalid TopoJSON object: ' + property);\n    return object && object.features || [object];\n  }\n  topojson.responseType = 'json';\n\n  const format = {\n    dsv: dsv,\n    csv: delimitedFormat(','),\n    tsv: delimitedFormat('\\t'),\n    json: json,\n    topojson: topojson\n  };\n  function formats(name, reader) {\n    if (arguments.length > 1) {\n      format[name] = reader;\n      return this;\n    } else {\n      return vegaUtil.hasOwnProperty(format, name) ? format[name] : null;\n    }\n  }\n  function responseType(type) {\n    const f = formats(type);\n    return f && f.responseType || 'text';\n  }\n\n  function read (data, schema, timeParser, utcParser) {\n    schema = schema || {};\n    const reader = formats(schema.type || 'json');\n    if (!reader) vegaUtil.error('Unknown data format type: ' + schema.type);\n    data = reader(data, schema);\n    if (schema.parse) parse(data, schema.parse, timeParser, utcParser);\n    if (vegaUtil.hasOwnProperty(data, 'columns')) delete data.columns;\n    return data;\n  }\n  function parse(data, types, timeParser, utcParser) {\n    if (!data.length) return; // early exit for empty data\n\n    const locale = vegaFormat.timeFormatDefaultLocale();\n    timeParser = timeParser || locale.timeParse;\n    utcParser = utcParser || locale.utcParse;\n    let fields = data.columns || Object.keys(data[0]),\n      datum,\n      field,\n      i,\n      j,\n      n,\n      m;\n    if (types === 'auto') types = inferTypes(data, fields);\n    fields = Object.keys(types);\n    const parsers = fields.map(field => {\n      const type = types[field];\n      let parts, pattern;\n      if (type && (type.startsWith('date:') || type.startsWith('utc:'))) {\n        parts = type.split(/:(.+)?/, 2); // split on first :\n        pattern = parts[1];\n        if (pattern[0] === '\\'' && pattern[pattern.length - 1] === '\\'' || pattern[0] === '\"' && pattern[pattern.length - 1] === '\"') {\n          pattern = pattern.slice(1, -1);\n        }\n        const parse = parts[0] === 'utc' ? utcParser : timeParser;\n        return parse(pattern);\n      }\n      if (!typeParsers[type]) {\n        throw Error('Illegal format pattern: ' + field + ':' + type);\n      }\n      return typeParsers[type];\n    });\n    for (i = 0, n = data.length, m = fields.length; i < n; ++i) {\n      datum = data[i];\n      for (j = 0; j < m; ++j) {\n        field = fields[j];\n        datum[field] = parsers[j](datum[field]);\n      }\n    }\n  }\n\n  const loader = loaderFactory(typeof fetch !== 'undefined' && fetch,\n  // use built-in fetch API\n  null // no file system access\n  );\n\n  exports.format = format;\n  exports.formats = formats;\n  exports.inferType = inferType;\n  exports.inferTypes = inferTypes;\n  exports.loader = loader;\n  exports.read = read;\n  exports.responseType = responseType;\n  exports.typeParsers = typeParsers;\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","factory","define","amd","globalThis","self","vega","topojson","vegaUtil","topojsonClient","vegaFormat","load","uri","options","opt","sanitize","url","href","localFile","file","http","extend","fileAccess","result","isFile","loadFile","isAllowed","allowed_re","test","replace","whitespace_re","error","stringValue","hasProtocol","protocol_re","base","baseURL","startsWith","endsWith","fileProtocol","mode","slice","length","defaultProtocol","Object","defineProperty","value","target","rel","context","crossOrigin","fileLoader","fs","filename","Promise","accept","reject","readFile","data","fileReject","httpLoader","fetch","type","response","ok","isFunction","text","status","statusText","httpReject","inferType","values","field","n","m","typeTests","a","map","_","i","t","j","typeList","reduce","u","v","inferTypes","fields","types","objectConverter","columns","Function","name","JSON","stringify","join","customConverter","f","object","row","inferColumns","rows","columnSet","create","forEach","column","push","pad","width","s","Array","dsvFormat","delimiter","parseRows","token","eof","EOF","eol","EOL","I","c","QUOTE","charCodeAt","N","NEWLINE","RETURN","DELIMITER","preformatBody","formatValue","formatRow","hours","date","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","year","reFormat","RegExp","parse","convert","format","concat","formatBody","formatRows","delimitedFormat","delim","dsv","responseType","header","json","prop","property","identity","isBuffer","isArray","isIterable","copy","method","filter","feature","mesh","filters","objects","features","formats","reader","arguments","hasOwnProperty","timeParser","utcParser","locale","timeFormatDefaultLocale","timeParse","utcParse","keys","parsers","parts","split","pattern","typeParsers","Error","datum","isNumber","Number","Date","boolean","toBoolean","integer","toNumber","number","toDate","string","toString","unknown","isBoolean","isInteger","isDate","interior","b","exterior","csv","tsv","loader","loaderFactory","read","schema"]
}
