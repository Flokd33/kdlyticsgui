{
"version":3,
"file":"module$node_modules$vega_geo$build$vega_geo.js",
"lineCount":68,
"mappings":"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",
"sources":["node_modules/vega-geo/build/vega-geo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_geo$build$vega_geo\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-util'), require('vega-statistics'), require('vega-projection'), require('vega-canvas')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-util', 'vega-statistics', 'vega-projection', 'vega-canvas'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega, global.vega, global.vega));\n})(this, (function (exports, vegaDataflow, vegaUtil, vegaStatistics, vegaProjection, vegaCanvas) { 'use strict';\n\n  const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n  function tickSpec(start, stop, count) {\n    const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n    let i1, i2, inc;\n    if (power < 0) {\n      inc = Math.pow(10, -power) / factor;\n      i1 = Math.round(start * inc);\n      i2 = Math.round(stop * inc);\n      if (i1 / inc < start) ++i1;\n      if (i2 / inc > stop) --i2;\n      inc = -inc;\n    } else {\n      inc = Math.pow(10, power) * factor;\n      i1 = Math.round(start / inc);\n      i2 = Math.round(stop / inc);\n      if (i1 * inc < start) ++i1;\n      if (i2 * inc > stop) --i2;\n    }\n    if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n    return [i1, i2, inc];\n  }\n  function tickIncrement(start, stop, count) {\n    stop = +stop, start = +start, count = +count;\n    return tickSpec(start, stop, count)[2];\n  }\n  function tickStep(start, stop, count) {\n    stop = +stop, start = +start, count = +count;\n    const reverse = stop < start,\n      inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n    return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n  }\n\n  function max(values, valueof) {\n    let max;\n    if (valueof === undefined) {\n      for (const value of values) {\n        if (value != null && (max < value || max === undefined && value >= value)) {\n          max = value;\n        }\n      }\n    } else {\n      let index = -1;\n      for (let value of values) {\n        if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) {\n          max = value;\n        }\n      }\n    }\n    return max;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n    var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n    return range;\n  }\n\n  function sum(values, valueof) {\n    let sum = 0;\n    if (valueof === undefined) {\n      for (let value of values) {\n        if (value = +value) {\n          sum += value;\n        }\n      }\n    } else {\n      let index = -1;\n      for (let value of values) {\n        if (value = +valueof(value, ++index, values)) {\n          sum += value;\n        }\n      }\n    }\n    return sum;\n  }\n\n  function noop() {}\n  const cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];\n\n  // Implementation adapted from d3/d3-contour. Thanks!\n  function contours () {\n    var dx = 1,\n      dy = 1,\n      smooth = smoothLinear;\n    function contours(values, tz) {\n      return tz.map(value => contour(values, value));\n    }\n\n    // Accumulate, smooth contour rings, assign holes to exterior rings.\n    // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n    function contour(values, value) {\n      var polygons = [],\n        holes = [];\n      isorings(values, value, ring => {\n        smooth(ring, values, value);\n        if (area(ring) > 0) polygons.push([ring]);else holes.push(ring);\n      });\n      holes.forEach(hole => {\n        for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n          if (contains((polygon = polygons[i])[0], hole) !== -1) {\n            polygon.push(hole);\n            return;\n          }\n        }\n      });\n      return {\n        type: 'MultiPolygon',\n        value: value,\n        coordinates: polygons\n      };\n    }\n\n    // Marching squares with isolines stitched into rings.\n    // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n    function isorings(values, value, callback) {\n      var fragmentByStart = new Array(),\n        fragmentByEnd = new Array(),\n        x,\n        y,\n        t0,\n        t1,\n        t2,\n        t3;\n\n      // Special case for the first row (y = -1, t2 = t3 = 0).\n      x = y = -1;\n      t1 = values[0] >= value;\n      cases[t1 << 1].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[x + 1] >= value;\n        cases[t0 | t1 << 1].forEach(stitch);\n      }\n      cases[t1 << 0].forEach(stitch);\n\n      // General case for the intermediate rows.\n      while (++y < dy - 1) {\n        x = -1;\n        t1 = values[y * dx + dx] >= value;\n        t2 = values[y * dx] >= value;\n        cases[t1 << 1 | t2 << 2].forEach(stitch);\n        while (++x < dx - 1) {\n          t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n          t3 = t2, t2 = values[y * dx + x + 1] >= value;\n          cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n        }\n        cases[t1 | t2 << 3].forEach(stitch);\n      }\n\n      // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n      x = -1;\n      t2 = values[y * dx] >= value;\n      cases[t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t2 << 3].forEach(stitch);\n      function stitch(line) {\n        var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f,\n          g;\n        if (f = fragmentByEnd[startIndex]) {\n          if (g = fragmentByStart[endIndex]) {\n            delete fragmentByEnd[f.end];\n            delete fragmentByStart[g.start];\n            if (f === g) {\n              f.ring.push(end);\n              callback(f.ring);\n            } else {\n              fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n                start: f.start,\n                end: g.end,\n                ring: f.ring.concat(g.ring)\n              };\n            }\n          } else {\n            delete fragmentByEnd[f.end];\n            f.ring.push(end);\n            fragmentByEnd[f.end = endIndex] = f;\n          }\n        } else if (f = fragmentByStart[endIndex]) {\n          if (g = fragmentByEnd[startIndex]) {\n            delete fragmentByStart[f.start];\n            delete fragmentByEnd[g.end];\n            if (f === g) {\n              f.ring.push(end);\n              callback(f.ring);\n            } else {\n              fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n                start: g.start,\n                end: f.end,\n                ring: g.ring.concat(f.ring)\n              };\n            }\n          } else {\n            delete fragmentByStart[f.start];\n            f.ring.unshift(start);\n            fragmentByStart[f.start = startIndex] = f;\n          }\n        } else {\n          fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n            start: startIndex,\n            end: endIndex,\n            ring: [start, end]\n          };\n        }\n      }\n    }\n    function index(point) {\n      return point[0] * 2 + point[1] * (dx + 1) * 4;\n    }\n    function smoothLinear(ring, values, value) {\n      ring.forEach(point => {\n        var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n        if (x > 0 && x < dx && xt === x) {\n          v0 = values[yt * dx + xt - 1];\n          point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n        }\n        if (y > 0 && y < dy && yt === y) {\n          v0 = values[(yt - 1) * dx + xt];\n          point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n        }\n      });\n    }\n    contours.contour = contour;\n    contours.size = function (_) {\n      if (!arguments.length) return [dx, dy];\n      var _0 = Math.floor(_[0]),\n        _1 = Math.floor(_[1]);\n      if (!(_0 >= 0 && _1 >= 0)) vegaUtil.error('invalid size');\n      return dx = _0, dy = _1, contours;\n    };\n    contours.smooth = function (_) {\n      return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n    };\n    return contours;\n  }\n  function area(ring) {\n    var i = 0,\n      n = ring.length,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n    while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n    return area;\n  }\n  function contains(ring, hole) {\n    var i = -1,\n      n = hole.length,\n      c;\n    while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n    return 0;\n  }\n  function ringContains(ring, point) {\n    var x = point[0],\n      y = point[1],\n      contains = -1;\n    for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n      var pi = ring[i],\n        xi = pi[0],\n        yi = pi[1],\n        pj = ring[j],\n        xj = pj[0],\n        yj = pj[1];\n      if (segmentContains(pi, pj, point)) return 0;\n      if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n    }\n    return contains;\n  }\n  function segmentContains(a, b, c) {\n    var i;\n    return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n  }\n  function collinear(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n  }\n  function within(p, q, r) {\n    return p <= q && q <= r || r <= q && q <= p;\n  }\n\n  function quantize (k, nice, zero) {\n    return function (values) {\n      var ex = vegaUtil.extent(values),\n        start = zero ? Math.min(ex[0], 0) : ex[0],\n        stop = ex[1],\n        span = stop - start,\n        step = nice ? tickStep(start, stop, k) : span / (k + 1);\n      return range(start + step, stop, step);\n    };\n  }\n\n  /**\n   * Generate isocontours (level sets) based on input raster grid data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} [params.field] - The field with raster grid\n   *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n   * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n   *   specified, the levels, nice, resolve, and zero parameters are ignored.\n   * @param {number} [params.levels] - The desired number of contour levels.\n   * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n   *   threshold values should be automatically aligned to \"nice\"\n   *   human-friendly values. Setting this flag may cause the number of\n   *   thresholds to deviate from the specified levels.\n   * @param {string} [params.resolve] - The method for resolving thresholds\n   *   across multiple input grids. If 'independent' (the default), threshold\n   *   calculation will be performed separately for each grid. If 'shared', a\n   *   single set of threshold values will be used for all input grids.\n   * @param {boolean} [params.zero] - Boolean flag indicating if the contour\n   *   threshold values should include zero.\n   * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n   *   polygons should be smoothed using linear interpolation. The default is\n   *   true. The parameter is ignored when using density estimation.\n   * @param {boolean} [params.scale] - Optional numerical value by which to\n   *   scale the output isocontour coordinates. This parameter can be useful\n   *   to scale the contours to match a desired output resolution.\n   * @param {string} [params.as='contour'] - The output field in which to store\n   *   the generated isocontour data (default 'contour').\n   */\n  function Isocontour(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Isocontour.Definition = {\n    'type': 'Isocontour',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'thresholds',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'levels',\n      'type': 'number'\n    }, {\n      'name': 'nice',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'resolve',\n      'type': 'enum',\n      'values': ['shared', 'independent'],\n      'default': 'independent'\n    }, {\n      'name': 'zero',\n      'type': 'boolean',\n      'default': true\n    }, {\n      'name': 'smooth',\n      'type': 'boolean',\n      'default': true\n    }, {\n      'name': 'scale',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'translate',\n      'type': 'number',\n      'array': true,\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'null': true,\n      'default': 'contour'\n    }]\n  };\n  vegaUtil.inherits(Isocontour, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        source = pulse.materialize(pulse.SOURCE).source,\n        field = _.field || vegaUtil.identity,\n        contour = contours().smooth(_.smooth !== false),\n        tz = _.thresholds || levels(source, field, _),\n        as = _.as === null ? null : _.as || 'contour',\n        values = [];\n      source.forEach(t => {\n        const grid = field(t);\n\n        // generate contour paths in GeoJSON format\n        const paths = contour.size([grid.width, grid.height])(grid.values, vegaUtil.isArray(tz) ? tz : tz(grid.values));\n\n        // adjust contour path coordinates as needed\n        transformPaths(paths, grid, t, _);\n\n        // ingest; copy source data properties to output\n        paths.forEach(p => {\n          values.push(vegaDataflow.rederive(t, vegaDataflow.ingest(as != null ? {\n            [as]: p\n          } : p)));\n        });\n      });\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = values;\n      return out;\n    }\n  });\n  function levels(values, f, _) {\n    const q = quantize(_.levels || 10, _.nice, _.zero !== false);\n    return _.resolve !== 'shared' ? q : q(values.map(t => max(f(t).values)));\n  }\n  function transformPaths(paths, grid, datum, _) {\n    let s = _.scale || grid.scale,\n      t = _.translate || grid.translate;\n    if (vegaUtil.isFunction(s)) s = s(datum, _);\n    if (vegaUtil.isFunction(t)) t = t(datum, _);\n    if ((s === 1 || s == null) && !t) return;\n    const sx = (vegaUtil.isNumber(s) ? s : s[0]) || 1,\n      sy = (vegaUtil.isNumber(s) ? s : s[1]) || 1,\n      tx = t && t[0] || 0,\n      ty = t && t[1] || 0;\n    paths.forEach(transform(grid, sx, sy, tx, ty));\n  }\n  function transform(grid, sx, sy, tx, ty) {\n    const x1 = grid.x1 || 0,\n      y1 = grid.y1 || 0,\n      flip = sx * sy < 0;\n    function transformPolygon(coordinates) {\n      coordinates.forEach(transformRing);\n    }\n    function transformRing(coordinates) {\n      if (flip) coordinates.reverse(); // maintain winding order\n      coordinates.forEach(transformPoint);\n    }\n    function transformPoint(coordinates) {\n      coordinates[0] = (coordinates[0] - x1) * sx + tx;\n      coordinates[1] = (coordinates[1] - y1) * sy + ty;\n    }\n    return function (geometry) {\n      geometry.coordinates.forEach(transformPolygon);\n      return geometry;\n    };\n  }\n\n  function radius(bw, data, f) {\n    const v = bw >= 0 ? bw : vegaStatistics.bandwidthNRD(data, f);\n    return Math.round((Math.sqrt(4 * v * v + 1) - 1) / 2);\n  }\n  function number(_) {\n    return vegaUtil.isFunction(_) ? _ : vegaUtil.constant(+_);\n  }\n\n  // Implementation adapted from d3/d3-contour. Thanks!\n  function density2D () {\n    var x = d => d[0],\n      y = d => d[1],\n      weight = vegaUtil.one,\n      bandwidth = [-1, -1],\n      dx = 960,\n      dy = 500,\n      k = 2; // log2(cellSize)\n\n    function density(data, counts) {\n      const rx = radius(bandwidth[0], data, x) >> k,\n        // blur x-radius\n        ry = radius(bandwidth[1], data, y) >> k,\n        // blur y-radius\n        ox = rx ? rx + 2 : 0,\n        // x-offset padding for blur\n        oy = ry ? ry + 2 : 0,\n        // y-offset padding for blur\n        n = 2 * ox + (dx >> k),\n        // grid width\n        m = 2 * oy + (dy >> k),\n        // grid height\n        values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n      let values = values0;\n      data.forEach(d => {\n        const xi = ox + (+x(d) >> k),\n          yi = oy + (+y(d) >> k);\n        if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n          values0[xi + yi * n] += +weight(d);\n        }\n      });\n      if (rx > 0 && ry > 0) {\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n      } else if (rx > 0) {\n        blurX(n, m, values0, values1, rx);\n        blurX(n, m, values1, values0, rx);\n        blurX(n, m, values0, values1, rx);\n        values = values1;\n      } else if (ry > 0) {\n        blurY(n, m, values0, values1, ry);\n        blurY(n, m, values1, values0, ry);\n        blurY(n, m, values0, values1, ry);\n        values = values1;\n      }\n\n      // scale density estimates\n      // density in points per square pixel or probability density\n      const s = counts ? Math.pow(2, -2 * k) : 1 / sum(values);\n      for (let i = 0, sz = n * m; i < sz; ++i) values[i] *= s;\n      return {\n        values: values,\n        scale: 1 << k,\n        width: n,\n        height: m,\n        x1: ox,\n        y1: oy,\n        x2: ox + (dx >> k),\n        y2: oy + (dy >> k)\n      };\n    }\n    density.x = function (_) {\n      return arguments.length ? (x = number(_), density) : x;\n    };\n    density.y = function (_) {\n      return arguments.length ? (y = number(_), density) : y;\n    };\n    density.weight = function (_) {\n      return arguments.length ? (weight = number(_), density) : weight;\n    };\n    density.size = function (_) {\n      if (!arguments.length) return [dx, dy];\n      var _0 = +_[0],\n        _1 = +_[1];\n      if (!(_0 >= 0 && _1 >= 0)) vegaUtil.error('invalid size');\n      return dx = _0, dy = _1, density;\n    };\n    density.cellSize = function (_) {\n      if (!arguments.length) return 1 << k;\n      if (!((_ = +_) >= 1)) vegaUtil.error('invalid cell size');\n      k = Math.floor(Math.log(_) / Math.LN2);\n      return density;\n    };\n    density.bandwidth = function (_) {\n      if (!arguments.length) return bandwidth;\n      _ = vegaUtil.array(_);\n      if (_.length === 1) _ = [+_[0], +_[0]];\n      if (_.length !== 2) vegaUtil.error('invalid bandwidth');\n      return bandwidth = _, density;\n    };\n    return density;\n  }\n  function blurX(n, m, source, target, r) {\n    const w = (r << 1) + 1;\n    for (let j = 0; j < m; ++j) {\n      for (let i = 0, sr = 0; i < n + r; ++i) {\n        if (i < n) {\n          sr += source[i + j * n];\n        }\n        if (i >= r) {\n          if (i >= w) {\n            sr -= source[i - w + j * n];\n          }\n          target[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n        }\n      }\n    }\n  }\n  function blurY(n, m, source, target, r) {\n    const w = (r << 1) + 1;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0, sr = 0; j < m + r; ++j) {\n        if (j < m) {\n          sr += source[i + j * n];\n        }\n        if (j >= r) {\n          if (j >= w) {\n            sr -= source[i + (j - w) * n];\n          }\n          target[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n        }\n      }\n    }\n  }\n\n  /**\n   * Perform 2D kernel-density estimation of point data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<number>} params.size - The [width, height] extent (in\n   *   units of input pixels) over which to perform density estimation.\n   * @param {function(object): number} params.x - The x-coordinate accessor.\n   * @param {function(object): number} params.y - The y-coordinate accessor.\n   * @param {function(object): number} [params.weight] - The weight accessor.\n   * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n   *   to groupby.\n   * @param {number} [params.cellSize] - Contour density calculation cell size.\n   *   This parameter determines the level of spatial approximation. For example,\n   *   the default value of 4 maps to 2x reductions in both x- and y- dimensions.\n   *   A value of 1 will result in an output raster grid whose dimensions exactly\n   *   matches the size parameter.\n   * @param {Array<number>} [params.bandwidth] - The KDE kernel bandwidths,\n   *   in pixels. The input can be a two-element array specifying separate\n   *   x and y bandwidths, or a single-element array specifying both. If the\n   *   bandwidth is unspecified or less than zero, the bandwidth will be\n   *   automatically determined.\n   * @param {boolean} [params.counts=false] - A boolean flag indicating if the\n   *   output values should be probability estimates (false, default) or\n   *   smoothed counts (true).\n   * @param {string} [params.as='grid'] - The output field in which to store\n   *   the generated raster grid (default 'grid').\n   */\n  function KDE2D(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  KDE2D.Definition = {\n    'type': 'KDE2D',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'size',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'required': true\n    }, {\n      'name': 'x',\n      'type': 'field',\n      'required': true\n    }, {\n      'name': 'y',\n      'type': 'field',\n      'required': true\n    }, {\n      'name': 'weight',\n      'type': 'field'\n    }, {\n      'name': 'groupby',\n      'type': 'field',\n      'array': true\n    }, {\n      'name': 'cellSize',\n      'type': 'number'\n    }, {\n      'name': 'bandwidth',\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'counts',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'grid'\n    }]\n  };\n  const PARAMS = ['x', 'y', 'weight', 'size', 'cellSize', 'bandwidth'];\n  function params(obj, _) {\n    PARAMS.forEach(param => _[param] != null ? obj[param](_[param]) : 0);\n    return obj;\n  }\n  vegaUtil.inherits(KDE2D, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) return pulse.StopPropagation;\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        source = pulse.materialize(pulse.SOURCE).source,\n        groups = partition(source, _.groupby),\n        names = (_.groupby || []).map(vegaUtil.accessorName),\n        kde = params(density2D(), _),\n        as = _.as || 'grid',\n        values = [];\n      function set(t, vals) {\n        for (let i = 0; i < names.length; ++i) t[names[i]] = vals[i];\n        return t;\n      }\n\n      // generate density raster grids\n      values = groups.map(g => vegaDataflow.ingest(set({\n        [as]: kde(g, _.counts)\n      }, g.dims)));\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = values;\n      return out;\n    }\n  });\n  function partition(data, groupby) {\n    var groups = [],\n      get = f => f(t),\n      map,\n      i,\n      n,\n      t,\n      k,\n      g;\n\n    // partition data points into groups\n    if (groupby == null) {\n      groups.push(data);\n    } else {\n      for (map = {}, i = 0, n = data.length; i < n; ++i) {\n        t = data[i];\n        k = groupby.map(get);\n        g = map[k];\n        if (!g) {\n          map[k] = g = [];\n          g.dims = k;\n          groups.push(g);\n        }\n        g.push(t);\n      }\n    }\n    return groups;\n  }\n\n  /**\n   * Generate contours based on kernel-density estimation of point data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.\n   *  If the values parameter is provided, this must be the dimensions of the input data.\n   *  If density estimation is performed, this is the output view dimensions in pixels.\n   * @param {Array<number>} [params.values] - An array of numeric values representing an\n   *  width x height grid of values over which to compute contours. If unspecified, this\n   *  transform will instead attempt to compute contours for the kernel density estimate\n   *  using values drawn from data tuples in the input pulse.\n   * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.\n   * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.\n   * @param {function(object): number} [params.weight] - The data point weight accessor for density estimation.\n   * @param {number} [params.cellSize] - Contour density calculation cell size.\n   * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.\n   * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n   *   this parameter is set, the count and nice parameters will be ignored.\n   * @param {number} [params.count] - The desired number of contours.\n   * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n   *   threshold values should be automatically aligned to \"nice\"\n   *   human-friendly values. Setting this flag may cause the number of\n   *   thresholds to deviate from the specified count.\n   * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n   *   polygons should be smoothed using linear interpolation. The default is\n   *   true. The parameter is ignored when using density estimation.\n   */\n  function Contour(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Contour.Definition = {\n    'type': 'Contour',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'size',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'required': true\n    }, {\n      'name': 'values',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'x',\n      'type': 'field'\n    }, {\n      'name': 'y',\n      'type': 'field'\n    }, {\n      'name': 'weight',\n      'type': 'field'\n    }, {\n      'name': 'cellSize',\n      'type': 'number'\n    }, {\n      'name': 'bandwidth',\n      'type': 'number'\n    }, {\n      'name': 'count',\n      'type': 'number'\n    }, {\n      'name': 'nice',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'thresholds',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'smooth',\n      'type': 'boolean',\n      'default': true\n    }]\n  };\n  vegaUtil.inherits(Contour, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        contour = contours().smooth(_.smooth !== false),\n        values = _.values,\n        thresh = _.thresholds || quantize(_.count || 10, _.nice, !!values),\n        size = _.size,\n        grid,\n        post;\n      if (!values) {\n        values = pulse.materialize(pulse.SOURCE).source;\n        grid = params(density2D(), _)(values, true);\n        post = transform(grid, grid.scale || 1, grid.scale || 1, 0, 0);\n        size = [grid.width, grid.height];\n        values = grid.values;\n      }\n      thresh = vegaUtil.isArray(thresh) ? thresh : thresh(values);\n      values = contour.size(size)(values, thresh);\n      if (post) values.forEach(post);\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = (values || []).map(vegaDataflow.ingest);\n      return out;\n    }\n  });\n\n  const Feature = 'Feature';\n  const FeatureCollection = 'FeatureCollection';\n  const MultiPoint = 'MultiPoint';\n\n  /**\n   * Consolidate an array of [longitude, latitude] points or GeoJSON features\n   * into a combined GeoJSON object. This transform is particularly useful for\n   * combining geo data for a Projection's fit argument. The resulting GeoJSON\n   * data is available as this transform's value. Input pulses are unchanged.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<function(object): *>} [params.fields] - A two-element array\n   *   of field accessors for the longitude and latitude values.\n   * @param {function(object): *} params.geojson - A field accessor for\n   *   retrieving GeoJSON feature data.\n   */\n  function GeoJSON(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoJSON.Definition = {\n    'type': 'GeoJSON',\n    'metadata': {},\n    'params': [{\n      'name': 'fields',\n      'type': 'field',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'geojson',\n      'type': 'field'\n    }]\n  };\n  vegaUtil.inherits(GeoJSON, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var features = this._features,\n        points = this._points,\n        fields = _.fields,\n        lon = fields && fields[0],\n        lat = fields && fields[1],\n        geojson = _.geojson || !fields && vegaUtil.identity,\n        flag = pulse.ADD,\n        mod;\n      mod = _.modified() || pulse.changed(pulse.REM) || pulse.modified(vegaUtil.accessorFields(geojson)) || lon && pulse.modified(vegaUtil.accessorFields(lon)) || lat && pulse.modified(vegaUtil.accessorFields(lat));\n      if (!this.value || mod) {\n        flag = pulse.SOURCE;\n        this._features = features = [];\n        this._points = points = [];\n      }\n      if (geojson) {\n        pulse.visit(flag, t => features.push(geojson(t)));\n      }\n      if (lon && lat) {\n        pulse.visit(flag, t => {\n          var x = lon(t),\n            y = lat(t);\n          if (x != null && y != null && (x = +x) === x && (y = +y) === y) {\n            points.push([x, y]);\n          }\n        });\n        features = features.concat({\n          type: Feature,\n          geometry: {\n            type: MultiPoint,\n            coordinates: points\n          }\n        });\n      }\n      this.value = {\n        type: FeatureCollection,\n        features: features\n      };\n    }\n  });\n\n  /**\n   * Map GeoJSON data to an SVG path string.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {function(object): *} [params.field] - The field with GeoJSON data,\n   *   or null if the tuple itself is a GeoJSON feature.\n   * @param {string} [params.as='path'] - The output field in which to store\n   *   the generated path data (default 'path').\n   */\n  function GeoPath(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoPath.Definition = {\n    'type': 'GeoPath',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection'\n    }, {\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'pointRadius',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'path'\n    }]\n  };\n  vegaUtil.inherits(GeoPath, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var out = pulse.fork(pulse.ALL),\n        path = this.value,\n        field = _.field || vegaUtil.identity,\n        as = _.as || 'path',\n        flag = out.SOURCE;\n      if (!path || _.modified()) {\n        // parameters updated, reset and reflow\n        this.value = path = vegaProjection.getProjectionPath(_.projection);\n        out.materialize().reflow();\n      } else {\n        flag = field === vegaUtil.identity || pulse.modified(field.fields) ? out.ADD_MOD : out.ADD;\n      }\n      const prev = initPath(path, _.pointRadius);\n      out.visit(flag, t => t[as] = path(field(t)));\n      path.pointRadius(prev);\n      return out.modifies(as);\n    }\n  });\n  function initPath(path, pointRadius) {\n    const prev = path.pointRadius();\n    path.context(null);\n    if (pointRadius != null) {\n      path.pointRadius(pointRadius);\n    }\n    return prev;\n  }\n\n  /**\n   * Geo-code a longitude/latitude point to an x/y coordinate.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {Array<function(object): *>} params.fields - A two-element array of\n   *   field accessors for the longitude and latitude values.\n   * @param {Array<string>} [params.as] - A two-element array of field names\n   *   under which to store the result. Defaults to ['x','y'].\n   */\n  function GeoPoint(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoPoint.Definition = {\n    'type': 'GeoPoint',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection',\n      'required': true\n    }, {\n      'name': 'fields',\n      'type': 'field',\n      'array': true,\n      'required': true,\n      'length': 2\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'array': true,\n      'length': 2,\n      'default': ['x', 'y']\n    }]\n  };\n  vegaUtil.inherits(GeoPoint, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var proj = _.projection,\n        lon = _.fields[0],\n        lat = _.fields[1],\n        as = _.as || ['x', 'y'],\n        x = as[0],\n        y = as[1],\n        mod;\n      function set(t) {\n        const xy = proj([lon(t), lat(t)]);\n        if (xy) {\n          t[x] = xy[0];\n          t[y] = xy[1];\n        } else {\n          t[x] = undefined;\n          t[y] = undefined;\n        }\n      }\n      if (_.modified()) {\n        // parameters updated, reflow\n        pulse = pulse.materialize().reflow(true).visit(pulse.SOURCE, set);\n      } else {\n        mod = pulse.modified(lon.fields) || pulse.modified(lat.fields);\n        pulse.visit(mod ? pulse.ADD_MOD : pulse.ADD, set);\n      }\n      return pulse.modifies(as);\n    }\n  });\n\n  /**\n   * Annotate items with a geopath shape generator.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {function(object): *} [params.field] - The field with GeoJSON data,\n   *   or null if the tuple itself is a GeoJSON feature.\n   * @param {string} [params.as='shape'] - The output field in which to store\n   *   the generated path data (default 'shape').\n   */\n  function GeoShape(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoShape.Definition = {\n    'type': 'GeoShape',\n    'metadata': {\n      'modifies': true,\n      'nomod': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection'\n    }, {\n      'name': 'field',\n      'type': 'field',\n      'default': 'datum'\n    }, {\n      'name': 'pointRadius',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'shape'\n    }]\n  };\n  vegaUtil.inherits(GeoShape, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var out = pulse.fork(pulse.ALL),\n        shape = this.value,\n        as = _.as || 'shape',\n        flag = out.ADD;\n      if (!shape || _.modified()) {\n        // parameters updated, reset and reflow\n        this.value = shape = shapeGenerator(vegaProjection.getProjectionPath(_.projection), _.field || vegaUtil.field('datum'), _.pointRadius);\n        out.materialize().reflow();\n        flag = out.SOURCE;\n      }\n      out.visit(flag, t => t[as] = shape);\n      return out.modifies(as);\n    }\n  });\n  function shapeGenerator(path, field, pointRadius) {\n    const shape = pointRadius == null ? _ => path(field(_)) : _ => {\n      var prev = path.pointRadius(),\n        value = path.pointRadius(pointRadius)(field(_));\n      path.pointRadius(prev);\n      return value;\n    };\n    shape.context = _ => {\n      path.context(_);\n      return shape;\n    };\n    return shape;\n  }\n\n  var epsilon = 1e-6;\n  var abs = Math.abs;\n  var ceil = Math.ceil;\n\n  function graticuleX(y0, y1, dy) {\n    var y = range(y0, y1 - epsilon, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n  function graticuleY(x0, x1, dx) {\n    var x = range(x0, x1 - epsilon, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n  function graticule() {\n    var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > epsilon;\n      }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > epsilon;\n      }).map(y));\n    }\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.extentMinor();\n      return graticule.extentMajor(_).extentMinor(_);\n    };\n    graticule.extentMajor = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.extentMinor = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.stepMinor();\n      return graticule.stepMajor(_).stepMinor(_);\n    };\n    graticule.stepMajor = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.stepMinor = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = graticuleX(y0, y1, 90);\n      y = graticuleY(x0, x1, precision);\n      X = graticuleX(Y0, Y1, 90);\n      Y = graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n  }\n\n  /**\n   * GeoJSON feature generator for creating graticules.\n   * @constructor\n   */\n  function Graticule(params) {\n    vegaDataflow.Transform.call(this, [], params);\n    this.generator = graticule();\n  }\n  Graticule.Definition = {\n    'type': 'Graticule',\n    'metadata': {\n      'changes': true,\n      'generates': true\n    },\n    'params': [{\n      'name': 'extent',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'extentMajor',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'extentMinor',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'step',\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'stepMajor',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'default': [90, 360]\n    }, {\n      'name': 'stepMinor',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'default': [10, 10]\n    }, {\n      'name': 'precision',\n      'type': 'number',\n      'default': 2.5\n    }]\n  };\n  vegaUtil.inherits(Graticule, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var src = this.value,\n        gen = this.generator,\n        t;\n      if (!src.length || _.modified()) {\n        for (const prop in _) {\n          if (vegaUtil.isFunction(gen[prop])) {\n            gen[prop](_[prop]);\n          }\n        }\n      }\n      t = gen();\n      if (src.length) {\n        pulse.mod.push(vegaDataflow.replace(src[0], t));\n      } else {\n        pulse.add.push(vegaDataflow.ingest(t));\n      }\n      src[0] = t;\n      return pulse;\n    }\n  });\n\n  function define (constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n  var darker = 0.7;\n  var brighter = 1 / darker;\n  var reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n  define(Color, color, {\n    copy(channels) {\n      return Object.assign(new this.constructor(), this, channels);\n    },\n    displayable() {\n      return this.rgb().displayable();\n    },\n    hex: color_formatHex,\n    // Deprecated! Use color.formatHex.\n    formatHex: color_formatHex,\n    formatHex8: color_formatHex8,\n    formatHsl: color_formatHsl,\n    formatRgb: color_formatRgb,\n    toString: color_formatRgb\n  });\n  function color_formatHex() {\n    return this.rgb().formatHex();\n  }\n  function color_formatHex8() {\n    return this.rgb().formatHex8();\n  }\n  function color_formatHsl() {\n    return hslConvert(this).formatHsl();\n  }\n  function color_formatRgb() {\n    return this.rgb().formatRgb();\n  }\n  function color(format) {\n    var m, l;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n    : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n    : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n    : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n    : null // invalid hex\n    ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n    : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n    : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n    : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n    : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n    : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n    : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n    : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n  }\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb();\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n  function rgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n  define(Rgb, rgb, extend(Color, {\n    brighter(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb() {\n      return this;\n    },\n    clamp() {\n      return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n    },\n    displayable() {\n      return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    hex: rgb_formatHex,\n    // Deprecated! Use color.formatHex.\n    formatHex: rgb_formatHex,\n    formatHex8: rgb_formatHex8,\n    formatRgb: rgb_formatRgb,\n    toString: rgb_formatRgb\n  }));\n  function rgb_formatHex() {\n    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n  }\n  function rgb_formatHex8() {\n    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n  }\n  function rgb_formatRgb() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n  }\n  function clampa(opacity) {\n    return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n  }\n  function clampi(value) {\n    return Math.max(0, Math.min(255, Math.round(value) || 0));\n  }\n  function hex(value) {\n    value = clampi(value);\n    return (value < 16 ? \"0\" : \"\") + value.toString(16);\n  }\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl();\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n  function hsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n  define(Hsl, hsl, extend(Color, {\n    brighter(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n      return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n    },\n    clamp() {\n      return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n    },\n    displayable() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    formatHsl() {\n      const a = clampa(this.opacity);\n      return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n    }\n  }));\n  function clamph(value) {\n    value = (value || 0) % 360;\n    return value < 0 ? value + 360 : value;\n  }\n  function clampt(value) {\n    return Math.max(0, Math.min(1, value || 0));\n  }\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n  }\n\n  /**\n   * Render a heatmap image for input raster grid data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} [params.field] - The field with raster grid\n   *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n   * @param {string} [params.color] - A constant color value or function for\n   *   individual pixel color. If a function, it will be invoked with an input\n   *   object that includes $x, $y, $value, and $max fields for the grid.\n   * @param {number} [params.opacity] - A constant opacity value or function for\n   *   individual pixel opacity. If a function, it will be invoked with an input\n   *   object that includes $x, $y, $value, and $max fields for the grid.\n   * @param {string} [params.resolve] - The method for resolving maximum values\n   *   across multiple input grids. If 'independent' (the default), maximum\n   *   calculation will be performed separately for each grid. If 'shared',\n   *   a single global maximum will be used for all input grids.\n   * @param {string} [params.as='image'] - The output field in which to store\n   *   the generated bitmap canvas images (default 'image').\n   */\n  function Heatmap(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Heatmap.Definition = {\n    'type': 'heatmap',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'color',\n      'type': 'string',\n      'expr': true\n    }, {\n      'name': 'opacity',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'resolve',\n      'type': 'enum',\n      'values': ['shared', 'independent'],\n      'default': 'independent'\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'image'\n    }]\n  };\n  vegaUtil.inherits(Heatmap, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (!pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n      var source = pulse.materialize(pulse.SOURCE).source,\n        shared = _.resolve === 'shared',\n        field = _.field || vegaUtil.identity,\n        opacity = opacity_(_.opacity, _),\n        color = color_(_.color, _),\n        as = _.as || 'image',\n        obj = {\n          $x: 0,\n          $y: 0,\n          $value: 0,\n          $max: shared ? max(source.map(t => max(field(t).values))) : 0\n        };\n      source.forEach(t => {\n        const v = field(t);\n\n        // build proxy data object\n        const o = vegaUtil.extend({}, t, obj);\n        // set maximum value if not globally shared\n        if (!shared) o.$max = max(v.values || []);\n\n        // generate canvas image\n        // optimize color/opacity if not pixel-dependent\n        t[as] = toCanvas(v, o, color.dep ? color : vegaUtil.constant(color(o)), opacity.dep ? opacity : vegaUtil.constant(opacity(o)));\n      });\n      return pulse.reflow(true).modifies(as);\n    }\n  });\n\n  // get image color function\n  function color_(color, _) {\n    let f;\n    if (vegaUtil.isFunction(color)) {\n      f = obj => rgb(color(obj, _));\n      f.dep = dependency(color);\n    } else {\n      // default to mid-grey\n      f = vegaUtil.constant(rgb(color || '#888'));\n    }\n    return f;\n  }\n\n  // get image opacity function\n  function opacity_(opacity, _) {\n    let f;\n    if (vegaUtil.isFunction(opacity)) {\n      f = obj => opacity(obj, _);\n      f.dep = dependency(opacity);\n    } else if (opacity) {\n      f = vegaUtil.constant(opacity);\n    } else {\n      // default to [0, max] opacity gradient\n      f = obj => obj.$value / obj.$max || 0;\n      f.dep = true;\n    }\n    return f;\n  }\n\n  // check if function depends on individual pixel data\n  function dependency(f) {\n    if (!vegaUtil.isFunction(f)) return false;\n    const set = vegaUtil.toSet(vegaUtil.accessorFields(f));\n    return set.$x || set.$y || set.$value || set.$max;\n  }\n\n  // render raster grid to canvas\n  function toCanvas(grid, obj, color, opacity) {\n    const n = grid.width,\n      m = grid.height,\n      x1 = grid.x1 || 0,\n      y1 = grid.y1 || 0,\n      x2 = grid.x2 || n,\n      y2 = grid.y2 || m,\n      val = grid.values,\n      value = val ? i => val[i] : vegaUtil.zero,\n      can = vegaCanvas.canvas(x2 - x1, y2 - y1),\n      ctx = can.getContext('2d'),\n      img = ctx.getImageData(0, 0, x2 - x1, y2 - y1),\n      pix = img.data;\n    for (let j = y1, k = 0; j < y2; ++j) {\n      obj.$y = j - y1;\n      for (let i = x1, r = j * n; i < x2; ++i, k += 4) {\n        obj.$x = i - x1;\n        obj.$value = value(i + r);\n        const v = color(obj);\n        pix[k + 0] = v.r;\n        pix[k + 1] = v.g;\n        pix[k + 2] = v.b;\n        pix[k + 3] = ~~(255 * opacity(obj));\n      }\n    }\n    ctx.putImageData(img, 0, 0);\n    return can;\n  }\n\n  /**\n   * Maintains a cartographic projection.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   */\n  function Projection(params) {\n    vegaDataflow.Transform.call(this, null, params);\n    this.modified(true); // always treat as modified\n  }\n\n  vegaUtil.inherits(Projection, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      let proj = this.value;\n      if (!proj || _.modified('type')) {\n        this.value = proj = create(_.type);\n        vegaProjection.projectionProperties.forEach(prop => {\n          if (_[prop] != null) set(proj, prop, _[prop]);\n        });\n      } else {\n        vegaProjection.projectionProperties.forEach(prop => {\n          if (_.modified(prop)) set(proj, prop, _[prop]);\n        });\n      }\n      if (_.pointRadius != null) proj.path.pointRadius(_.pointRadius);\n      if (_.fit) fit(proj, _);\n      return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n    }\n  });\n  function fit(proj, _) {\n    const data = collectGeoJSON(_.fit);\n    _.extent ? proj.fitExtent(_.extent, data) : _.size ? proj.fitSize(_.size, data) : 0;\n  }\n  function create(type) {\n    const constructor = vegaProjection.projection((type || 'mercator').toLowerCase());\n    if (!constructor) vegaUtil.error('Unrecognized projection type: ' + type);\n    return constructor();\n  }\n  function set(proj, key, value) {\n    if (vegaUtil.isFunction(proj[key])) proj[key](value);\n  }\n  function collectGeoJSON(data) {\n    data = vegaUtil.array(data);\n    return data.length === 1 ? data[0] : {\n      type: FeatureCollection,\n      features: data.reduce((a, f) => a.concat(featurize(f)), [])\n    };\n  }\n  function featurize(f) {\n    return f.type === FeatureCollection ? f.features : vegaUtil.array(f).filter(d => d != null).map(d => d.type === Feature ? d : {\n      type: Feature,\n      geometry: d\n    });\n  }\n\n  exports.contour = Contour;\n  exports.geojson = GeoJSON;\n  exports.geopath = GeoPath;\n  exports.geopoint = GeoPoint;\n  exports.geoshape = GeoShape;\n  exports.graticule = Graticule;\n  exports.heatmap = Heatmap;\n  exports.isocontour = Isocontour;\n  exports.kde2d = KDE2D;\n  exports.projection = Projection;\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","vegaDataflow","vegaUtil","vegaStatistics","vegaProjection","vegaCanvas","tickSpec","start","stop","count","step","Math","max","power","floor","log10","error","pow","factor","e10","e5","e2","inc","i1","round","i2","tickIncrement","values","valueof","undefined","value","index","range","n","arguments","length","i","ceil","Array","sum","noop","contours","tz","map","contour","polygons","holes","isorings","ring","smooth","area","push","forEach","hole","polygon","x","point","y","contains","j","pi","xi","yi","pj","xj","yj","b","a","c","p","q","r","type","coordinates","callback","stitch","line","end","startIndex","dx","endIndex","f","g","fragmentByEnd","fragmentByStart","concat","unshift","t1","cases","t0","dy","t2","t3","smoothLinear","xt","yt","v1","v0","size","contours.size","_","_0","_1","contours.smooth","quantize","k","nice","zero","ex","extent","min","span","reverse","Isocontour","params","Transform","call","levels","resolve","t","transformPaths","paths","grid","datum","s","scale","translate","isFunction","sx","isNumber","sy","transform","tx","ty","transformPolygon","transformRing","flip","transformPoint","x1","y1","geometry","radius","bw","data","v","bandwidthNRD","sqrt","number","constant","density2D","density","counts","rx","bandwidth","ry","ox","oy","m","values0","Float32Array","values1","d","weight","blurX","blurY","sz","width","height","x2","y2","one","density.x","density.y","density.weight","density.size","cellSize","density.cellSize","log","LN2","density.bandwidth","array","source","target","w","sr","KDE2D","obj","PARAMS","param","partition","groupby","groups","get","dims","Contour","GeoJSON","GeoPath","initPath","path","pointRadius","prev","context","GeoPoint","GeoShape","shapeGenerator","field","shape","shape.context","graticuleX","y0","epsilon","graticuleY","x0","graticule","lines","X0","DX","X1","X","Y0","DY","Y1","Y","filter","abs","precision","graticule.lines","outline","graticule.outline","slice","graticule.extent","extentMajor","extentMinor","graticule.extentMajor","graticule.extentMinor","graticule.step","stepMajor","stepMinor","graticule.stepMajor","graticule.stepMinor","graticule.precision","Graticule","generator","constructor","prototype","extend","parent","definition","Object","create","key","Color","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","format","l","trim","toLowerCase","reHex","exec","parseInt","rgbn","Rgb","rgba","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","NaN","opacity","o","rgb_formatHex","hex","rgb_formatRgb","clampa","clampi","isNaN","toString","h","Hsl","hslConvert","clamph","clampt","hsl2rgb","m1","m2","Heatmap","color_","dep","dependency","opacity_","$value","$max","set","toSet","accessorFields","$x","$y","toCanvas","val","can","canvas","ctx","getContext","img","getImageData","pix","putImageData","Projection","modified","fit","proj","collectGeoJSON","fitExtent","fitSize","projection","FeatureCollection","features","reduce","featurize","Feature","Definition","inherits","pulse","changed","StopPropagation","out","fork","NO_SOURCE","NO_FIELDS","materialize","SOURCE","identity","thresholds","as","isArray","rederive","ingest","rem","add","names","accessorName","kde","vals","thresh","post","_features","points","_points","fields","lon","lat","geojson","flag","ADD","mod","REM","visit","MultiPoint","ALL","getProjectionPath","reflow","ADD_MOD","modifies","xy","src","gen","prop","replace","brighter","darker","RegExp","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","copy","channels","assign","displayable","formatHex8","color_formatHex8","formatHsl","color_formatHsl","clamp","rgb_formatHex8","hsl","shared","projectionProperties","geopath","geopoint","geoshape","heatmap","isocontour","kde2d"]
}
