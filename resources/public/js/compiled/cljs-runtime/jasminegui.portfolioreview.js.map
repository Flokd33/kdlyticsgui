{"version":3,"sources":["jasminegui/portfolioreview.cljs"],"mappings":"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","names":["jasminegui.portfolioreview/standard-box-width","jasminegui.portfolioreview/standard-box-height","jasminegui.portfolioreview/standard-box-width-nb","jasminegui.portfolioreview/standard-box-height-nb","jasminegui.portfolioreview/portfolio-vs-index-horizontal-bars","data","individual-height","cljs.core/count","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","cljs.core.map.cljs$core$IFn$_invoke$arity$2","text-size","scl","x__4214__auto__","y__4215__auto__","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/max","cljs.core/min","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","jasminegui.portfolioreview/contribution-pages","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4529__auto__","s__51192","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","xs__6292__auto__","cljs.core/first","iterys__4525__auto__","s__51194","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","b__51196","cljs.core/chunk-buffer","i__51195","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__51193","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","fs__4526__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","iter__51191","p","k","cljs.core/second","jasminegui.portfolioreview/alpha-pages","s__51209","b__51211","i__51210","iter__51208","jasminegui.portfolioreview/top-bottom-pages","s__51215","s__51217","b__51219","i__51218","iter__51216","iter__51214","jasminegui.portfolioreview/jensen-pages","s__51224","b__51226","i__51225","iter__51223","jasminegui.portfolioreview/pages","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","cljs.core/vector","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","jasminegui.portfolioreview/portfolio-review-navigation","cljs.core/keys","p1__51238#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","p1__51239#","p1__51240#","p1__51241#","p1__51242#","jasminegui.portfolioreview/maximum-page","jasminegui.portfolioreview/current-page","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","jasminegui.portfolioreview/go-to-page","n","portfolio","cljs.core/reset!","req","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","G__51252","re-frame.core/dispatch","cljs.core.replace.cljs$core$IFn$_invoke$arity$2","G__51255","jasminegui.portfolioreview/next-page!","cljs.core/deref","G__51261","re-frame.core/subscribe","jasminegui.portfolioreview/previous-page!","G__51268","jasminegui.portfolioreview/go-to-block!","x","p1__51270#","G__51276","jasminegui.portfolioreview/heading-box","re-com.core/h-box","re-com.core/title","jasminegui.portfolioreview/summary-text","G__51277","G__51279","f","G__51282","G__51283","goog.string/format","g","re-com.core/box","re-com.core/v-box","jasminegui.portfolioreview/contribution-or-alpha-chart","oz.core/vega-lite","jasminegui.portfolioreview/top-contributors","display","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","p1__51291#","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","or__4126__auto__","cljs.core/some","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","G__51298","ttl","js/module$node_modules$react_table$lib$index.default","cljs.core.take.cljs$core$IFn$_invoke$arity$2","cljs.core/reverse","jasminegui.tables/case-insensitive-filter","jasminegui.tables/attribution-table-columns","jasminegui.portfolioreview/backtest-history","G__51301","G__51303","G__51304","dates","G__51305","G__51306","chart-period","G__51307","line","p1__51299#","jasminegui.static/var-charts-choice-map","days","G__51308","cljs.core/Keyword","js/Error","G__51309","G__51312","G__51313","G__51314","jasminegui.charting/backtest-chart","cljs.core/take-last","G__51315","G__51316","jasminegui.portfolioreview/active-home","active-tab","G__51317","js/window","G__51318","G__51319","G__51320","G__51321","jasminegui.portfolioreview/nav","G__51322","re-com.core/button","re-com.core/label","re-com.core/line","s__51324","b__51326","i__51325","iter__51323","item","jasminegui.portfolioreview/view","cljs.core/chunk-first"],"sourcesContent":["(ns jasminegui.portfolioreview\r\n\r\n  (:require\r\n    [re-frame.core :as rf]\r\n    [reagent.core :as r]\r\n    [goog.string :as gstring]\r\n    [goog.string.format]\r\n    [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                         single-dropdown hyperlink modal-panel alert-box throbber input-password selection-list md-circle-icon-button\r\n                         input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n    [re-com.box :refer [h-box-args-desc v-box-args-desc box-args-desc gap-args-desc line-args-desc scroller-args-desc border-args-desc flex-child-style]]\r\n    [re-com.util :refer [px]]\r\n    [\"react-table\" :as rt :default ReactTable]\r\n    [jasminegui.mount :as mount]\r\n    [jasminegui.static :as static]\r\n    [jasminegui.tools :as tools]\r\n    [jasminegui.tables :as tables]\r\n\r\n    [re-com.validate :refer [string-or-hiccup? alert-type? vector-of-maps?]]\r\n    [oz.core :as oz]\r\n    [jasminegui.charting :as charting])\r\n  (:import (goog.i18n NumberFormat)\r\n           (goog.i18n.NumberFormat Format))\r\n  )\r\n\r\n(def standard-box-width \"1600px\")\r\n(def standard-box-height \"1024px\")\r\n(def standard-box-width-nb 1600)\r\n(def standard-box-height-nb 1024)\r\n\r\n\r\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\r\n;;;VEGA-LITE CHART DEFINITIONS;;;\r\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\r\n\r\n(defn portfolio-vs-index-horizontal-bars [data]\r\n  (let [individual-height (if (> (count (distinct (map :group data))) 10) 20 60) ; (/ (+ standard-box-height-nb 400) (* 5 (count (distinct (map :group data)))))\r\n        text-size 16\r\n        scl (int (/ (max (apply max (map :value data)) (- (apply min (map :value data)))) 30))]\r\n    ;    (println (count (distinct (map :group data))) individual-height)\r\n    {:$schema   \"https://vega.github.io/schema/vega-lite/v4.json\",\r\n     ;   :width     (- standard-box-width-nb 400),\r\n     ;:height    {:step (/ (- standard-box-height-nb 0) (* 3.0 (count (distinct (map :group data)))))},\r\n     :data      {:values data},\r\n     :transform [{:calculate (str \"datum.value >= 0 ? datum.value + \" scl \" : datum.value - \" scl), :as \"valuetxt\"}],\r\n     :facet     { :row {:field \"group\", :type \"ordinal\", :sort (mapv :group data), :title \"\", :header {:labelAngle 0, :labelFontSize text-size, :labelAlign \"left\"}}},\r\n     :spec\r\n                {:layer\r\n                 [{:mark   \"bar\",\r\n                   :width  (- standard-box-width-nb 400),\r\n                   :height individual-height\r\n                   :encoding\r\n                           {:x\r\n                                   {:aggregate \"sum\", :field \"value\", :type \"quantitative\",\r\n                                    :axis      {:title \"Basis points\", :titleFontSize text-size, :titleFontWeight \"normal\" :labelFontSize text-size, :gridColor {:condition {:test \"datum.value === 0\", :value \"black\"}}}},\r\n                            :y\r\n                                   {:field \"performance\", :type \"nominal\", :axis {:title \"\", :labels false}},\r\n                            :color {:field \"performance\", :type \"nominal\", :sort \"descending\", :scale {:range [\"#134848\" \"#009D80\"]}, :legend {:title \"\", :labelFontSize text-size}}}}\r\n                  {:mark   {:type \"text\", :fontSize text-size},\r\n                   :width  (- standard-box-width-nb 400),\r\n                   :height individual-height\r\n                   :encoding\r\n                           {:x    {:aggregate \"sum\", :field \"valuetxt\", :type \"quantitative\", :axis {:title nil}},\r\n                            :y    {:field \"performance\", :type \"nominal\", :axis {:title \"\", :labels false}},\r\n                            :color\r\n                                  {:field \"performance\", :type \"nominal\", :sort \"descending\", :scale {:range [\"#134848\" \"#009D80\"]}, :legend nil},\r\n                            :text {:field \"value\" :format \".0f\"}\r\n                            }}]},\r\n     :config\r\n                {:view {:stroke \"transparent\"},\r\n                 :axis {:domainWidth 1}}})\r\n    )\r\n\r\n\r\n;;;;;;;;;;;;;;;;\r\n;;;NAVIGATION;;;\r\n;;;;;;;;;;;;;;;;\r\n\r\n\r\n\r\n(def contribution-pages\r\n  (into []\r\n        (for [p [[\"MTD\" \"mtd\"]\r\n                 [\"YTD\" \"ytd\"]]\r\n              k [[\"Region\" \"Region\"]\r\n                 [\"Country\" \"Country\"]\r\n                 [\"Sector\" \"Sector\"]\r\n                 [\"Rating\" \"RatingGroup\"]\r\n                 [\"Duration\" \"Duration Bucket\"]]]\r\n          {:title        (str (first p) \" Contribution by \" (first k))\r\n           :nav-request  :contribution\r\n           :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" (second p) (second k)]})))\r\n\r\n(def alpha-pages\r\n  (into []\r\n        (for [k [[\"Region\" \"Region\"]\r\n                 [\"Country\" \"Country\"]\r\n                 [\"Sector\" \"Sector\"]\r\n                 [\"Rating\" \"RatingGroup\"]\r\n                 [\"Duration\" \"Duration Bucket\"]]]\r\n          {:title        (str \"Alpha by \" (first k))\r\n           :nav-request  :alpha\r\n           :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" (second k)]})))\r\n\r\n(def top-bottom-pages\r\n  (into []\r\n        (for [p [[\"MTD\" \"mtd\"]\r\n                 [\"YTD\" \"ytd\"]]\r\n              k [[\"top\" \"top\"]\r\n                 [\"bottom\" \"bottom\"]]]\r\n          {:title        (str (first p) \" \" (first k) \" contributors\")\r\n           :nav-request  :top-bottom\r\n           :data-request [:get-single-attribution \"portfolio\" (second p)]})))\r\n\r\n(def jensen-pages\r\n  (into []\r\n        (for [k [[\"Region\" \"Region\"]\r\n                 [\"Country\" \"Country\"]\r\n                 [\"Sector\" \"Sector\"]\r\n                 [\"Rating\" \"RatingGroup\"]\r\n                 [\"Duration\" \"Duration Bucket\"]]]\r\n          {:title        (str \"Jensen by \" (first k))\r\n           :nav-request  :jensen\r\n           :data-request [:get-portfolio-review-jensen-chart-data \"portfolio\" (second k)]})))\r\n\r\n(def pages (into {} (map-indexed\r\n                      vector\r\n                      (concat\r\n                        [{:title \"Summary\"                      :nav-request :summary         :data-request nil}]\r\n                         contribution-pages\r\n                         alpha-pages\r\n                         top-bottom-pages\r\n                         jensen-pages\r\n                        [{:title \"Three year daily backtest\"   :nav-request :backtest-history  :data-request nil}]\r\n                        ))))\r\n\r\n(def portfolio-review-navigation\r\n  [{:code :summary      :name \"Summary\"           :page-start 0}\r\n   {:code :contribution :name \"Contribution\"      :page-start (apply min (keys (filter #(= (:nav-request (second %)) :contribution) pages)))}\r\n   {:code :alpha        :name \"Alpha\"             :page-start (apply min (keys (filter #(= (:nav-request (second %)) :alpha) pages)))}\r\n   {:code :top-bottom   :name \"Top contributors\"  :page-start (apply min (keys (filter #(= (:nav-request (second %)) :top-bottom) pages)))}\r\n   {:code :jensen       :name \"Jensen\"            :page-start (apply min (keys (filter #(= (:nav-request (second %)) :jensen) pages)))}\r\n   {:code :backtest-history       :name \"Backtest\"            :page-start (apply min (keys (filter #(= (:nav-request (second %)) :backtest-history) pages)))}\r\n   {:code :risk         :name \"Risk\"              :page-start 40}])\r\n\r\n;(def pages {\r\n;            1  {:title \"Summary\"                      :nav-request :summary         :data-request nil}\r\n;            2  {:title \"MTD Contribution by Region\"   :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"mtd\" \"Region\"]}\r\n;            3  {:title \"MTD Contribution by Country\"  :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"mtd\" \"Country\"]}\r\n;            4  {:title \"MTD Contribution by Sector\"   :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"mtd\" \"Sector\"]}\r\n;            5  {:title \"MTD Contribution by Rating\"   :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"mtd\" \"RatingGroup\"]}\r\n;            6  {:title \"MTD Contribution by Rating\"   :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"mtd\" \"RatingGroup\"]}\r\n;\r\n;            6  {:title \"YTD Contribution by Region\"   :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"ytd\" \"Region\"]}\r\n;            7  {:title \"YTD Contribution by Country\"  :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"ytd\" \"Country\"]}\r\n;            8  {:title \"YTD Contribution by Sector\"   :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"ytd\" \"Sector\"]}\r\n;            9  {:title \"YTD Contribution by Rating\"   :nav-request :contribution    :data-request [:get-portfolio-review-contribution-chart-data \"portfolio\" \"ytd\" \"RatingGroup\"]}\r\n;            10 {:title \"Alpha by Region\"              :nav-request :alpha           :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" \"Region\"]}\r\n;            11 {:title \"Alpha by Country\"             :nav-request :alpha           :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" \"Country\"]}\r\n;            12 {:title \"Alpha by Sector\"              :nav-request :alpha           :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" \"Sector\"]}\r\n;            13 {:title \"Alpha by Rating\"              :nav-request :alpha           :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" \"RatingGroup\"]}\r\n;            14 {:title \"MTD top contributors\"         :nav-request :top-bottom      :data-request [:get-single-attribution \"portfolio\" \"mtd\"]}\r\n;            15 {:title \"MTD bottom contributors\"      :nav-request :top-bottom      :data-request [:get-single-attribution \"portfolio\" \"mtd\"]}\r\n;            16 {:title \"YTD top contributors\"         :nav-request :top-bottom      :data-request [:get-single-attribution \"portfolio\" \"ytd\"]}\r\n;            17 {:title \"YTD bottom contributors\"      :nav-request :top-bottom      :data-request [:get-single-attribution \"portfolio\" \"ytd\"]}\r\n;            18 {:title \"Fund relative performance\"    :nav-request :relative-perf   :data-request nil}\r\n;            19 {:title \"Jensen by Region\"             :nav-request :jensen          :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" \"Region\"]}\r\n;            20 {:title \"Jensen by Country\"            :nav-request :jensen          :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" \"Country\"]}\r\n;            21 {:title \"Jensen by Sector\"             :nav-request :jensen          :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" \"Sector\"]}\r\n;            22 {:title \"Jensen by Rating\"             :nav-request :jensen          :data-request [:get-portfolio-review-alpha-chart-data \"portfolio\" \"RatingGroup\"]}\r\n;            })\r\n\r\n(def maximum-page (count pages))\r\n(def current-page (r/atom 0))\r\n\r\n(defn go-to-page [n portfolio]\r\n  (reset! current-page n)\r\n  ;(println (replace {\"portfolio\" portfolio} (get-in pages [n :data-request])))\r\n  (when-let [req (get-in pages [n :data-request])]\r\n    (rf/dispatch (replace {\"portfolio\" portfolio} req)))\r\n  (rf/dispatch [:portfolio-review/active-tab (get-in pages [n :nav-request])]))\r\n\r\n(defn next-page! []\r\n  (when (< @current-page (dec maximum-page))\r\n    (go-to-page (inc @current-page) @(rf/subscribe [:portfolio-review/portfolio]))))\r\n\r\n(defn previous-page! []\r\n  (when (> @current-page 0)\r\n    (go-to-page (dec @current-page) @(rf/subscribe [:portfolio-review/portfolio]))))\r\n\r\n(defn go-to-block! [x]\r\n  (go-to-page (:page-start (first (filter #(= (:code %) x) portfolio-review-navigation)))\r\n              @(rf/subscribe [:portfolio-review/portfolio])))\r\n\r\n\r\n;;;;;;;;;;;;;;;;;;;;;;;\r\n;;;PAGE CONSTRUCTION;;;\r\n;;;;;;;;;;;;;;;;;;;;;;;\r\n\r\n(defn heading-box []\r\n  [h-box :gap \"20px\" :align :center :children [[:img {:width \"37px\" :height \"64px\" :src \"assets/91-logo-green.png\"}] [title :label (get-in pages [@current-page :title]) :level :level1]]])\r\n\r\n(defn summary-text []\r\n  (let [portfolio @(rf/subscribe [:portfolio-review/portfolio])\r\n        data @(rf/subscribe [:portfolio-review/summary-data])\r\n        f (fn [x] (gstring/format \"%.0fbps\" (* 100 x)))\r\n        g (fn [x] (gstring/format \"%.2f\" x))]\r\n    [box :class \"subbody rightelement\" :width standard-box-width :height standard-box-height\r\n     :child\r\n     [v-box :gap \"40px\" :class \"element\" :width \"100%\" :height \"100%\"\r\n      :children\r\n      [[heading-box]\r\n       [title :level :level2 :label (str \"MTD, \" portfolio \" returned \" (f (get-in data [:mtd :portfolio])) \" vs \" (f (get-in data [:mtd :index])) \" for the index, \" (f (get-in data [:mtd :alpha])) \" of alpha.\")]\r\n       [title :level :level2 :label (str \"YTD, \" portfolio \" returned \" (f (get-in data [:ytd :portfolio])) \" vs \" (f (get-in data [:ytd :index])) \" for the index, \" (f (get-in data [:ytd :alpha])) \" of alpha.\")]\r\n       [title :level :level2 :label (str \"We currently run a beta of \"\r\n                                         (g (get-in data [:beta :total])) \"x with top contributors being \"\r\n               (get-in data [:beta :country-1]) \" (\" (g (get-in data [:beta :value-1])) \"x), \"\r\n               (get-in data [:beta :country-2]) \" (\" (g (get-in data [:beta :value-2])) \"x), and \"\r\n               (get-in data [:beta :country-3]) \" (\" (g (get-in data [:beta :value-3])) \"x).\")]]]]))\r\n\r\n(defn contribution-or-alpha-chart [data]\r\n  ;(println data)\r\n    [box :class \"subbody rightelement\" :width standard-box-width :height standard-box-height\r\n     :child\r\n     [v-box :gap \"40px\" :class \"element\" :width \"100%\" :height \"100%\"\r\n      :children\r\n      [[heading-box]                                        ; [title :label (get-in pages [@current-page :title]) :level :level1]\r\n       [oz/vega-lite (portfolio-vs-index-horizontal-bars data)]]]])\r\n\r\n(defn top-contributors []\r\n  (let [display (sort-by :Total-Effect (remove #(or (some #{(:Sector %)} [\"Total\"])\r\n                                                         (= (subs (:Security %) 0 16) \"Foreign Currency\")\r\n                                                         (= (subs (:Security %) 4 22) \"Settlement Account\"))\r\n                                                    @(rf/subscribe [:single-portfolio-attribution/clean-table])))\r\n        ttl (get-in pages [@current-page :title])]\r\n    [box :class \"subbody rightelement\" :width standard-box-width :height standard-box-height\r\n     :child\r\n     [v-box :gap \"10px\" :class \"element\" :width \"100%\" :height \"100%\"\r\n      :children\r\n      [[heading-box]                                        ; [title :label ttl :level :level1]\r\n       [:> ReactTable\r\n        {:data                (take 20 (if (= (subs ttl 4 7) \"top\") (reverse display) display))\r\n         :defaultFilterMethod tables/case-insensitive-filter\r\n         :columns             [\r\n                               {:Header \"Bond  \" :columns (mapv tables/attribution-table-columns [:security :country :sector])}\r\n                               {:Header \"Effect\" :columns (mapv tables/attribution-table-columns [:total-effect])}\r\n                               {:Header \"Contribution\" :columns (mapv tables/attribution-table-columns [:contribution :bm-contribution])}\r\n                               {:Header \"Weight\" :columns (mapv tables/attribution-table-columns [:xs-weight :weight :bm-weight])}\r\n                               ;{:Header \"Additional information\" :columns (mapv tables/attribution-table-columns (concat additional-des-cols [:code :rating]))}\r\n                               ]\r\n         :showPagination      false\r\n         :sortable            false\r\n         :filterable          false\r\n         :pageSize            20\r\n         :className           \"-striped -highlight\"\r\n         }]]]]\r\n    ))\r\n\r\n(defn backtest-history []\r\n  (rf/dispatch [:get-portfolio-var @(rf/subscribe [:portfolio-review/portfolio])])\r\n  (rf/dispatch [:var/chart-period :daily-3y])\r\n  (let [dates @(rf/subscribe [:var/dates])\r\n        data @(rf/subscribe [:var/data])\r\n        chart-period @(rf/subscribe [:var/chart-period])\r\n        line (first (filter #(= (:id %) chart-period) static/var-charts-choice-map))\r\n        days (case (line :frequency) :daily (* (line :period) 250) :weekly (* (line :period) 52) :monthly (* (line :period) 12))]\r\n    [box :class \"subbody rightelement\" :width standard-box-width :height standard-box-height\r\n     :child\r\n     [v-box :gap \"10px\" :class \"element\" :width \"100%\" :height \"100%\"\r\n      :children\r\n      [[heading-box]                                        ; [title :label (get-in pages [@current-page :title]) :level :level1]\r\n       [oz/vega-lite (charting/backtest-chart\r\n                       (take-last days (get-in dates [(line :frequency)]))\r\n                       (take-last days (get-in data [:portfolio-value (line :frequency)]))\r\n                       (- standard-box-width-nb 200) (- standard-box-height-nb 300))]]]]))\r\n\r\n\r\n(defn active-home []\r\n  (let [active-tab @(rf/subscribe [:portfolio-review/active-tab])]\r\n    (.scrollTo js/window 0 0)                             ;on view change we go back to top\r\n    (case active-tab\r\n      :summary                       [summary-text]\r\n      :contribution                  [contribution-or-alpha-chart @(rf/subscribe [:portfolio-review/contribution-chart-data])]\r\n      :alpha                         [contribution-or-alpha-chart @(rf/subscribe [:portfolio-review/alpha-chart-data])]\r\n      :top-bottom                    [top-contributors]\r\n      :jensen                        [contribution-or-alpha-chart @(rf/subscribe [:portfolio-review/jensen-chart-data])]\r\n      :backtest-history                          [backtest-history]\r\n      [:div.output \"nothing to display\"])))\r\n\r\n\r\n(defn nav []\r\n  (let [active-tab @(rf/subscribe [:portfolio-review/active-tab])]\r\n    [h-box\r\n     :children [\r\n                [v-box\r\n                 :gap \"20px\"\r\n                 :class \"leftnavbar\"\r\n                 :children (into [\r\n                                  [h-box :children [[box    :child [button :style {:width \"90px\"} :class \"btn btn-primary btn-block\" :label \"Previous\" :on-click previous-page!]]\r\n                                                    [box :size \"1\" :align :center  :child [label :label (str (inc @current-page) \"/\" maximum-page) :style {:width \"70px\" :color \"white\" :text-align \"center\"}]]\r\n                                                    [box    :child [button :style {:width \"90px\"} :class \"btn btn-primary btn-block\" :label \"Next\"  :on-click next-page!]]]]\r\n                                  [line :color \"#CA3E47\" :class \"separatornavline\"]\r\n\r\n                                  ]\r\n                                 (for [item portfolio-review-navigation]\r\n                                   [button\r\n                                    :class (str \"btn btn-primary btn-block\" (if (and (= active-tab (:code item))) \" active\"))\r\n                                    :label (:name item)\r\n                                    :on-click #(go-to-block! (:code item)) ;#(rf/dispatch [:portfolio-review/active-tab (:code item)])\r\n\r\n                                    ]))]\r\n                ]]))\r\n\r\n(defn view []\r\n  [h-box :gap \"10px\"\r\n   ;:style {:overflow \"hidden\"}\r\n   :padding \"0px\"\r\n   :children [[nav] [active-home]]])\r\n"]}