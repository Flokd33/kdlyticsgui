{"version":3,"sources":["kdlyticsgui/guitools.cljs"],"mappings":"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","names":["kdlyticsgui.guitools/mrt-right-element-box-generic","id","width","title-str","opts","children","show-element","reagent.core.atom","re-com.core/v-box","cljs.core.concat","re-com.core/h-box","cljs.core.into","re-com.core/title","re-com.core/gap","kdlyticsgui.mui/switch","cljs.core/not","cljs.core/deref","kdlyticsgui.guitools/slider-result","kdlyticsgui.guitools/select-result","kdlyticsgui.guitools/grouping-result","kdlyticsgui.guitools/autocomplete-result","kdlyticsgui.guitools/radio-group-result","kdlyticsgui.guitools/button-result","kdlyticsgui.guitools/start-date-result","G__37844","props__29207__auto__","maybe-ref__29208__auto__","vec__37845","helix.core/extract-cljs-props","goog/DEBUG","G__37893","kdlyticsgui.guitools/mui-dev","portfolio","kdlyticsgui.mui/right-element-box-generic","kdlyticsgui.mui/my-grid","kdlyticsgui.mui/select-input-simple","iter__5523__auto__","s__37856","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__37858","cljs.core/chunk-buffer","i__37857","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__37855","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","p","cljs.core/reset!","p1__37837#","kdlyticsgui.mui/event-value","kdlyticsgui.mui/text-simple","helix.core/get-react","obj37836","obj37849","obj37851","obj37853","obj37861","obj37863","obj37865","p1__37839#","p2__37838#","obj37872","obj37874","obj37876","p1__37840#","obj37878","obj37880","obj37882","p1__37841#","obj37884","obj37886","obj37888","obj37890","obj37892","kdlyticsgui.mui/select-input-search","s__37867","b__37869","i__37868","iter__37866","kdlyticsgui.mui/synthetic-event-value","kdlyticsgui.mui/radio-group-button","kdlyticsgui.mui/slider-simple","kdlyticsgui.mui/button-simple","cljs.core/chunk-first"],"sourcesContent":["(ns kdlyticsgui.guitools\r\n  (:require\r\n    [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                         single-dropdown hyperlink modal-panel alert-box throbber input-password selection-list md-circle-icon-button\r\n                         input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n    [re-frame.core :as rf]\r\n    [reagent.core :as r]\r\n    [kdlyticsgui.tools :as t]\r\n    [kdlyticsgui.static :as static]\r\n    [clojure.set :as cset]\r\n    [kdlyticsgui.mrttables :as mrt]\r\n    [helix.core :refer [$ defnc]]\r\n    [kdlyticsgui.mui :as mui]\r\n    [\"@mui/material\" :as mm :refer ( Switch)]\r\n    [helix.hooks :refer [use-state use-effect use-memo]]\r\n    [helix.dom :as d]\r\n    ))\r\n\r\n(defn mrt-right-element-box-generic\r\n  [id width title-str opts children]\r\n  (let [show-element (r/atom true)]\r\n    (fn [id width title-str opts children]                  ;see https://github.com/reagent-project/reagent/blob/master/doc/CreatingReagentComponents.md need to repeat the arguments!\r\n      [v-box :class \"subbody rightelement\" :gap \"0px\" :width width\r\n       :children (concat [[h-box :align :center :children (into [[title :label title-str :level :level1] [gap :size \"1\"]]\r\n                                                                (if (:show-hide opts) [($ mui/switch {:checked-atom show-element :default-checked (not (:hide-by-default opts))})]))]]\r\n                         (if @show-element children))])))\r\n\r\n(def slider-result (r/atom \"Slider result\"))\r\n(def select-result (r/atom \"Simple select result\"))\r\n(def grouping-result (r/atom \"Grouping select result\"))\r\n(def autocomplete-result (r/atom \"Autocomplete result\"))\r\n(def radio-group-result (r/atom \"RadioGroup result\"))\r\n(def button-result (r/atom \"Button result\"))\r\n(def start-date-result (r/atom \"Date result\"))\r\n\r\n\r\n(defnc mui-dev []\r\n  (let [portfolio [\"PORTFOLIO 1\" \"PORTFOLIO 2\"]\r\n        ;portfolio-grp static/portfolio-alignment-groups\r\n        ;start-date (rf/subscribe [:portfolio-trade-history/start-date])\r\n        ;end-date (rf/subscribe [:portfolio-trade-history/end-date])\r\n        ]\r\n    [(mui/right-element-box-generic \"test\" \"1800px\" \"My Components\"\r\n                             [($ mui/my-grid {:direction \"row\" :gap \"30px\"\r\n                                              :children [($ mui/my-grid {:direction \"column\" :gap \"20px\" :children\r\n                                                                         [($ mui/select-input-simple {:label-text \"Portfolio\"\r\n                                                                                                      :choices (into [] (for [ p portfolio] {:id p :label p}))\r\n                                                                                                      :on-change #(reset! select-result (mui/event-value %))})\r\n                                                                          ($ mui/text-simple {:variant \"body1\" :text @select-result :color \"white\"})]})\r\n                                                         ($ mui/my-grid {:direction \"column\" :gap \"20px\" :children\r\n                                                                         [($ mui/select-input-search {:label-text \"Select a portfolio\"\r\n                                                                                                      :choices (into [] (for [ p portfolio] {:id p :label p}))\r\n                                                                                                      :on-change #(reset! autocomplete-result (mui/synthetic-event-value %2))})\r\n                                                                          ($ mui/text-simple {:variant \"body1\" :text @autocomplete-result :color \"white\"})]})\r\n\r\n                                                         ($ mui/my-grid {:direction \"column\" :gap \"20px\" :children\r\n                                                                         [($ mui/radio-group-button {:title \"Make a choice\"\r\n                                                                                                     :list [{:value \"choice1\" :label \"Choice 1\"} {:value \"choice2\" :label \"Choice 2\"}]\r\n                                                                                                     :on-change #(reset! radio-group-result (mui/event-value %)) })\r\n                                                                          ($ mui/text-simple {:variant \"body1\" :text @radio-group-result :color \"white\"})\r\n                                                                          ]})\r\n                                                         ($ mui/my-grid {:direction \"column\" :gap \"20px\" :children\r\n                                                                         [($ mui/slider-simple {:width \"200px\" :on-change #(reset! slider-result (mui/event-value %))})\r\n                                                                          ($ mui/text-simple {:variant \"body1\" :text @slider-result :color \"white\"})]})\r\n                                                         ($ mui/my-grid {:direction \"column\" :gap \"20px\" :children\r\n                                                                         [($ mui/button-simple {:variant \"contained\" :text \"Fetch\" :on-click #(reset! button-result \"Fetch\") })\r\n                                                                          ($ mui/button-simple {:variant \"outlined\" :text \"Refresh\" :on-click #(do (reset! button-result \"Refresh\")) })\r\n                                                                          ($ mui/text-simple {:variant \"body1\" :text @button-result :color \"white\"})]})\r\n                                                         ;(mui/mui-vbox :children\r\n                                                         ;              [($ mui/select-input-grouping {:label-text \"Portfolio\"\r\n                                                         ;                                             :choices portfolio-grp\r\n                                                         ;                                             :on-change #(reset! grouping-result (mui/event-value %))})\r\n                                                         ;               [gap :size \"10px\"]\r\n                                                         ;               ($ mui/text-simple {:variant \"body1\" :text @grouping-result :color \"white\"})]\r\n                                                         ;              )\r\n                                                       ;(mui/mui-vbox :children\r\n                                                       ;              [($ mui/date-picker {:title \"Start date\"\r\n                                                       ;                                   :default-start-date \"2023-02-01\"\r\n                                                       ;                                   :on-change #(do (reset! start-date-result (.format % \"YYYY/MM/DD\" )))})\r\n                                                       ;               [gap :size \"10px\"]\r\n                                                       ;               ($ mui/text-simple {:variant \"body1\" :text @start-date-result :color \"white\"})\r\n                                                       ;               ]\r\n                                                       ;              )\r\n                                                       ]})])]))\r\n\r\n\r\n"]}