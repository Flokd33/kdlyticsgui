shadow$provide.module$node_modules$$tanstack$table_core$build$lib$features$Pagination=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$tanstack$table_core$build$lib$utils");exports.Pagination={getInitialState:state=>Object.assign({},state,{pagination:Object.assign({},{pageIndex:0,pageSize:10},null==state?void 0:state.pagination)}),getDefaultOptions:table=>({onPaginationChange:utils.makeStateUpdater("pagination",
table)}),createTable:table=>{let registered=!1,queued=!1;return{_autoResetPageIndex:()=>{var _ref,_table$options$autoRe;registered?(null!=(_ref=null!=(_table$options$autoRe=table.options.autoResetAll)?_table$options$autoRe:table.options.autoResetPageIndex)?!_ref:table.options.manualPagination)||queued||(queued=!0,table._queue(()=>{table.resetPageIndex();queued=!1})):table._queue(()=>{registered=!0})},setPagination:updater=>{const safeUpdater=old=>utils.functionalUpdate(updater,old);return null==table.options.onPaginationChange?
void 0:table.options.onPaginationChange(safeUpdater)},resetPagination:defaultState=>{var _table$initialState$p;table.setPagination(defaultState?{pageIndex:0,pageSize:10}:null!=(_table$initialState$p=table.initialState.pagination)?_table$initialState$p:{pageIndex:0,pageSize:10})},setPageIndex:updater=>{table.setPagination(old=>{let pageIndex=utils.functionalUpdate(updater,old.pageIndex);pageIndex=Math.max(0,Math.min(pageIndex,"undefined"===typeof table.options.pageCount||-1===table.options.pageCount?
Number.MAX_SAFE_INTEGER:table.options.pageCount-1));return Object.assign({},old,{pageIndex})})},resetPageIndex:defaultState=>{var _table$initialState$p2,_table$initialState,_table$initialState$p3;table.setPageIndex(defaultState?0:null!=(_table$initialState$p2=null==(_table$initialState=table.initialState)?void 0:null==(_table$initialState$p3=_table$initialState.pagination)?void 0:_table$initialState$p3.pageIndex)?_table$initialState$p2:0)},resetPageSize:defaultState=>{var _table$initialState$p4,_table$initialState2,
_table$initialState2$;table.setPageSize(defaultState?10:null!=(_table$initialState$p4=null==(_table$initialState2=table.initialState)?void 0:null==(_table$initialState2$=_table$initialState2.pagination)?void 0:_table$initialState2$.pageSize)?_table$initialState$p4:10)},setPageSize:updater=>{table.setPagination(old=>{const pageSize=Math.max(1,utils.functionalUpdate(updater,old.pageSize));return Object.assign({},old,{pageIndex:Math.floor(old.pageSize*old.pageIndex/pageSize),pageSize})})},setPageCount:updater=>
table.setPagination(old=>{var _table$options$pageCo;let newPageCount=utils.functionalUpdate(updater,null!=(_table$options$pageCo=table.options.pageCount)?_table$options$pageCo:-1);"number"===typeof newPageCount&&(newPageCount=Math.max(-1,newPageCount));return Object.assign({},old,{pageCount:newPageCount})}),getPageOptions:utils.memo(()=>[table.getPageCount()],pageCount=>{let pageOptions=[];pageCount&&0<pageCount&&(pageOptions=[...Array(pageCount)].fill(null).map((_,i)=>i));return pageOptions},{key:"getPageOptions",
debug:()=>{var _table$options$debugA;return null!=(_table$options$debugA=table.options.debugAll)?_table$options$debugA:table.options.debugTable}}),getCanPreviousPage:()=>0<table.getState().pagination.pageIndex,getCanNextPage:()=>{const {pageIndex}=table.getState().pagination,pageCount=table.getPageCount();return-1===pageCount?!0:0===pageCount?!1:pageIndex<pageCount-1},previousPage:()=>table.setPageIndex(old=>old-1),nextPage:()=>table.setPageIndex(old=>old+1),getPrePaginationRowModel:()=>table.getExpandedRowModel(),
getPaginationRowModel:()=>{!table._getPaginationRowModel&&table.options.getPaginationRowModel&&(table._getPaginationRowModel=table.options.getPaginationRowModel(table));return table.options.manualPagination||!table._getPaginationRowModel?table.getPrePaginationRowModel():table._getPaginationRowModel()},getPageCount:()=>{var _table$options$pageCo2;return null!=(_table$options$pageCo2=table.options.pageCount)?_table$options$pageCo2:Math.ceil(table.getPrePaginationRowModel().rows.length/table.getState().pagination.pageSize)}}}}}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$features$Pagination.js.map
