{"version":3,"sources":["kdlyticsgui/mount.cljs"],"mappings":"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","names":["kdlyticsgui.mount/default-db","re_frame.core.reg_event_db","_","seq__31269","cljs.core/seq","chunk__31270","count__31271","i__31272","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","k","cljs.core/keys","re_frame.core.reg_sub","db","seq__31297","chunk__31298","count__31299","i__31300","p__31311","vec__31312","cljs.core.nth","p__31316","vec__31317","data","cljs.core.assoc","p__31321","vec__31322","page","sub-page","cljs.core/assoc-in","re_frame.core.reg_event_fx","p__31326","p__31327","map__31328","cljs.core/--destructure-map","cljs.core.get","vec__31329","instruments","positions","and__5043__auto__","cljs.core._EQ_","p1__31325#","cljs.core.mapv","cljs.core.merge","cljs.core.get_in","cljs.core.into","iter__5523__auto__","s__31333","cljs.core/LazySeq","c__5521__auto__","size__5522__auto__","b__31335","cljs.core/chunk-buffer","i__31334","vec__31336","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__31332","vec__31347","cljs.core/cons","cljs.core/rest","p","g","cljs.core/group-by","s__31340","b__31342","i__31341","iter__31339","s__31351","b__31353","i__31352","iter__31350","line","seq__31358","chunk__31359","count__31360","i__31361","p__31375","vec__31376","p__31382","vec__31383","id","f","p__31386","vec__31387","qt-date","dt","kdlyticsgui.tools/gdate->yyyyMMdd","kdlyticsgui.tools/ddMMMyyyy->gdate","p__31390","vec__31391","attribution-date","p__31395","vec__31396","snapshot","G__31399","js/Error","p__31401","vec__31402","G__31405","p__31407","vec__31408","G__31411","p__31412","vec__31413","shortcut-key","cljs.core.keyword","cljs.core/name","shortcut-value","p__31416","vec__31417","G__31420","kdlyticsgui.mount/http-get-dispatch","request","vr","cljs.core/vector?","seq__31421","chunk__31422","count__31423","i__31424","r","c__27979__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__27980__auto__","switch__27909__auto__","state_31509","state_val_31510","inst_31489","inst_31490","cljs.core.async.impl.ioc-helpers/take!","inst_31492","inst_31493","inst_31494","inst_31495","inst_31496","inst_31497","statearr-31511","statearr-31512","statearr-31513","inst_31499","cljs.core/PersistentVector","inst_31500","inst_31501","inst_31502","inst_31503","inst_31504","statearr-31514","statearr-31515","inst_31507","cljs.core.async.impl.ioc-helpers/return-chan","statearr-31516","state-machine__27910__auto__","ret-value__27911__auto__","result__27912__auto__","cljs.core/keyword-identical?","ex__27913__auto__","e31517","statearr-31518","statearr-31519","state__27981__auto__","statearr-31520","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_31541","state_val_31542","inst_31521","inst_31522","inst_31524","inst_31525","inst_31526","inst_31527","inst_31528","inst_31529","statearr-31543","statearr-31544","statearr-31545","inst_31531","inst_31532","inst_31533","inst_31534","inst_31535","inst_31536","statearr-31546","statearr-31547","inst_31539","statearr-31548","e31549","statearr-31550","statearr-31551","statearr-31552","cljs-http.client/get","re-frame.core/dispatch","cljs.core.conj","re-frame.core/reg-fx","kdlyticsgui.mount/http-get-asset","seq__31553","chunk__31554","count__31555","i__31556","state_31647","state_val_31648","inst_31625","inst_31626","inst_31627","inst_31628","inst_31630","inst_31631","inst_31632","inst_31633","inst_31634","inst_31635","statearr-31649","statearr-31650","statearr-31651","inst_31637","inst_31638","inst_31639","inst_31640","inst_31641","inst_31642","statearr-31652","statearr-31653","inst_31645","statearr-31654","e31655","statearr-31656","statearr-31657","statearr-31658","state_31681","state_val_31682","inst_31659","inst_31660","inst_31661","inst_31662","inst_31664","inst_31665","inst_31666","inst_31667","inst_31668","inst_31669","statearr-31683","statearr-31684","statearr-31685","inst_31671","inst_31672","inst_31673","inst_31674","inst_31675","inst_31676","statearr-31686","statearr-31687","inst_31679","statearr-31688","e31689","statearr-31690","statearr-31691","statearr-31692","kdlyticsgui.static/server-address","kdlyticsgui.mount/http-post-dispatch","seq__31693","chunk__31694","count__31695","i__31696","state_31830","state_val_31831","inst_31797","inst_31798","statearr-31832","statearr-31833","statearr-31834","inst_31813","inst_31814","inst_31815","inst_31816","inst_31817","inst_31818","statearr-31835","statearr-31836","statearr-31837","inst_31800","inst_31801","inst_31802","inst_31803","cljs.core/PersistentHashMap","statearr-31838","inst_31805","inst_31806","inst_31807","inst_31808","statearr-31839","inst_31810","inst_31811","inst_31820","inst_31821","inst_31822","inst_31823","inst_31824","inst_31825","statearr-31840","statearr-31841","inst_31828","statearr-31842","e31843","statearr-31844","statearr-31845","statearr-31846","state_31880","state_val_31881","inst_31847","inst_31848","statearr-31882","statearr-31883","statearr-31884","inst_31863","inst_31864","inst_31865","inst_31866","inst_31867","inst_31868","statearr-31885","statearr-31886","statearr-31887","inst_31850","inst_31851","inst_31852","inst_31853","statearr-31888","inst_31855","inst_31856","inst_31857","inst_31858","statearr-31889","inst_31860","inst_31861","inst_31870","inst_31871","inst_31872","inst_31873","inst_31874","inst_31875","statearr-31890","statearr-31891","inst_31878","statearr-31892","e31893","statearr-31894","statearr-31895","statearr-31896","cljs_http.client.post","kdlyticsgui.mount/http-post-dispatch-test","seq__31897","chunk__31898","count__31899","i__31900","state_32034","state_val_32035","inst_32001","inst_32002","statearr-32036","statearr-32037","statearr-32038","inst_32017","inst_32018","inst_32019","inst_32020","inst_32021","inst_32022","statearr-32039","statearr-32040","statearr-32041","inst_32004","inst_32005","inst_32006","inst_32007","statearr-32042","inst_32009","inst_32010","inst_32011","inst_32012","statearr-32043","inst_32014","inst_32015","inst_32024","inst_32025","inst_32026","inst_32027","inst_32028","inst_32029","statearr-32044","statearr-32045","inst_32032","statearr-32046","e32047","statearr-32048","statearr-32049","statearr-32050","state_32084","state_val_32085","inst_32051","inst_32052","statearr-32086","statearr-32087","statearr-32088","inst_32067","inst_32068","inst_32069","inst_32070","inst_32071","inst_32072","statearr-32089","statearr-32090","statearr-32091","inst_32054","inst_32055","inst_32056","inst_32057","statearr-32092","inst_32059","inst_32060","inst_32061","inst_32062","statearr-32093","inst_32064","inst_32065","inst_32074","inst_32075","inst_32076","inst_32077","inst_32078","inst_32079","statearr-32094","statearr-32095","inst_32082","statearr-32096","e32097","statearr-32098","statearr-32099","statearr-32100","kdlyticsgui.mount/http-put-dispatch","state_32125","state_val_32126","inst_32101","inst_32102","inst_32103","inst_32104","inst_32105","inst_32106","inst_32108","inst_32109","inst_32110","inst_32111","inst_32112","inst_32113","statearr-32127","statearr-32128","statearr-32129","inst_32115","inst_32116","inst_32117","inst_32118","inst_32119","inst_32120","statearr-32130","statearr-32131","inst_32123","statearr-32132","e32133","statearr-32134","statearr-32135","statearr-32136","kdlyticsgui.mount/simple-http-get-events","kdlyticsgui.mount/simple-http-assets","p__32137","p__32138","map__32139","vec__32140"],"sourcesContent":["(ns kdlyticsgui.mount\r\n  (:require\r\n    [kdlyticsgui.static :as static]\r\n    [re-frame.core :as rf]\r\n    [cljs-http.client :as http]\r\n    [cljs.core.async :refer [<!]]\r\n    [cljs-time.core :refer [today]]\r\n    [kdlyticsgui.tools :as t]\r\n    ;[tech.v3.dataset :as ds]\r\n    )\r\n  (:require-macros [cljs.core.async.macros :refer [go]]))\r\n\r\n(def default-db {:rot13                          false\r\n                 :test-data                      nil\r\n\r\n                 :navigation/active-section         :entry\r\n                 :navigation/active-view-wealth     :summary\r\n                 :navigation/active-view-positions  :summary\r\n                 :navigation/active-view-vault      :inventory\r\n                 :navigation/active-view-cellar     :inventory\r\n                 :navigation/active-view-tools      :scrapping\r\n\r\n                 ;:navigation/active              {:view        :entry :home        :summary}\r\n\r\n                 :positions-summary                 []\r\n\r\n\r\n                 :navigation/success-modal       {:show false :on-close nil :response nil}\r\n                 :navigation/success-compile     {:show false :on-close nil :response nil}\r\n                 :navigation/show-mounting-modal false\r\n                 :dummy                          nil                                 ;can be useful\r\n                 })\r\n(rf/reg-event-db ::initialize-db (fn [_ _] default-db))\r\n\r\n;list of keys event for which a dispatch will assoc a value to the db given key event\r\n(doseq [k (keys default-db)] (rf/reg-sub k (fn [db] (k db))))\r\n\r\n(doseq [k [:rot13\r\n           :test-data\r\n           :navigation/active-section\r\n           :navigation/active-view-wealth\r\n           :navigation/active-view-positions\r\n           :navigation/active-view-vault\r\n           :navigation/active-view-cellar\r\n           :navigation/active-view-tools\r\n\r\n\r\n           :positions-summary\r\n\r\n           :navigation/show-mounting-modal\r\n           ]] (rf/reg-event-db k (fn [db [_ data]] (assoc db k data))))\r\n\r\n(rf/reg-event-db\r\n  :navigation/active\r\n  (fn [db [_ page sub-page]] (assoc-in db [:navigation/active page] sub-page)))\r\n\r\n\r\n\r\n;  :positions\r\n;  (fn [db [_ positions]]\r\n;    ;(println positions)\r\n;    (let [res (array-of-lists->records positions)]                                             ;(mapv #(into {} (for [k (keys positions)] [k (nth (positions k) %)])) (range (count (positions (first (keys positions))))))\r\n;      (assoc db                                             ;:positions positions\r\n;        :positions res\r\n;        :all-instrument-ids (distinct (map :id res))\r\n;        ;:pivoted-positions (static/get-pivoted-data res)\r\n;        :navigation/show-mounting-modal false))))\r\n\r\n;(rf/reg-event-fx\r\n;  :positions\r\n;  (fn [{:keys [db]} [_ positions]]\r\n;    (let [res (array-of-lists->records positions)]\r\n;      {:db                 (assoc db :positions res :all-instrument-ids (distinct (map :id res)) :navigation/show-mounting-modal false)\r\n;       :http-post-dispatch {:url          (str static/ta-server-address \"scorecard-request\")\r\n;                            :edn-params   {:portfolio (:scorecard/portfolio db)\r\n;                                           :isin-seq  (map :isin (t/chainfilter {:portfolio (:scorecard/portfolio db) :qt-jpm-sector (:scorecard/sector db) :original-quantity pos?} res))}\r\n;                            :dispatch-key [:scorecard/trade-analyser-data]}})))\r\n\r\n;(def nkp (atom nil))\r\n\r\n\r\n\r\n\r\n\r\n(rf/reg-event-fx\r\n  :instruments\r\n  (fn [{:keys [db]} [_ instruments]]\r\n    (let [positions (if (and (= (:positions db) []) (:naked-positions db)) (mapv #(merge % (get-in db [:instruments (:id %)])) (:naked-positions db)) [])\r\n          ]\r\n      {:db (assoc db :all-instrument-ids (keys instruments)\r\n                     :instruments instruments\r\n                     :positions positions\r\n                     ;:positions-ds (ds/->dataset positions)\r\n                     :navigation/show-mounting-modal (= positions [])\r\n                     :implementation/live-positions (into {} (for [[p g] (group-by :portfolio positions)]\r\n                                                               [p (into {} (for [line g :when (and (some? (:isin line)) (pos? (:weight line)))] [(:isin line) (:weight line)]))])) ;(* 100. (:weight line))\r\n                     )})))\r\n\r\n\r\n\r\n\r\n\r\n(doseq [k [:single-portfolio-risk/filter\r\n           :multiple-portfolio-risk/filter\r\n           :portfolio-alignment/filter\r\n           :single-portfolio-attribution/filter\r\n           :multiple-portfolio-attribution/filter\r\n           :portfolio-history/filter\r\n           :attribution-history/filter]]\r\n  (rf/reg-event-db k (fn [db [_ id f]] (assoc-in db [k id] f))))\r\n\r\n(rf/reg-event-db\r\n  :qt-date\r\n  (fn [db [_ qt-date]] (let [dt (.replace ^string qt-date \"\\\"\" \"\")]\r\n                         (assoc db :qt-date dt\r\n                                   :portfolio-history/end-period (t/gdate->yyyyMMdd (t/ddMMMyyyy->gdate dt))))))\r\n\r\n;THIS IS A DUMMY - IN PRACTICE WE'D DO MORE THINGS HERE\r\n(rf/reg-event-db\r\n  :attribution-date\r\n  (fn [db [_ attribution-date]] (assoc db :attribution-date (.replace ^string attribution-date \"\\\"\" \"\"))))\r\n\r\n(rf/reg-event-db\r\n  :single-portfolio-risk/shortcut\r\n  (fn [db [_ snapshot]]\r\n    (case snapshot\r\n      1 (assoc db :single-portfolio-risk/shortcut snapshot\r\n                  :single-portfolio-risk/display-style \"Table\"\r\n                  :single-portfolio-risk/hide-zero-holdings true\r\n                  :single-portfolio-risk/filter {1 :region 2 :country 3 :issuer})\r\n      2 (assoc db :single-portfolio-risk/shortcut snapshot\r\n                  :single-portfolio-risk/display-style \"Tree\"\r\n                  :single-portfolio-risk/hide-zero-holdings true\r\n                  :single-portfolio-risk/filter {1 :country 2 :sector 3 \"None\"})\r\n      3 (assoc db :single-portfolio-risk/shortcut snapshot\r\n                  :single-portfolio-risk/display-style \"Tree\"\r\n                  :single-portfolio-risk/hide-zero-holdings true\r\n                  :single-portfolio-risk/filter {1 :sector 2 :country 3 \"None\"})\r\n      4 (assoc db :single-portfolio-risk/shortcut snapshot\r\n                  :single-portfolio-risk/display-style \"Tree\"\r\n                  :single-portfolio-risk/hide-zero-holdings true\r\n                  :single-portfolio-risk/filter {1 :sector 2 :country 3 :issuer}))))\r\n\r\n(rf/reg-event-db\r\n  :multiple-portfolio-risk/shortcut\r\n  (fn [db [_ snapshot]]\r\n    (case snapshot\r\n      1 (assoc db :multiple-portfolio-risk/shortcut snapshot\r\n                  :multiple-portfolio-risk/display-style \"Table\"\r\n                  :multiple-portfolio-risk/field-one :nav\r\n                  :multiple-portfolio-risk/hide-zero-holdings true\r\n                  :multiple-portfolio-risk/filter {1 :region 2 :country 3 :issuer})\r\n      2 (assoc db :multiple-portfolio-risk/shortcut snapshot\r\n                  :multiple-portfolio-risk/display-style \"Tree\"\r\n                  :multiple-portfolio-risk/field-one :nav\r\n                  :multiple-portfolio-risk/hide-zero-holdings true\r\n                  :multiple-portfolio-risk/filter {1 :country 2 :issuer 3 \"None\"})\r\n      3 (assoc db :multiple-portfolio-risk/shortcut snapshot\r\n                  :multiple-portfolio-risk/display-style \"Tree\"\r\n                  :multiple-portfolio-risk/field-one :nav\r\n                  :multiple-portfolio-risk/hide-zero-holdings true\r\n                  :multiple-portfolio-risk/filter {1 :sector 2 :country 3 \"None\"})\r\n      4 (assoc db :multiple-portfolio-risk/shortcut snapshot))))\r\n\r\n(rf/reg-event-db\r\n  :portfolio-alignment/shortcut\r\n  (fn [db [_ snapshot]]\r\n    (case snapshot\r\n      1 (assoc db :portfolio-alignment/shortcut snapshot\r\n                  :portfolio-alignment/display-style \"Table\"\r\n                  :portfolio-alignment/field-one :nav\r\n                  :portfolio-alignment/filter {1 :region 2 :country 3 :issuer})\r\n      2 (assoc db :portfolio-alignment/shortcut snapshot\r\n                  :portfolio-alignment/display-style \"Tree\"\r\n                  :portfolio-alignment/field-one :nav\r\n                  :portfolio-alignment/filter {1 :country 2 :issuer 3 \"None\"})\r\n      3 (assoc db :portfolio-alignment/shortcut snapshot\r\n                  :portfolio-alignment/display-style \"Tree\"\r\n                  :portfolio-alignment/field-one :nav\r\n                  :portfolio-alignment/filter {1 :sector 2 :country 3 :issuer})\r\n      4 (assoc db :portfolio-alignment/shortcut snapshot))))\r\n\r\n(rf/reg-event-db\r\n  :cycle-shortcut\r\n  (fn [db [_ _ _]]\r\n    (let [shortcut-key (keyword (str (name (:navigation/active-view db)) \"-risk/shortcut\"))\r\n          shortcut-value (shortcut-key db)]\r\n      (cond\r\n        (< shortcut-value 4) (assoc db shortcut-key (inc shortcut-value))\r\n        :else (assoc db shortcut-key 1)))))\r\n\r\n;;;;;;;;;;;;;;;;;;;;;;;\r\n;;HTTP GET DEFINITION;;\r\n;;;;;;;;;;;;;;;;;;;;;;;\r\n\r\n(rf/reg-event-db\r\n  :tree-table\r\n  (fn [db [_ _ _]]\r\n    (let [shortcut-key (keyword (str (name (:navigation/active-view db)) \"-risk/display-style\"))]\r\n      (case (shortcut-key db)\r\n        \"Tree\"  (assoc db shortcut-key \"Table\")\r\n        \"Table\" (assoc db shortcut-key \"Tree\")))))\r\n\r\n(defn http-get-dispatch\r\n  \"if response header is application/json keys will get keywordized automatically - otherwise send as text/plain\"\r\n  [request]\r\n  (let [vr (if (vector? request) request [request])]\r\n    (doseq [r vr]\r\n      (go (let [response (<! (http/get (:url r)))]\r\n            (rf/dispatch (conj (:dispatch-key r) (:body response)))\r\n            (if (:flag r) (rf/dispatch [(:flag r) (:flag-value r)])))))))\r\n\r\n(rf/reg-fx :http-get-dispatch http-get-dispatch)\r\n\r\n(defn http-get-asset\r\n  \"if response header is application/json keys will get keywordized automatically - otherwise send as text/plain\"\r\n  [request]\r\n  (let [vr (if (vector? request) request [request])]\r\n    (doseq [r vr]\r\n      (go (let [response (<! (http/get (str static/server-address \"asset?namespace=\" (:namespace request) \"&asset=\" (:asset request))))]\r\n            (rf/dispatch (conj (:dispatch-key r) (:body response)))\r\n            (if (:flag r) (rf/dispatch [(:flag r) (:flag-value r)])))))))\r\n\r\n(rf/reg-fx :http-get-asset http-get-asset)\r\n\r\n(defn http-post-dispatch\r\n  \"if response header is application/json keys will get keywordized automatically - otherwise send as text/plain\"\r\n  [request]\r\n  (let [vr (if (vector? request) request [request])]\r\n    (doseq [r vr]\r\n      (go (let [response (<! (http/post (:url r) (if (:edn-params r) {:edn-params (:edn-params r)} {:json-params (:json-params r)})))]\r\n            (rf/dispatch (conj (:dispatch-key r) (:body response)))\r\n            (if (:flag r) (rf/dispatch [(:flag r) (:flag-value r)])))))))\r\n\r\n(rf/reg-fx :http-post-dispatch http-post-dispatch)\r\n\r\n(defn http-post-dispatch-test\r\n  \"if response header is application/json keys will get keywordized automatically - otherwise send as text/plain\"\r\n  [request]\r\n  (let [vr (if (vector? request) request [request])]\r\n    (doseq [r vr]\r\n      (go (let [response (<! (http/post (:url r) (if (:edn-params r) {:edn-params (:edn-params r) :content-type \"application/json;charset=UTF-8\"} {:json-params (:json-params r)  :content-type \"application/json;charset=UTF-8\"})))]\r\n            (rf/dispatch (conj (:dispatch-key r) (:body response)))\r\n            (if (:flag r) (rf/dispatch [(:flag r) (:flag-value r)])))))))\r\n\r\n\r\n(rf/reg-fx :http-post-dispatch-test http-post-dispatch-test)\r\n\r\n(rf/reg-fx :http-json-post-dispatch http-post-dispatch)\r\n\r\n(defn http-put-dispatch [request]\r\n  (go (let [response (<! (http/post (:url request) {:multipart-params (:multipart-params request)}))]\r\n        (rf/dispatch (conj (:dispatch-key request) (:body response)))\r\n        (if (:flag request) (rf/dispatch [(:flag request) (:flag-value request)])))))\r\n\r\n\r\n(rf/reg-fx :http-put-dispatch http-put-dispatch)\r\n\r\n\r\n(def simple-http-get-events\r\n  [\r\n   {:get-key :get-naked-positions     :url-tail \"naked-position-transit-array\"           :dis-key :naked-positions :mounting-modal true}\r\n\r\n\r\n   ])\r\n\r\n(def simple-http-assets\r\n  [{:get-key :get-portfolios              :namespace \"common.static\" :asset \"portfolios\"              :dispatch-key [:portfolios]}\r\n   ])\r\n\r\n\r\n\r\n(rf/reg-event-fx\r\n  :get-positions-summary\r\n  (fn [{:keys [db]} [_ ]]\r\n    {:http-get-dispatch {:url          (str static/server-address \"positions-summary\" )\r\n                         :dispatch-key [:positions-summary]}}))\r\n\r\n;(doseq [line simple-http-get-events]\r\n;  (rf/reg-event-fx\r\n;    (:get-key line)\r\n;    (fn [{:keys [db]} [_]]\r\n;      (if (zero? (count (get-in db [(:dis-key line)])))     ;if it wasn't mounted yet we need to load it\r\n;        {:db (if (:mounting-modal line) (assoc db :navigation/show-mounting-modal true) db) ;some events take time, let's show a throbber\r\n;         :http-get-dispatch {:url           (str static/server-address (:url-tail line))\r\n;                             :dispatch-key  [(:dis-key line)]}}))))\r\n;\r\n;(doseq [line simple-http-assets]\r\n;  (rf/reg-event-fx\r\n;    (:get-key line)\r\n;    (fn [{:keys [db]} [_]]\r\n;      (if (zero? (count (get-in db (:dispatch-key line))))     ;if it wasn't mounted yet we need to load it\r\n;        {:db (if (:mounting-modal line) (assoc db :navigation/show-mounting-modal true) db) ;some events take time, let's show a throbber\r\n;         :http-get-asset line}))))\r\n;\r\n;(rf/reg-event-fx\r\n;  :implementation-list-request\r\n;  (fn [{:keys [db]} [_]]\r\n;    {:db             db\r\n;     :http-get-asset {:namespace \"jasmine.implementation\" :asset \"list-all-implementations\" :dispatch-key [:implementation/implementation-list]}}))\r\n;\r\n;\r\n;(rf/reg-event-fx\r\n;  :get-var-data\r\n;  (fn [{[db] :keys} [_ portfolio]]\r\n;    {:http-get-dispatch {:url          (str static/server-address \"var-data?portfolio=\" portfolio)\r\n;                         :dispatch-key [:var/data]}}))\r\n;\r\n;\r\n;\r\n;\r\n;(rf/reg-event-fx\r\n;  :get-naked-positions-timestamp\r\n;  (fn [{:keys [db]} [_]]\r\n;    {:http-get-dispatch {:url          (str static/server-address \"last-updated\")\r\n;                         :dispatch-key [:check-naked-positions-timestamp]}}))\r\n;\r\n;(rf/reg-event-fx\r\n;  :get-portfolio-var\r\n;  (fn [{:keys [db]} [_ portfolio]]\r\n;    {:db (assoc db :var/portfolio portfolio)\r\n;     :http-get-dispatch {:url          (str static/server-address \"var-data?portfolio=\" portfolio)\r\n;                         :dispatch-key [:var/data]}}))\r\n;\r\n;;SINGLE ATTRIBUTION\r\n;(rf/reg-event-fx\r\n;  :get-single-attribution\r\n;  (fn [{:keys [db]} [_ portfolio period]]\r\n;    {:http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio&portfolio=\" portfolio \"&period=\" period)\r\n;                         :dispatch-key [:single-portfolio-attribution/table]}}))\r\n;\r\n;(rf/reg-event-fx\r\n;  :change-single-attribution-portfolio\r\n;  (fn [{:keys [db]} [_ portfolio]]\r\n;    {:db (assoc db :single-portfolio-attribution/portfolio portfolio :navigation/show-mounting-modal true)\r\n;     :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio&portfolio=\" portfolio \"&period=\" (:single-portfolio-attribution/period db))\r\n;                         :dispatch-key [:single-portfolio-attribution/table]}}))\r\n;\r\n;(rf/reg-event-fx\r\n;  :change-single-attribution-period\r\n;  (fn [{:keys [db]} [_ period]]\r\n;    {:db (assoc db :single-portfolio-attribution/period period  :navigation/show-mounting-modal true)\r\n;     :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio&portfolio=\" (:single-portfolio-attribution/portfolio db) \"&period=\" period)\r\n;                         :dispatch-key [:single-portfolio-attribution/table]}}))\r\n;\r\n;;MULTIPLE ATTRIBUTION\r\n;(rf/reg-event-fx\r\n;  :get-multiple-attribution\r\n;  (fn [{:keys [db]} [_ target period]]\r\n;    {:db (assoc db  :navigation/show-mounting-modal true)\r\n;     :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=multiple-portfolio&target=\" target \"&period=\" period)\r\n;                         :dispatch-key [:multiple-portfolio-attribution/table]}}))\r\n;\r\n;(rf/reg-event-fx\r\n;  :change-multiple-attribution-target\r\n;  (fn [{:keys [db]} [_ ktarget]]\r\n;    (let [target (.replace ^string (get-in tables/attribution-table-columns [ktarget :accessor]) \"-\" \" \")]\r\n;      {:db                (assoc db :multiple-portfolio-attribution/field-one ktarget  :navigation/show-mounting-modal true)\r\n;       :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=multiple-portfolio&target=\" target \"&period=\" (:multiple-portfolio-attribution/period db))\r\n;                           :dispatch-key [:multiple-portfolio-attribution/table]}})))\r\n;\r\n;(rf/reg-event-fx\r\n;  :change-multiple-attribution-period\r\n;  (fn [{:keys [db]} [_ period]]\r\n;    (let [target (.replace ^string (get-in tables/attribution-table-columns [(:multiple-portfolio-attribution/field-one db) :accessor]) \"-\" \" \")]\r\n;      {:db                (assoc db :multiple-portfolio-attribution/period period  :navigation/show-mounting-modal true)\r\n;       :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=multiple-portfolio&target=\" target \"&period=\" period)\r\n;                           :dispatch-key [:multiple-portfolio-attribution/table]}})))\r\n;\r\n;;scorecard\r\n;\r\n;(rf/reg-event-fx\r\n;  :get-scorecard-attribution\r\n;  (fn [{:keys [db]} [_ portfolio]]\r\n;    {:http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio-wtd-ytd&portfolio=\" portfolio)\r\n;                         :dispatch-key [:scorecard/attribution-table]}}))\r\n;\r\n;;INDEX RETURNS\r\n;(rf/reg-event-fx\r\n;  :get-attribution-index-returns-portfolio\r\n;  (fn [{:keys [db]} [_ portfolio]]\r\n;    {:db (assoc db :attribution-index-returns/portfolio portfolio)\r\n;     :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio&portfolio=\" portfolio \"&period=\" (:attribution-index-returns/period db))\r\n;                         :dispatch-key [:attribution-index-returns/table]}}))\r\n;\r\n;(rf/reg-event-fx\r\n;  :get-attribution-index-returns-period\r\n;  (fn [{:keys [db]} [_ period]]\r\n;    {:db (assoc db :attribution-index-returns/period period)\r\n;     :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio&portfolio=\" (:attribution-index-returns/portfolio db) \"&period=\" period)\r\n;                         :dispatch-key [:attribution-index-returns/table]}}))\r\n"]}