shadow$provide.module$node_modules$$tanstack$table_core$build$lib$features$Expanding=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$tanstack$table_core$build$lib$utils");exports.Expanding={getInitialState:state=>Object.assign({},{expanded:{}},state),getDefaultOptions:table=>({onExpandedChange:utils.makeStateUpdater("expanded",table),paginateExpandedRows:!0}),createTable:table=>{let registered=!1,queued=!1;return{_autoResetExpanded:()=>
{var _ref,_table$options$autoRe;registered?(null!=(_ref=null!=(_table$options$autoRe=table.options.autoResetAll)?_table$options$autoRe:table.options.autoResetExpanded)?!_ref:table.options.manualExpanding)||queued||(queued=!0,table._queue(()=>{table.resetExpanded();queued=!1})):table._queue(()=>{registered=!0})},setExpanded:updater=>null==table.options.onExpandedChange?void 0:table.options.onExpandedChange(updater),toggleAllRowsExpanded:expanded=>{(null!=expanded?expanded:!table.getIsAllRowsExpanded())?
table.setExpanded(!0):table.setExpanded({})},resetExpanded:defaultState=>{var _table$initialState$e,_table$initialState;table.setExpanded(defaultState?{}:null!=(_table$initialState$e=null==(_table$initialState=table.initialState)?void 0:_table$initialState.expanded)?_table$initialState$e:{})},getCanSomeRowsExpand:()=>table.getPrePaginationRowModel().flatRows.some(row=>row.getCanExpand()),getToggleAllRowsExpandedHandler:()=>e=>{null==e.persist?void 0:e.persist();table.toggleAllRowsExpanded()},getIsSomeRowsExpanded:()=>
{const expanded=table.getState().expanded;return!0===expanded||Object.values(expanded).some(Boolean)},getIsAllRowsExpanded:()=>{const expanded=table.getState().expanded;return"boolean"===typeof expanded?!0===expanded:!Object.keys(expanded).length||table.getRowModel().flatRows.some(row=>!row.getIsExpanded())?!1:!0},getExpandedDepth:()=>{let maxDepth=0;(!0===table.getState().expanded?Object.keys(table.getRowModel().rowsById):Object.keys(table.getState().expanded)).forEach(id=>{id=id.split(".");maxDepth=
Math.max(maxDepth,id.length)});return maxDepth},getPreExpandedRowModel:()=>table.getSortedRowModel(),getExpandedRowModel:()=>{!table._getExpandedRowModel&&table.options.getExpandedRowModel&&(table._getExpandedRowModel=table.options.getExpandedRowModel(table));return table.options.manualExpanding||!table._getExpandedRowModel?table.getPreExpandedRowModel():table._getExpandedRowModel()}}},createRow:(row,table)=>({toggleExpanded:expanded=>{table.setExpanded(old=>{var _expanded;const exists=!0===old?!0:
!(null==old||!old[row.id]);let oldExpanded={};!0===old?Object.keys(table.getRowModel().rowsById).forEach(rowId=>{oldExpanded[rowId]=!0}):oldExpanded=old;expanded=null!=(_expanded=expanded)?_expanded:!exists;return!exists&&expanded?Object.assign({},oldExpanded,{[row.id]:!0}):exists&&!expanded?(old=Object.assign({},oldExpanded),delete old[row.id],old):old})},getIsExpanded:()=>{var _table$options$getIsR;const expanded=table.getState().expanded;return!!(null!=(_table$options$getIsR=null==table.options.getIsRowExpanded?
void 0:table.options.getIsRowExpanded(row))?_table$options$getIsR:!0===expanded||(null==expanded?0:expanded[row.id]))},getCanExpand:()=>{var _table$options$getRow,_table$options$enable,_row$subRows;return null!=(_table$options$getRow=null==table.options.getRowCanExpand?void 0:table.options.getRowCanExpand(row))?_table$options$getRow:(null!=(_table$options$enable=table.options.enableExpanding)?_table$options$enable:!0)&&!(null==(_row$subRows=row.subRows)||!_row$subRows.length)},getToggleExpandedHandler:()=>
{const canExpand=row.getCanExpand();return()=>{canExpand&&row.toggleExpanded()}}})}}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$features$Expanding.js.map
