{"version":3,"sources":["jasminegui/mount.cljs"],"mappings":"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","names":["jasminegui.mount/default-db","cljs.core/set","jasminegui.tools/int-to-gdate","cljs-time.core/today","re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","_","seq__112800","cljs.core/seq","chunk__112801","count__112802","i__112803","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","k","cljs.core/keys","G__112808","G__112809","G__112810","G__112811","re-frame.core/reg-sub","db","seq__112812","chunk__112813","count__112814","i__112815","p__112828","vec__112830","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","p__112836","vec__112837","data","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","p__112844","vec__112846","positions","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","p__112849","vec__112850","portfolios","seq__112853","chunk__112854","count__112855","i__112856","p__112865","vec__112866","p__112870","vec__112871","id","f","cljs.core/assoc-in","p__112874","vec__112875","qt-date","clojure.string/replace","p__112878","vec__112879","attribution-date","p__112882","vec__112883","snapshot","G__112886","js/Error","p__112887","vec__112888","shortcut-key","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","cljs.core/name","shortcut-value","p__112891","vec__112892","G__112895","jasminegui.mount/http-get-dispatch","request","c__41764__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__41765__auto__","switch__41719__auto__","state_112924","state_val_112925","inst_112896","inst_112897","cljs.core.async.impl.ioc-helpers/take!","inst_112899","inst_112900","inst_112901","statearr-112926","statearr-112927","statearr-112928","inst_112903","inst_112904","inst_112905","statearr-112929","inst_112907","statearr-112930","inst_112909","inst_112910","inst_112911","inst_112912","statearr-112931","statearr-112932","statearr-112933","inst_112914","cljs.core/PersistentVector","inst_112915","inst_112916","inst_112917","inst_112918","inst_112919","statearr-112934","statearr-112935","inst_112922","cljs.core.async.impl.ioc-helpers/return-chan","statearr-112936","state-machine__41720__auto__","ret-value__41721__auto__","result__41722__auto__","cljs.core/keyword-identical?","e112937","js/Object","ex__41723__auto__","statearr-112938","cljs.core.async.impl.ioc-helpers/process-exception","state__41766__auto__","statearr-112939","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs-http.client/get","re-frame.core/dispatch","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic","js/JSON.parse","G__112940","G__112941","re-frame.core/reg-fx","jasminegui.mount/http-post-dispatch","state_112974","state_val_112975","inst_112942","inst_112943","inst_112944","inst_112945","inst_112946","cljs.core/PersistentHashMap","inst_112947","inst_112949","inst_112950","inst_112951","statearr-112976","statearr-112977","statearr-112978","inst_112953","inst_112954","inst_112955","statearr-112979","inst_112957","statearr-112980","inst_112959","inst_112960","inst_112961","inst_112962","statearr-112981","statearr-112982","statearr-112983","inst_112964","inst_112965","inst_112966","inst_112967","inst_112968","inst_112969","statearr-112984","statearr-112985","inst_112972","statearr-112986","e112987","statearr-112988","statearr-112989","cljs_http.client.post.cljs$core$IFn$_invoke$arity$variadic","G__112990","G__112991","jasminegui.mount/simple-http-get-events","seq__112992","chunk__112993","count__112994","i__112995","line","re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2","p__113010","p__113011","map__113012","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","vec__113013","p__113017","p__113018","map__113019","vec__113020","jasminegui.static/server-address","p__113024","p__113025","map__113026","vec__113027","portfolio","p__113031","p__113032","map__113033","vec__113034","p__113038","p__113039","map__113040","vec__113041","p__113045","p__113046","map__113047","vec__113048","period","p__113052","p__113053","map__113054","vec__113055","p__113059","p__113060","map__113061","vec__113062","p__113066","p__113067","map__113068","vec__113069","target","p__113073","p__113074","map__113075","vec__113076","ktarget","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","jasminegui.tables/attribution-table-columns","p__113080","p__113081","map__113082","vec__113083","p__113087","p__113088","map__113089","vec__113090"],"sourcesContent":["(ns jasminegui.mount\r\n  (:require\r\n    [reagent.core :as r]\r\n    [jasminegui.static :as static]\r\n    [re-frame.core :as rf]\r\n    [cljs-http.client :as http]\r\n    [cljs.core.async :refer [<!]]\r\n    [jasminegui.tables :as tables]\r\n    [jasminegui.tools :as tools]\r\n    [cljs-time.core :refer [today]]\r\n    ;[re-pressed.core :as rp]\r\n    )\r\n  (:require-macros [cljs.core.async.macros :refer [go]])\r\n  )\r\n\r\n\r\n(def default-db {\r\n                 ;data\r\n                 :positions                                          []\r\n                 :rating-to-score                                    nil\r\n                 :pivoted-positions                                  []\r\n                 :portfolios                                         []\r\n                 :total-positions                                    {}\r\n                 :qt-date                                            \"undefined\"\r\n                 :attribution-date                                   \"undefined\"\r\n\r\n                 ;navigation\r\n                 :navigation/active-view                             :home\r\n                 :navigation/active-home                             :summary\r\n                 :navigation/active-var                              :overview\r\n                 :navigation/active-attribution                      :summary\r\n                 :navigation/success-modal                           {:show false :on-close nil :response nil}\r\n                 :navigation/show-mounting-modal                     true\r\n\r\n                 ;single-portfolio view\r\n                 :single-portfolio-risk/display-style                \"Tree\"\r\n                 :single-portfolio-risk/portfolio                    \"OGEMCORD\"\r\n                 :single-portfolio-risk/filter                       {1 :region 2 :country 3 :issuer}\r\n                 :single-portfolio-risk/hide-zero-holdings           true\r\n                 :single-portfolio-risk/table-filter                 []\r\n                 :single-portfolio-risk/shortcut                     1\r\n\r\n                 ;multiple-portfolio view\r\n                 :multiple-portfolio-risk/display-style              \"Table\"\r\n                 :multiple-portfolio-risk/field-number               \"One\"\r\n                 :multiple-portfolio-risk/field-one                  :nav\r\n                 :multiple-portfolio-risk/field-two                  \"None\"\r\n                 :multiple-portfolio-risk/selected-portfolios        (set nil) ;[\"OGEMCORD\"]\r\n                 :multiple-portfolio-risk/filter                     {1 :region 2 :country 3 :issuer}\r\n                 :multiple-portfolio-risk/hide-zero-holdings         true\r\n                 :multiple-portfolio-risk/shortcut                   1\r\n                 :multiple-portfolio-risk/table-filter               []\r\n\r\n                 ;portfolio-alignment-view\r\n                 :portfolio-alignment/display-style                  \"Tree\"\r\n                 :portfolio-alignment/field                          :nav\r\n                 :portfolio-alignment/filter                         {1 :region 2 :country 3 :issuer}\r\n                 :portfolio-alignment/group                          :cembi\r\n                 :portfolio-alignment/threshold                      :quarter\r\n                 :portfolio-alignment/shortcut                       1\r\n                 :portfolio-alignment/table-filter                   []\r\n\r\n                 ;var view\r\n                 :var/portfolio                                      \"OGEMCORD\"\r\n                 :var/result                                         nil\r\n                 :var/proxies                                        nil\r\n                 :var/history                                        nil\r\n                 :var/data                                           nil\r\n                 :var/dates                                          nil\r\n                 :var/chart-period                                   :daily-3y\r\n\r\n                 ;trade history\r\n                 :trade-history/active-bond                          nil\r\n                 :trade-history/history                              nil\r\n\r\n                 ;single-portfolio attribution\r\n                 :single-portfolio-attribution/display-style         \"Tree\"\r\n                 :single-portfolio-attribution/portfolio             \"OGEMCORD\"\r\n                 :single-portfolio-attribution/filter                {1 :region 2 :country 3 :issuer}\r\n                 :single-portfolio-attribution/period                \"ytd\"\r\n                 :single-portfolio-attribution/table-filter          []\r\n                 :single-portfolio-attribution/shortcut              1\r\n                 :single-portfolio-attribution/table                 []\r\n\r\n                 ;multiple-portfolio attribution\r\n                 :multiple-portfolio-attribution/display-style       \"Tree\"\r\n                 :multiple-portfolio-attribution/field-number        \"One\"\r\n                 :multiple-portfolio-attribution/period              \"ytd\"\r\n                 :multiple-portfolio-attribution/field-one           :total-effect\r\n                 :multiple-portfolio-attribution/field-two           \"None\"\r\n                 :multiple-portfolio-attribution/selected-portfolios (set nil) ;[\"OGEMCORD\"]\r\n                 :multiple-portfolio-attribution/filter              {1 :region 2 :country 3 :issuer}\r\n                 :multiple-portfolio-attribution/shortcut            1\r\n                 :multiple-portfolio-attribution/table-filter        []\r\n                 :multiple-portfolio-attribution/table               []\r\n\r\n                 :attribution/summary                                []\r\n\r\n                 :single-bond-trade-history/data                     []\r\n                 :single-bond-trade-history/flat-data                []\r\n                 :single-bond-trade-history/bond                     nil\r\n                 :single-bond-trade-history/show-modal               false\r\n                 :single-bond-trade-history/show-flat-modal          false\r\n                 :single-bond-trade-history/show-throbber            false\r\n                 :portfolio-trade-history/data                       []\r\n                 :portfolio-trade-history/portfolio                  \"OGEMCORD\"\r\n                 :portfolio-trade-history/start-date                 (tools/int-to-gdate 20200101)\r\n                 :portfolio-trade-history/end-date                   (tools/int-to-gdate (today))\r\n                 :portfolio-trade-history/performance                \"No\"\r\n\r\n                 :portfolio-review/portfolio                         \"OGEMCORD\"\r\n                 :portfolio-review/active-tab                        :summary\r\n                 :portfolio-review/summary-data                      nil\r\n                 :portfolio-review/contribution-chart-data           nil\r\n                 :portfolio-review/alpha-chart-data                  nil\r\n                 :portfolio-review/jensen-chart-data                 nil\r\n                 :portfolio-review/marginal-beta-chart-data          nil\r\n                 :portfolio-review/historical-beta-chart-data        nil\r\n                 :portfolio-review/historical-performance-chart-data nil\r\n\r\n\r\n                 })\r\n\r\n(rf/reg-event-db ::initialize-db (fn [_ _] default-db))\r\n(doseq [k (keys default-db)] (rf/reg-sub k (fn [db] (k db))))\r\n\r\n\r\n(doseq [k [:navigation/active-view\r\n           :navigation/active-home\r\n           :navigation/active-var\r\n           :navigation/active-attribution\r\n           :rating-to-score\r\n           :pivoted-positions\r\n           :total-positions\r\n           :var/proxies\r\n           :var/dates\r\n           :var/data\r\n           :var/portfolio\r\n           :var/chart-period\r\n           \r\n           :single-portfolio-risk/portfolio\r\n           :single-portfolio-risk/display-style\r\n           :single-portfolio-risk/hide-zero-holdings\r\n           :single-portfolio-risk/table-filter\r\n           \r\n           :multiple-portfolio-risk/display-style\r\n           :multiple-portfolio-risk/field-number\r\n           :multiple-portfolio-risk/field-one\r\n           :multiple-portfolio-risk/field-two\r\n           :multiple-portfolio-risk/selected-portfolios\r\n           :multiple-portfolio-risk/hide-zero-holdings\r\n           :multiple-portfolio-risk/shortcut\r\n           :multiple-portfolio-risk/table-filter\r\n           \r\n           :portfolio-alignment/display-style\r\n           :portfolio-alignment/field\r\n           :portfolio-alignment/group\r\n           :portfolio-alignment/threshold\r\n           :portfolio-alignment/shortcut\r\n           :portfolio-alignment/table-filter\r\n\r\n           :single-portfolio-attribution/portfolio\r\n           :single-portfolio-attribution/display-style\r\n           :single-portfolio-attribution/period\r\n           :single-portfolio-attribution/table-filter\r\n           :single-portfolio-attribution/table\r\n\r\n           :multiple-portfolio-attribution/display-style\r\n           :multiple-portfolio-attribution/field-number\r\n           :multiple-portfolio-attribution/field-one\r\n           :multiple-portfolio-attribution/field-two\r\n           :multiple-portfolio-attribution/selected-portfolios\r\n           :multiple-portfolio-attribution/hide-zero-holdings\r\n           :multiple-portfolio-attribution/shortcut\r\n           :multiple-portfolio-attribution/table-filter\r\n           :multiple-portfolio-attribution/table\r\n           :multiple-portfolio-attribution/period\r\n\r\n           :attribution/summary\r\n\r\n           :single-bond-trade-history/show-flat-modal\r\n           :single-bond-trade-history/flat-data\r\n           :single-bond-trade-history/show-modal\r\n           :single-bond-trade-history/data\r\n           :single-bond-trade-history/bond\r\n           :single-bond-trade-history/show-throbber\r\n           :portfolio-trade-history/portfolio\r\n           :portfolio-trade-history/start-date\r\n           :portfolio-trade-history/end-date\r\n           :portfolio-trade-history/performance\r\n\r\n           :portfolio-review/portfolio\r\n           :portfolio-review/active-tab\r\n           :portfolio-review/summary-data\r\n           :portfolio-review/contribution-chart-data\r\n           :portfolio-review/alpha-chart-data\r\n           :portfolio-review/jensen-chart-data\r\n           :portfolio-review/marginal-beta-chart-data\r\n           :portfolio-review/historical-beta-chart-data\r\n           :portfolio-review/historical-performance-chart-data\r\n\r\n\r\n           ]] (rf/reg-event-db k (fn [db [_ data]] (assoc db k data))))\r\n\r\n\r\n(rf/reg-event-db\r\n  :positions\r\n  (fn [db [_ positions]]\r\n    (assoc db :positions positions\r\n              :navigation/show-mounting-modal false)))\r\n\r\n\r\n(rf/reg-event-db\r\n  :portfolios\r\n  (fn [db [_ portfolios]]\r\n      (assoc db :portfolios portfolios\r\n                :multiple-portfolio-risk/selected-portfolios (set portfolios)\r\n                :multiple-portfolio-attribution/selected-portfolios (set portfolios))))\r\n\r\n(doseq [k [:single-portfolio-risk/filter\r\n           :multiple-portfolio-risk/filter\r\n           :portfolio-alignment/filter\r\n           :single-portfolio-attribution/filter\r\n           :multiple-portfolio-attribution/filter]]\r\n  (rf/reg-event-db\r\n    k\r\n    (fn [db [_ id f]] (assoc-in db [k id] f))))\r\n\r\n(rf/reg-event-db\r\n  :qt-date\r\n  (fn [db [_ qt-date]] (assoc db :qt-date (clojure.string/replace qt-date \"\\\"\" \"\"))))\r\n\r\n(rf/reg-event-db\r\n  :attribution-date\r\n  (fn [db [_ attribution-date]] (assoc db :attribution-date (clojure.string/replace attribution-date \"\\\"\" \"\"))))\r\n\r\n;THIS IS A DUMMY - IN PRACTICE WE'D DO MORE THINGS HERE\r\n(rf/reg-event-db\r\n  :single-portfolio-risk/shortcut\r\n  (fn [db [_ snapshot]]\r\n    (case snapshot\r\n      1 (assoc db :single-portfolio-risk/shortcut snapshot)\r\n      2 (assoc db :single-portfolio-risk/shortcut snapshot)\r\n      3 (assoc db :single-portfolio-risk/shortcut snapshot)\r\n      4 (assoc db :single-portfolio-risk/shortcut snapshot))))\r\n\r\n(rf/reg-event-db\r\n  :cycle-shortcut\r\n  (fn [db [_ _ _]]\r\n    (let [shortcut-key (keyword (str (name (:navigation/active-home db)) \"-risk/shortcut\"))\r\n          shortcut-value (shortcut-key db)]\r\n      (cond\r\n        (< shortcut-value 4) (assoc db shortcut-key (inc shortcut-value))\r\n        :else (assoc db shortcut-key 1)))))\r\n\r\n(rf/reg-event-db\r\n  :tree-table\r\n  (fn [db [_ _ _]]\r\n    (let [shortcut-key (keyword (str (name (:navigation/active-home db)) \"-risk/display-style\"))]\r\n      (case (shortcut-key db)\r\n        \"Tree\"  (assoc db shortcut-key \"Table\")\r\n        \"Table\" (assoc db shortcut-key \"Tree\")))))\r\n\r\n;;;;;;;;;;;;;;;;;;;;;;;\r\n;;HTTP GET DEFINITION;;\r\n;;;;;;;;;;;;;;;;;;;;;;;\r\n\r\n(defn http-get-dispatch [request]\r\n  (go (let [response (<! (http/get (:url request)))]\r\n        (rf/dispatch (conj (:dispatch-key request)\r\n                           (if (:kwk request)\r\n                             (js->clj (js/JSON.parse (:body response)) :keywordize-keys true)\r\n                             (:body response))))\r\n        (if (:flag request) (rf/dispatch [(:flag request) (:flag-value request)])))))\r\n\r\n(rf/reg-fx :http-get-dispatch http-get-dispatch)\r\n\r\n(defn http-post-dispatch [request]\r\n  (go (let [response (<! (http/post (:url request) {:edn-params (:edn-params request)}))]\r\n        (rf/dispatch (conj (:dispatch-key request)\r\n                           (if (:kwk request)\r\n                             (js->clj (js/JSON.parse (:body response)) :keywordize-keys true)\r\n                             (:body response))))\r\n        (if (:flag request) (rf/dispatch [(:flag request) (:flag-value request)])))))\r\n\r\n(rf/reg-fx :http-post-dispatch http-post-dispatch)\r\n\r\n\r\n(def simple-http-get-events\r\n  [{:get-key :get-positions         :url-tail \"positions\"         :dis-key :positions}\r\n   {:get-key :get-rating-to-score   :url-tail \"rating-to-score\"   :dis-key :rating-to-score}\r\n   {:get-key :get-portfolios        :url-tail \"portfolios\"        :dis-key :portfolios}\r\n   {:get-key :get-pivoted-positions :url-tail \"pivoted-positions\" :dis-key :pivoted-positions}\r\n   {:get-key :get-total-positions   :url-tail \"total-positions\"   :dis-key :total-positions}\r\n   {:get-key :get-qt-date           :url-tail \"qt-date\"           :dis-key :qt-date}\r\n   {:get-key :get-var-proxies       :url-tail \"var-proxies\"       :dis-key :var/proxies}\r\n   {:get-key :get-var-dates         :url-tail \"var-dates\"         :dis-key :var/dates}])\r\n\r\n(doseq [line simple-http-get-events]\r\n  (rf/reg-event-fx\r\n    (:get-key line)\r\n    (fn [{:keys [db]} [_]]\r\n      {:http-get-dispatch {:url          (str static/server-address (:url-tail line))\r\n                           :dispatch-key [(:dis-key line)]\r\n                           :kwk          true}})))\r\n\r\n(rf/reg-event-fx\r\n  :get-var-data\r\n  (fn [{:keys [db]} [_ portfolio]]\r\n    {:http-get-dispatch {:url          (str static/server-address \"var-data?portfolio=\" portfolio)\r\n                         :dispatch-key [:var/data]\r\n                         :kwk          true}}))\r\n\r\n(rf/reg-event-fx\r\n  :get-portfolio-var\r\n  (fn [{:keys [db]} [_ portfolio]]\r\n    {:db (assoc db :var/portfolio portfolio)\r\n     :http-get-dispatch {:url          (str static/server-address \"var-data?portfolio=\" portfolio)\r\n                         :dispatch-key [:var/data]\r\n                         :kwk          true}}))\r\n\r\n\r\n(rf/reg-event-fx\r\n  :get-attribution-date\r\n  (fn [{:keys [db]} [_]]\r\n    {:http-get-dispatch {:url          (str static/server-address \"attribution?query-type=attribution-date\")\r\n                         :dispatch-key [:attribution-date]\r\n                         :kwk          false}}))\r\n\r\n;SINGLE ATTRIBUTION\r\n(rf/reg-event-fx\r\n  :get-single-attribution\r\n  (fn [{:keys [db]} [_ portfolio period]]\r\n    {:http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio&portfolio=\" portfolio \"&period=\" period)\r\n                         :dispatch-key [:single-portfolio-attribution/table]\r\n                         :kwk          true}}))\r\n\r\n(rf/reg-event-fx\r\n  :change-single-attribution-portfolio\r\n  (fn [{:keys [db]} [_ portfolio]]\r\n    {:db (assoc db :single-portfolio-attribution/portfolio portfolio)\r\n     :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio&portfolio=\" portfolio \"&period=\" (:single-portfolio-attribution/period db))\r\n                         :dispatch-key [:single-portfolio-attribution/table]\r\n                         :kwk          true}}))\r\n\r\n(rf/reg-event-fx\r\n  :change-single-attribution-period\r\n  (fn [{:keys [db]} [_ period]]\r\n    {:db (assoc db :single-portfolio-attribution/period period)\r\n     :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=single-portfolio&portfolio=\" (:single-portfolio-attribution/portfolio db) \"&period=\" period)\r\n                         :dispatch-key [:single-portfolio-attribution/table]\r\n                         :kwk          true}}))\r\n\r\n;MULTIPLE ATTRIBUTION\r\n(rf/reg-event-fx\r\n  :get-multiple-attribution\r\n  (fn [{:keys [db]} [_ target period]]\r\n    {:http-get-dispatch {:url          (str static/server-address \"attribution?query-type=multiple-portfolio&target=\" target \"&period=\" period)\r\n                         :dispatch-key [:multiple-portfolio-attribution/table]\r\n                         :kwk          true}}))\r\n\r\n(rf/reg-event-fx\r\n  :change-multiple-attribution-target\r\n  (fn [{:keys [db]} [_ ktarget]]\r\n    (let [target (clojure.string.replace (get-in tables/attribution-table-columns [ktarget :accessor]) \"-\" \" \")]\r\n      {:db                (assoc db :multiple-portfolio-attribution/field-one ktarget)\r\n       :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=multiple-portfolio&target=\" target \"&period=\" (:multiple-portfolio-attribution/period db))\r\n                           :dispatch-key [:multiple-portfolio-attribution/table]\r\n                           :kwk          true}})))\r\n\r\n(rf/reg-event-fx\r\n  :change-multiple-attribution-period\r\n  (fn [{:keys [db]} [_ period]]\r\n    (let [target (clojure.string.replace (get-in tables/attribution-table-columns [(:multiple-portfolio-attribution/field-one db) :accessor]) \"-\" \" \")]\r\n      {:db                (assoc db :multiple-portfolio-attribution/period period)\r\n       :http-get-dispatch {:url          (str static/server-address \"attribution?query-type=multiple-portfolio&target=\" target \"&period=\" period)\r\n                           :dispatch-key [:multiple-portfolio-attribution/table]\r\n                           :kwk          true}})))\r\n\r\n;SUMMARY ATTRIBUTION\r\n(rf/reg-event-fx\r\n  :get-attribution-summary\r\n  (fn [{:keys [db]} [_]]\r\n    {:http-get-dispatch {:url          (str static/server-address \"attribution?query-type=summary\")\r\n                         :dispatch-key [:attribution/summary]\r\n                         :kwk          true}}))\r\n\r\n"]}