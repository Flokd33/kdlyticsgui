shadow$provide.module$node_modules$highlight_words$dist$highlight_words=function(global,require,module,exports){function uid(len=11){let str="";for(;len--;)str+=HEX[36*Math.random()|0];return str}function clip({curr,next,prev,clipBy=3}){const words=curr.text.split(" "),len=words.length;return curr.match||clipBy>=len?curr.text:"undefined"!==typeof next&&"undefined"!==typeof prev&&hasMatch(prev)&&hasMatch(next)?len>2*clipBy?[...words.slice(0,clipBy),"...",...words.slice(-clipBy)].join(" "):curr.text:
"undefined"!==typeof next&&hasMatch(next)?["...",...words.slice(-clipBy)].join(" "):"undefined"!==typeof prev&&hasMatch(prev)?[...words.slice(0,clipBy),"..."].join(" "):curr.text}Object.defineProperty(exports,"__esModule",{value:!0});global=36;let HEX="";for(;global--;)HEX+=global.toString(36);const escapeRegexp=term=>term.replace(/[|\\{}()[\]^$+*?.-]/g,char=>`\\${char}`),regexpQuery=({terms,matchExactly=!1})=>{if("string"!==typeof terms)throw new TypeError("Expected a string");terms=escapeRegexp(terms.trim());
return`(${matchExactly?terms:terms.replace(/\s{2,}/g," ").split(" ").join("|")})`},buildRegexp=({terms,matchExactly=!1})=>{try{const fromString=/^([/~@;%#'])(.*?)\1([gimsuy]*)$/.exec(terms);return fromString?new RegExp(fromString[2],fromString[3]):new RegExp(regexpQuery({terms,matchExactly}),"ig")}catch(e){throw new TypeError("Expected terms to be either a string or a RegExp!");}},hasMatch=(prop=>obj=>null!==obj&&"object"===typeof obj&&prop in obj)("match");var __defProp=Object.defineProperty,__defProps=
Object.defineProperties,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(prop of __getOwnPropSymbols(b))__propIsEnum.call(b,
prop)&&__defNormalProp(a,prop,b[prop]);return a};const hasLength=str=>0<str.length;exports.default=({text,query,clipBy,matchExactly=!1})=>{const safeQuery="string"===typeof query?query.trim():query;if(""===safeQuery)return[{key:uid(),text,match:!1}];const searchRegexp=buildRegexp({terms:query,matchExactly});return text.split(searchRegexp).filter(hasLength).map(str=>({key:uid(),text:str,match:matchExactly?str.toLowerCase()===safeQuery.toLowerCase():searchRegexp.test(str)})).map((chunk,index,chunks)=>
{var JSCompiler_temp_const=__spreadValues({},chunk),JSCompiler_temp;if(JSCompiler_temp="number"===typeof clipBy)chunk=__spreadValues(__spreadValues({curr:chunk},index<chunks.length-1&&{next:chunks[index+1]}),0<index&&{prev:chunks[index-1]}),chunk=__defProps(chunk,__getOwnPropDescs({clipBy})),JSCompiler_temp={text:clip(chunk)};return __spreadValues(JSCompiler_temp_const,JSCompiler_temp)})}}
//# sourceMappingURL=module$node_modules$highlight_words$dist$highlight_words.js.map
