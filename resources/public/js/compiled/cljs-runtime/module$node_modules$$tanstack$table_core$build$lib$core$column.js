shadow$provide.module$node_modules$$tanstack$table_core$build$lib$core$column=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$tanstack$table_core$build$lib$utils");exports.createColumn=function(table,columnDef,depth,parent){var _ref,_resolvedColumnDef$id;const defaultColumn=table._getDefaultColumnDef(),resolvedColumnDef=Object.assign({},defaultColumn,columnDef),accessorKey=resolvedColumnDef.accessorKey;columnDef=
null!=(_ref=null!=(_resolvedColumnDef$id=resolvedColumnDef.id)?_resolvedColumnDef$id:accessorKey?accessorKey.replace(".","_"):void 0)?_ref:"string"===typeof resolvedColumnDef.header?resolvedColumnDef.header:void 0;let accessorFn;resolvedColumnDef.accessorFn?accessorFn=resolvedColumnDef.accessorFn:accessorKey&&(accessorFn=accessorKey.includes(".")?originalRow=>{for(const key of accessorKey.split(".")){var _result;originalRow=null==(_result=originalRow)?void 0:_result[key];void 0===originalRow&&console.warn(`"${key}" in deeply nested key "${accessorKey}" returned undefined.`)}return originalRow}:
originalRow=>originalRow[resolvedColumnDef.accessorKey]);if(!columnDef){throw Error(resolvedColumnDef.accessorFn?"Columns require an id when using an accessorFn":"Columns require an id when using a non-string header");throw Error();}let column={id:`${String(columnDef)}`,accessorFn,parent,depth,columnDef:resolvedColumnDef,columns:[],getFlatColumns:utils.memo(()=>[!0],()=>{var _column$columns;return[column,...(null==(_column$columns=column.columns)?void 0:_column$columns.flatMap(d=>d.getFlatColumns()))]},
{key:!1,debug:()=>{var _table$options$debugA;return null!=(_table$options$debugA=table.options.debugAll)?_table$options$debugA:table.options.debugColumns}}),getLeafColumns:utils.memo(()=>[table._getOrderColumnsFn()],orderColumns=>{var _column$columns2;return null!=(_column$columns2=column.columns)&&_column$columns2.length?(_column$columns2=column.columns.flatMap(column=>column.getLeafColumns()),orderColumns(_column$columns2)):[column]},{key:!1,debug:()=>{var _table$options$debugA2;return null!=(_table$options$debugA2=
table.options.debugAll)?_table$options$debugA2:table.options.debugColumns}})};return column=table._features.reduce((obj,feature)=>Object.assign(obj,null==feature.createColumn?void 0:feature.createColumn(column,table)),column)}}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$core$column.js.map
