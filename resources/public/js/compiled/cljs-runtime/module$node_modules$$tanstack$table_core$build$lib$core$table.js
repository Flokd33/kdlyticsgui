shadow$provide.module$node_modules$$tanstack$table_core$build$lib$core$table=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$tanstack$table_core$build$lib$utils"),column$jscomp$0=require("module$node_modules$$tanstack$table_core$build$lib$core$column");global=require("module$node_modules$$tanstack$table_core$build$lib$core$headers");module=require("module$node_modules$$tanstack$table_core$build$lib$features$ColumnSizing");
var Expanding=require("module$node_modules$$tanstack$table_core$build$lib$features$Expanding"),Filters=require("module$node_modules$$tanstack$table_core$build$lib$features$Filters"),Grouping=require("module$node_modules$$tanstack$table_core$build$lib$features$Grouping"),Ordering=require("module$node_modules$$tanstack$table_core$build$lib$features$Ordering"),Pagination=require("module$node_modules$$tanstack$table_core$build$lib$features$Pagination"),Pinning=require("module$node_modules$$tanstack$table_core$build$lib$features$Pinning"),
RowSelection=require("module$node_modules$$tanstack$table_core$build$lib$features$RowSelection"),Sorting=require("module$node_modules$$tanstack$table_core$build$lib$features$Sorting");require=require("module$node_modules$$tanstack$table_core$build$lib$features$Visibility");const features=[global.Headers,require.Visibility,Ordering.Ordering,Pinning.Pinning,Filters.Filters,Sorting.Sorting,Grouping.Grouping,Expanding.Expanding,Pagination.Pagination,RowSelection.RowSelection,module.ColumnSizing];exports.createTable=
function(options){var _options$initialState;(options.debugAll||options.debugTable)&&console.info("Creating Table Instance...");let table={_features:features};const defaultOptions=table._features.reduce((obj,feature)=>Object.assign(obj,null==feature.getDefaultOptions?void 0:feature.getDefaultOptions(table)),{});let initialState=Object.assign({},{},null!=(_options$initialState=options.initialState)?_options$initialState:{});table._features.forEach(feature=>{var _feature$getInitialSt;initialState=null!=
(_feature$getInitialSt=null==feature.getInitialState?void 0:feature.getInitialState(initialState))?_feature$getInitialSt:initialState});const queued=[];let queuedTimeout=!1;options={_features:features,options:Object.assign({},defaultOptions,options),initialState,_queue:cb=>{queued.push(cb);queuedTimeout||(queuedTimeout=!0,Promise.resolve().then(()=>{for(;queued.length;)queued.shift()();queuedTimeout=!1}).catch(error=>setTimeout(()=>{throw error;})))},reset:()=>{table.setState(table.initialState)},
setOptions:updater=>{updater=utils.functionalUpdate(updater,table.options);updater=table.options.mergeOptions?table.options.mergeOptions(defaultOptions,updater):Object.assign({},defaultOptions,updater);table.options=updater},getState:()=>table.options.state,setState:updater=>{null==table.options.onStateChange?void 0:table.options.onStateChange(updater)},_getRowId:(row,index,parent)=>{var _table$options$getRow;return null!=(_table$options$getRow=null==table.options.getRowId?void 0:table.options.getRowId(row,
index,parent))?_table$options$getRow:`${parent?[parent.id,index].join("."):index}`},getCoreRowModel:()=>{table._getCoreRowModel||(table._getCoreRowModel=table.options.getCoreRowModel(table));return table._getCoreRowModel()},getRowModel:()=>table.getPaginationRowModel(),getRow:id=>{const row=table.getRowModel().rowsById[id];if(!row){throw Error(`getRow expected an ID, but got ${id}`);throw Error();}return row},_getDefaultColumnDef:utils.memo(()=>[table.options.defaultColumn],defaultColumn=>{var _defaultColumn;
defaultColumn=null!=(_defaultColumn=defaultColumn)?_defaultColumn:{};return Object.assign({},{header:props=>{props=props.header.column.columnDef;return props.accessorKey?props.accessorKey:props.accessorFn?props.id:null},cell:props=>{var _props$renderValue$to,_props$renderValue;return null!=(_props$renderValue$to=null==(_props$renderValue=props.renderValue())?void 0:null==_props$renderValue.toString?void 0:_props$renderValue.toString())?_props$renderValue$to:null}},table._features.reduce((obj,feature)=>
Object.assign(obj,null==feature.getDefaultColumnDef?void 0:feature.getDefaultColumnDef()),{}),defaultColumn)},{debug:()=>{var _table$options$debugA;return null!=(_table$options$debugA=table.options.debugAll)?_table$options$debugA:table.options.debugColumns},key:"getDefaultColumnDef"}),_getColumnDefs:()=>table.options.columns,getAllColumns:utils.memo(()=>[table._getColumnDefs()],columnDefs=>{const recurseColumns=function(columnDefs,parent,depth){void 0===depth&&(depth=0);return columnDefs.map(columnDef=>
{const column$1=column$jscomp$0.createColumn(table,columnDef,depth,parent);column$1.columns=columnDef.columns?recurseColumns(columnDef.columns,column$1,depth+1):[];return column$1})};return recurseColumns(columnDefs)},{key:"getAllColumns",debug:()=>{var _table$options$debugA2;return null!=(_table$options$debugA2=table.options.debugAll)?_table$options$debugA2:table.options.debugColumns}}),getAllFlatColumns:utils.memo(()=>[table.getAllColumns()],allColumns=>allColumns.flatMap(column=>column.getFlatColumns()),
{key:"getAllFlatColumns",debug:()=>{var _table$options$debugA3;return null!=(_table$options$debugA3=table.options.debugAll)?_table$options$debugA3:table.options.debugColumns}}),_getAllFlatColumnsById:utils.memo(()=>[table.getAllFlatColumns()],flatColumns=>flatColumns.reduce((acc,column)=>{acc[column.id]=column;return acc},{}),{key:"getAllFlatColumnsById",debug:()=>{var _table$options$debugA4;return null!=(_table$options$debugA4=table.options.debugAll)?_table$options$debugA4:table.options.debugColumns}}),
getAllLeafColumns:utils.memo(()=>[table.getAllColumns(),table._getOrderColumnsFn()],(allColumns,orderColumns)=>{allColumns=allColumns.flatMap(column=>column.getLeafColumns());return orderColumns(allColumns)},{key:"getAllLeafColumns",debug:()=>{var _table$options$debugA5;return null!=(_table$options$debugA5=table.options.debugAll)?_table$options$debugA5:table.options.debugColumns}}),getColumn:columnId=>{const column=table._getAllFlatColumnsById()[columnId];column||console.error(`[Table] Column with id '${columnId}' does not exist.`);
return column}};Object.assign(table,options);table._features.forEach(feature=>Object.assign(table,null==feature.createTable?void 0:feature.createTable(table)));return table}}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$core$table.js.map
