{"version":3,"sources":["jasminegui/tradehistory.cljs"],"mappings":"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","names":["jasminegui.tradehistory/subs10","this","reagent.core/as-element","temp__5733__auto__","x","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","jasminegui.tradehistory/nfh","jasminegui.tables/nf","jasminegui.tradehistory/trade-history-chart","price-data","trade-data","name","width","height","data","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core/some?","ymin","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/min","cljs.core.map.cljs$core$IFn$_invoke$arity$2","ymax","cljs.core/max","buys","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4529__auto__","s__66258","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__66260","cljs.core/chunk-buffer","i__66259","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__66257","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","line","cljs.core/pos?","clojure.string/replace","sells","s__66278","b__66280","i__66279","iter__66277","cljs.core/neg?","all-data","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","bydate","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/apply","cljs.core/merge","cljs.core/vals","cljs.core/group-by","re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","p__66297","vec__66298","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","db","_","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","jasminegui.tradehistory/modal-single-bond-trade-history","cljs.core/deref","modal-data","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","G__66310","re-frame.core/subscribe","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","G__66311","show-modal","G__66312","display","cljs.core/reverse","p1__66308#","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","re-com.core/modal-panel","G__66313","re-frame.core/dispatch","re-com.core/v-box","re-com.core/h-box","re-com.core/title","G__66316","re-com.core/md-circle-icon-button","jasminegui.tools.csv_link.cljs$core$IFn$_invoke$arity$2","G__66317","re-com.core/box","re-com.core/throbber","js/module$node_modules$react_table$lib$index.default","jasminegui.tables/round2","oz.core/vega-lite","G__66321","G__66326","jasminegui.tradehistory/modal-single-bond-flat-trade-history","G__66332","G__66334","bond-name","G__66336","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","p1__66328#","cljs.core/some","G__66340","jasminegui.tools.csv_link.cljs$core$IFn$_invoke$arity$3","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/keyword","G__66344","G__66345","s__66348","b__66350","i__66349","iter__66347","p","G__66359","cljs.core/chunk-first"],"sourcesContent":["(ns jasminegui.tradehistory\r\n  (:require\r\n    ; [oz.core :as oz]\r\n    [re-frame.core :as rf]\r\n    [reagent.core :as r]\r\n    [goog.string :as gstring]\r\n    [goog.string.format]\r\n    [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                         single-dropdown hyperlink modal-panel alert-box throbber input-password selection-list md-circle-icon-button\r\n                         input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n    [re-com.box :refer [h-box-args-desc v-box-args-desc box-args-desc gap-args-desc line-args-desc scroller-args-desc border-args-desc flex-child-style]]\r\n    [re-com.util :refer [px]]\r\n    [jasminegui.mount :as mount]\r\n    [jasminegui.static :as static]\r\n    [\"react-table\" :as rt :default ReactTable]\r\n    [re-com.validate :refer [string-or-hiccup? alert-type? vector-of-maps?]]\r\n    [jasminegui.tables :as tables]\r\n    [jasminegui.tools :as tools]\r\n    [oz.core :as oz])\r\n  )\r\n\r\n\r\n\r\n(defn subs10 [this]\r\n  (r/as-element\r\n    (if-let [x (aget this \"value\")]\r\n      [:div  (subs x 0 10)]\r\n      \"-\")))\r\n\r\n(defn nfh [this]\r\n  (r/as-element\r\n    (if-let [x (aget this \"value\")]\r\n      [:div  (tables/nf x)]\r\n      \"\")))\r\n\r\n\r\n(defn trade-history-chart [price-data trade-data name width height]\r\n  (let [data (filter (comp some? :price) price-data)\r\n        ymin (* 0.99 (apply min (map :price data)))\r\n        ymax (* 1.01 (apply max (map :price data)))\r\n        buys (into [] (for [line (filter (comp pos? :Quantity) trade-data)] {:date (clojure.string/replace (subs (:TradeDate line) 0 10) \"-\" \"\") :buy (:PriceLcl line)}))\r\n        sells (into [] (for [line (filter (comp neg? :Quantity) trade-data)] {:date (clojure.string/replace (subs (:TradeDate line) 0 10) \"-\" \"\") :sell  (:PriceLcl line)}))\r\n        all-data (concat data buys sells)\r\n        bydate (map (partial apply merge) (vals (group-by :date all-data)))]\r\n    {:$schema \"https://vega.github.io/schema/vega-lite/v4.json\",\r\n     :title   (str name \" trading history\")\r\n     :width   width\r\n     :height  height\r\n     :data    {:values bydate :format {:parse {:date \"date:'%Y%m%d'\" :price \"quantitative\" :buy \"quantitative\" :sell \"quantitative\"}}}\r\n     :layer\r\n              [{:mark     \"line\",\r\n                :encoding {:x {:field \"date\" :type \"temporal\" :axis {:format \"%b-%y\", :labelFontSize 10 :title nil}}\r\n                           :y {:field \"price\" :type \"quantitative\" :scale {:domain [ymin ymax]} :axis {:title nil}}}}\r\n               {:mark     {:type \"point\", :shape \"triangle-up\", :color \"green\"}\r\n                :encoding {:x {:field \"date\" :type \"temporal\" :axis {:format \"%b-%y\", :labelFontSize 10 :title nil}}\r\n                           :y {:field \"buy\" :type \"quantitative\" :scale {:domain [ymin ymax]} :axis {:title nil}}}}\r\n               {:mark     {:type \"point\", :shape \"triangle-down\", :color \"red\"}\r\n                :encoding {:x {:field \"date\" :type \"temporal\" :axis {:format \"%b-%y\", :labelFontSize 10 :title nil}}\r\n                           :y {:field \"sell\" :type \"quantitative\" :scale {:domain [ymin ymax]} :axis {:title nil}}}}\r\n\r\n               ]}))\r\n\r\n\r\n\r\n(rf/reg-event-db\r\n  :single-bond-trade-history/close-modal\r\n  (fn [db [_]]\r\n    (assoc db :single-bond-trade-history/bond nil\r\n              :single-bond-trade-history/data []\r\n              :single-bond-trade-history/flat-data []\r\n              :single-bond-trade-history/show-modal false\r\n              :single-bond-trade-history/show-flat-modal false)))\r\n\r\n\r\n(defn modal-single-bond-trade-history []\r\n  (let [\r\n        modal-data (get-in @(rf/subscribe [:single-bond-trade-history/data]) [(keyword @(rf/subscribe [:single-portfolio-risk/portfolio]))])\r\n        show-modal @(rf/subscribe [:single-bond-trade-history/show-modal])\r\n        display (reverse (remove #(= (:TransactionTypeName %) \"Coupon Payment\") modal-data))]\r\n\r\n    (if show-modal\r\n\r\n      [modal-panel\r\n       :wrap-nicely? true\r\n       :backdrop-on-click #(rf/dispatch [:single-bond-trade-history/close-modal])\r\n       :child\r\n       [v-box :gap \"10px\"\r\n        :children [\r\n                   [h-box :gap \"20px\" :align :center\r\n                    :children [\r\n                               [title :label (str @(rf/subscribe [:single-bond-trade-history/bond]) \" trades since 2019-01-01\") :level :level2]\r\n                               [md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(tools/csv-link display \"trade-history\")]]]\r\n                   (if @(rf/subscribe [:single-bond-trade-history/show-throbber])\r\n                     [box :align :center :child [throbber :size :large]]\r\n                     [h-box :gap \"20px\" :children [\r\n                                                   [v-box :children [[:> ReactTable\r\n                                                                      {:data           display\r\n                                                                       :columns        [{:Header \"Date\" :accessor \"TradeDate\" :width 100 :Cell subs10}\r\n                                                                                        {:Header \"Type\" :accessor \"TransactionTypeName\" :width 100}\r\n                                                                                        {:Header \"Notional\" :accessor \"Quantity\" :width 100 :style {:textAlign \"right\"} :Cell nfh}\r\n                                                                                        {:Header \"Price\" :accessor \"PriceLcl\" :width 100 :style {:textAlign \"right\"} :Cell tables/round2}\r\n                                                                                        {:Header \"Counterparty\" :accessor \"counterparty_code\" :width 100}\r\n                                                                                        ]\r\n                                                                       :showPagination false\r\n                                                                       :pageSize       (count display)\r\n                                                                       :className      \"-striped -highlight\"}]]]\r\n\r\n                                       [oz/vega-lite (trade-history-chart @(rf/subscribe [:bond-price-history/price]) display @(rf/subscribe [:bond-price-history/name]) 600 400)]\r\n\r\n                                       ]])]]])))\r\n\r\n;(tools/download-object-as-csv (clj->js (tools/vector-of-maps->csv data)) (str filename \".csv\"))\r\n;[title :label \"Download:\" :level :level3]\r\n;[md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(csv-link @(rf/subscribe [:single-portfolio-risk/table]) @portfolio)]]))]]]]]\r\n\r\n(defn modal-single-bond-flat-trade-history []\r\n  (let [\r\n        modal-data @(rf/subscribe [:single-bond-trade-history/flat-data])\r\n        show-modal @(rf/subscribe [:single-bond-trade-history/show-flat-modal])\r\n        bond-name @(rf/subscribe [:single-bond-trade-history/bond])\r\n        display (reverse (sort-by :date (remove #(some #{(:trade %)} [\"Coupon Payment\" \"Scrip Transfer\"]) modal-data)))]\r\n    ;(println modal-data)\r\n    (if show-modal\r\n\r\n      [modal-panel\r\n       :wrap-nicely? true\r\n       :backdrop-on-click #(rf/dispatch [:single-bond-trade-history/close-modal])\r\n       :child\r\n       [v-box :gap \"20px\"\r\n        :children [[h-box :gap \"20px\" :align :center\r\n                    :children [[title :label (str bond-name \" trades since 2019-01-01\") :level :level2]\r\n                               [md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(tools/csv-link display (str bond-name \"-trade-history\") (concat [:date :trade :price] (map keyword @(rf/subscribe [:portfolios]))))]]]\r\n                               (if @(rf/subscribe [:single-bond-trade-history/show-throbber])\r\n                                 [box :align :center :child [throbber :size :large]]\r\n                                 [:> ReactTable\r\n                                  {:data           display\r\n                                   :columns        [{:Header \"Date\" :accessor \"date\" :width 100}\r\n                                                    {:Header \"Type\" :accessor \"trade\" :width 75}\r\n                                                    {:Header \"Price\" :accessor \"price\" :width 70 :style {:textAlign \"right\"} :Cell tables/round2}\r\n                                                    {:Header \"Portfolio\" :columns (into []\r\n                                                                                        (for [p @(rf/subscribe [:portfolios])]\r\n                                                                                          {:Header p :accessor p :width 90 :style {:textAlign \"right\"} :Cell nfh}))}\r\n                                                    ]\r\n                                   :showPagination false\r\n                                   :pageSize       (count display)\r\n                                   :className      \"-striped -highlight\"}])]]])))"]}