shadow$provide.module$node_modules$$tanstack$table_core$build$lib$utils$getSortedRowModel=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$tanstack$table_core$build$lib$utils");exports.getSortedRowModel=function(){return table=>utils.memo(()=>[table.getState().sorting,table.getPreSortedRowModel()],(sorting,rowModel)=>{if(!rowModel.rows.length||null==sorting||!sorting.length)return rowModel;const sortedFlatRows=[],
availableSorting=table.getState().sorting.filter(sort=>{var _table$getColumn;return null==(_table$getColumn=table.getColumn(sort.id))?void 0:_table$getColumn.getCanSort()}),columnInfoById={};availableSorting.forEach(sortEntry=>{const column=table.getColumn(sortEntry.id);column&&(columnInfoById[sortEntry.id]={sortUndefined:column.columnDef.sortUndefined,invertSorting:column.columnDef.invertSorting,sortingFn:column.getSortingFn()})});const sortData=rows=>{rows=[...rows];rows.sort((rowA,rowB)=>{for(let i=
0;i<availableSorting.length;i+=1){var _sortEntry$desc,sortEntry=availableSorting[i];const columnInfo=columnInfoById[sortEntry.id],isDesc=null!=(_sortEntry$desc=null==sortEntry?void 0:sortEntry.desc)?_sortEntry$desc:!1;if(columnInfo.sortUndefined){var aValue=rowA.getValue(sortEntry.id),bValue=rowB.getValue(sortEntry.id);aValue="undefined"===typeof aValue;bValue="undefined"===typeof bValue;if(aValue||bValue)return rowA=aValue&&bValue?0:aValue?columnInfo.sortUndefined:-columnInfo.sortUndefined,isDesc&&
0!==rowA&&(rowA*=-1),rowA}sortEntry=columnInfo.sortingFn(rowA,rowB,sortEntry.id);if(0!==sortEntry)return isDesc&&(sortEntry*=-1),columnInfo.invertSorting&&(sortEntry*=-1),sortEntry}return rowA.index-rowB.index});rows.forEach(row=>{var _row$subRows;sortedFlatRows.push(row);null!=(_row$subRows=row.subRows)&&_row$subRows.length&&(row.subRows=sortData(row.subRows))});return rows};return{rows:sortData(rowModel.rows),flatRows:sortedFlatRows,rowsById:rowModel.rowsById}},{key:"getSortedRowModel",debug:()=>
{var _table$options$debugA;return null!=(_table$options$debugA=table.options.debugAll)?_table$options$debugA:table.options.debugTable},onChange:()=>{table._autoResetPageIndex()}})}}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$utils$getSortedRowModel.js.map
