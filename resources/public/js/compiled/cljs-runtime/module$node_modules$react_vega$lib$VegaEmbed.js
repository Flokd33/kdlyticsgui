shadow$provide.module$node_modules$react_vega$lib$VegaEmbed=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value;return obj}exports.__esModule=!0;exports.default=void 0;global=_interopRequireDefault(require("module$node_modules$prop_types$index"));var _react=_interopRequireDefault(require("module$node_modules$react$index")),
_vegaEmbed=_interopRequireDefault(require("module$node_modules$vega_embed$build$vega_embed")),_shallowEqual=_interopRequireDefault(require("module$node_modules$react_vega$lib$utils$shallowEqual")),_getUniqueFieldNames=_interopRequireDefault(require("module$node_modules$react_vega$lib$utils$getUniqueFieldNames")),_constants=require("module$node_modules$react_vega$lib$constants"),_addSignalListenersToView=_interopRequireDefault(require("module$node_modules$react_vega$lib$utils$addSignalListenersToView")),
_computeSpecChanges=_interopRequireDefault(require("module$node_modules$react_vega$lib$utils$computeSpecChanges")),_removeSignalListenersFromView=_interopRequireDefault(require("module$node_modules$react_vega$lib$utils$removeSignalListenersFromView")),_combineSpecWithDimension=_interopRequireDefault(require("module$node_modules$react_vega$lib$utils$combineSpecWithDimension"));class VegaEmbed extends _react.default.PureComponent{constructor(){super(...arguments);_defineProperty(this,"containerRef",
_react.default.createRef());_defineProperty(this,"resultPromise",void 0);_defineProperty(this,"handleError",error=>{const {onError=_constants.NOOP}=this.props;onError(error,this.containerRef.current);console.warn(error)});_defineProperty(this,"modifyView",action=>{this.resultPromise&&this.resultPromise.then(result=>{result&&action(result.view);return!0}).catch(this.handleError)})}componentDidMount(){this.createView()}componentDidUpdate(prevProps){const fieldSet=(0,_getUniqueFieldNames.default)([this.props,
prevProps]);fieldSet.delete("className");fieldSet.delete("signalListeners");fieldSet.delete("spec");fieldSet.delete("style");fieldSet.delete("width");fieldSet.delete("height");if(Array.from(fieldSet).some(f=>this.props[f]!==prevProps[f]))this.clearView(),this.createView();else{const specChanges=(0,_computeSpecChanges.default)((0,_combineSpecWithDimension.default)(this.props),(0,_combineSpecWithDimension.default)(prevProps)),{signalListeners:newSignalListeners}=this.props,{signalListeners:oldSignalListeners}=
prevProps;if(specChanges)if(specChanges.isExpensive)this.clearView(),this.createView();else{const areSignalListenersChanged=!(0,_shallowEqual.default)(newSignalListeners,oldSignalListeners);this.modifyView(view=>{!1!==specChanges.width&&view.width(specChanges.width);!1!==specChanges.height&&view.height(specChanges.height);areSignalListenersChanged&&(oldSignalListeners&&(0,_removeSignalListenersFromView.default)(view,oldSignalListeners),newSignalListeners&&(0,_addSignalListenersToView.default)(view,
newSignalListeners));view.run()})}else(0,_shallowEqual.default)(newSignalListeners,oldSignalListeners)||this.modifyView(view=>{oldSignalListeners&&(0,_removeSignalListenersFromView.default)(view,oldSignalListeners);newSignalListeners&&(0,_addSignalListenersToView.default)(view,newSignalListeners);view.run()})}}componentWillUnmount(){this.clearView()}createView(){var $jscomp$destructuring$var144=this.props,$jscomp$destructuring$var145=Object.assign({},$jscomp$destructuring$var144);const onNewView=
$jscomp$destructuring$var144.onNewView,signalListeners=void 0===$jscomp$destructuring$var144.signalListeners?{}:$jscomp$destructuring$var144.signalListeners;$jscomp$destructuring$var144=(delete $jscomp$destructuring$var145.spec,delete $jscomp$destructuring$var145.onNewView,delete $jscomp$destructuring$var145.signalListeners,delete $jscomp$destructuring$var145.width,delete $jscomp$destructuring$var145.height,$jscomp$destructuring$var145);this.containerRef.current&&($jscomp$destructuring$var145=(0,_combineSpecWithDimension.default)(this.props),
this.resultPromise=(0,_vegaEmbed.default)(this.containerRef.current,$jscomp$destructuring$var145,$jscomp$destructuring$var144).then(result=>{if(result){const {view}=result;(0,_addSignalListenersToView.default)(view,signalListeners)&&view.run()}return result}).catch(this.handleError),onNewView&&this.modifyView(onNewView))}clearView(){this.resultPromise&&this.resultPromise.then(result=>{result&&result.finalize()}).catch(this.handleError);this.resultPromise=void 0;return this}render(){const {className,
style}=this.props;return _react.default.createElement("div",{ref:this.containerRef,className,style})}}exports.default=VegaEmbed;_defineProperty(VegaEmbed,"propTypes",{className:global.default.string,onError:global.default.func})}
//# sourceMappingURL=module$node_modules$react_vega$lib$VegaEmbed.js.map
