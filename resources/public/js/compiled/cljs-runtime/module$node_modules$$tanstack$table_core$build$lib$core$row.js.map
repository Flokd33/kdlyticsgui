{
"version":3,
"file":"module$node_modules$$tanstack$table_core$build$lib$core$row.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@tanstack/table-core/build/lib/core/row.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$table_core$build$lib$core$row\"] = function(global,require,module,exports) {\n/**\n * table-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('../utils.js');\nvar cell = require('./cell.js');\n\nconst createRow = (table, id, original, rowIndex, depth, subRows, parentId) => {\n  let row = {\n    id,\n    index: rowIndex,\n    original,\n    depth,\n    parentId,\n    _valuesCache: {},\n    _uniqueValuesCache: {},\n    getValue: columnId => {\n      if (row._valuesCache.hasOwnProperty(columnId)) {\n        return row._valuesCache[columnId];\n      }\n      const column = table.getColumn(columnId);\n      if (!(column != null && column.accessorFn)) {\n        return undefined;\n      }\n      row._valuesCache[columnId] = column.accessorFn(row.original, rowIndex);\n      return row._valuesCache[columnId];\n    },\n    getUniqueValues: columnId => {\n      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {\n        return row._uniqueValuesCache[columnId];\n      }\n      const column = table.getColumn(columnId);\n      if (!(column != null && column.accessorFn)) {\n        return undefined;\n      }\n      if (!column.columnDef.getUniqueValues) {\n        row._uniqueValuesCache[columnId] = [row.getValue(columnId)];\n        return row._uniqueValuesCache[columnId];\n      }\n      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(row.original, rowIndex);\n      return row._uniqueValuesCache[columnId];\n    },\n    renderValue: columnId => {\n      var _row$getValue;\n      return (_row$getValue = row.getValue(columnId)) != null ? _row$getValue : table.options.renderFallbackValue;\n    },\n    subRows: subRows != null ? subRows : [],\n    getLeafRows: () => utils.flattenBy(row.subRows, d => d.subRows),\n    getParentRow: () => row.parentId ? table.getRow(row.parentId) : undefined,\n    getParentRows: () => {\n      let parentRows = [];\n      let currentRow = row;\n      while (true) {\n        const parentRow = currentRow.getParentRow();\n        if (!parentRow) break;\n        parentRows.push(parentRow);\n        currentRow = parentRow;\n      }\n      return parentRows.reverse();\n    },\n    getAllCells: utils.memo(() => [table.getAllLeafColumns()], leafColumns => {\n      return leafColumns.map(column => {\n        return cell.createCell(table, row, column, column.id);\n      });\n    }, {\n      key: process.env.NODE_ENV === 'development' && 'row.getAllCells',\n      debug: () => {\n        var _table$options$debugA;\n        return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugRows;\n      }\n    }),\n    _getAllCellsByColumnId: utils.memo(() => [row.getAllCells()], allCells => {\n      return allCells.reduce((acc, cell) => {\n        acc[cell.column.id] = cell;\n        return acc;\n      }, {});\n    }, {\n      key: process.env.NODE_ENV === 'production' && 'row.getAllCellsByColumnId',\n      debug: () => {\n        var _table$options$debugA2;\n        return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugRows;\n      }\n    })\n  };\n  for (let i = 0; i < table._features.length; i++) {\n    const feature = table._features[i];\n    Object.assign(row, feature == null ? void 0 : feature.createRow == null ? void 0 : feature.createRow(row, table));\n  }\n  return row;\n};\n\nexports.createRow = createRow;\n//# sourceMappingURL=row.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","cell","createRow","table","id","original","rowIndex","depth","subRows","parentId","row","index","_valuesCache","_uniqueValuesCache","getValue","columnId","hasOwnProperty","column","getColumn","accessorFn","getUniqueValues","columnDef","renderValue","_row$getValue","options","renderFallbackValue","getLeafRows","flattenBy","d","getParentRow","getRow","undefined","getParentRows","parentRows","currentRow","parentRow","push","reverse","getAllCells","memo","getAllLeafColumns","leafColumns","map","createCell","key","debug","_table$options$debugA","debugAll","debugRows","_getAllCellsByColumnId","allCells","reduce","acc","_table$options$debugA2","i","_features","length","feature","assign"]
}
