{
"version":3,
"file":"module$node_modules$$tanstack$table_core$build$lib$features$Visibility.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@tanstack/table-core/build/lib/features/Visibility.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$table_core$build$lib$features$Visibility\"] = function(global,require,module,exports) {\n/**\n * table-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('../utils.js');\n\n//\n\nconst Visibility = {\n  getInitialState: state => {\n    return {\n      columnVisibility: {},\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnVisibilityChange: utils.makeStateUpdater('columnVisibility', table)\n    };\n  },\n  createColumn: (column, table) => {\n    return {\n      toggleVisibility: value => {\n        if (column.getCanHide()) {\n          table.setColumnVisibility(old => ({\n            ...old,\n            [column.id]: value != null ? value : !column.getIsVisible()\n          }));\n        }\n      },\n      getIsVisible: () => {\n        var _table$getState$colum, _table$getState$colum2;\n        return (_table$getState$colum = (_table$getState$colum2 = table.getState().columnVisibility) == null ? void 0 : _table$getState$colum2[column.id]) != null ? _table$getState$colum : true;\n      },\n      getCanHide: () => {\n        var _column$columnDef$ena, _table$options$enable;\n        return ((_column$columnDef$ena = column.columnDef.enableHiding) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableHiding) != null ? _table$options$enable : true);\n      },\n      getToggleVisibilityHandler: () => {\n        return e => {\n          column.toggleVisibility == null ? void 0 : column.toggleVisibility(e.target.checked);\n        };\n      }\n    };\n  },\n  createRow: (row, table) => {\n    return {\n      _getAllVisibleCells: utils.memo(() => [row.getAllCells(), table.getState().columnVisibility], cells => {\n        return cells.filter(cell => cell.column.getIsVisible());\n      }, {\n        key: process.env.NODE_ENV === 'production' && 'row._getAllVisibleCells',\n        debug: () => {\n          var _table$options$debugA;\n          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugRows;\n        }\n      }),\n      getVisibleCells: utils.memo(() => [row.getLeftVisibleCells(), row.getCenterVisibleCells(), row.getRightVisibleCells()], (left, center, right) => [...left, ...center, ...right], {\n        key: process.env.NODE_ENV === 'development' && 'row.getVisibleCells',\n        debug: () => {\n          var _table$options$debugA2;\n          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugRows;\n        }\n      })\n    };\n  },\n  createTable: table => {\n    const makeVisibleColumnsMethod = (key, getColumns) => {\n      return utils.memo(() => [getColumns(), getColumns().filter(d => d.getIsVisible()).map(d => d.id).join('_')], columns => {\n        return columns.filter(d => d.getIsVisible == null ? void 0 : d.getIsVisible());\n      }, {\n        key,\n        debug: () => {\n          var _table$options$debugA3;\n          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugColumns;\n        }\n      });\n    };\n    return {\n      getVisibleFlatColumns: makeVisibleColumnsMethod('getVisibleFlatColumns', () => table.getAllFlatColumns()),\n      getVisibleLeafColumns: makeVisibleColumnsMethod('getVisibleLeafColumns', () => table.getAllLeafColumns()),\n      getLeftVisibleLeafColumns: makeVisibleColumnsMethod('getLeftVisibleLeafColumns', () => table.getLeftLeafColumns()),\n      getRightVisibleLeafColumns: makeVisibleColumnsMethod('getRightVisibleLeafColumns', () => table.getRightLeafColumns()),\n      getCenterVisibleLeafColumns: makeVisibleColumnsMethod('getCenterVisibleLeafColumns', () => table.getCenterLeafColumns()),\n      setColumnVisibility: updater => table.options.onColumnVisibilityChange == null ? void 0 : table.options.onColumnVisibilityChange(updater),\n      resetColumnVisibility: defaultState => {\n        var _table$initialState$c;\n        table.setColumnVisibility(defaultState ? {} : (_table$initialState$c = table.initialState.columnVisibility) != null ? _table$initialState$c : {});\n      },\n      toggleAllColumnsVisible: value => {\n        var _value;\n        value = (_value = value) != null ? _value : !table.getIsAllColumnsVisible();\n        table.setColumnVisibility(table.getAllLeafColumns().reduce((obj, column) => ({\n          ...obj,\n          [column.id]: !value ? !(column.getCanHide != null && column.getCanHide()) : value\n        }), {}));\n      },\n      getIsAllColumnsVisible: () => !table.getAllLeafColumns().some(column => !(column.getIsVisible != null && column.getIsVisible())),\n      getIsSomeColumnsVisible: () => table.getAllLeafColumns().some(column => column.getIsVisible == null ? void 0 : column.getIsVisible()),\n      getToggleAllColumnsVisibilityHandler: () => {\n        return e => {\n          var _target;\n          table.toggleAllColumnsVisible((_target = e.target) == null ? void 0 : _target.checked);\n        };\n      }\n    };\n  }\n};\n\nexports.Visibility = Visibility;\n//# sourceMappingURL=Visibility.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","Visibility","getInitialState","state","columnVisibility","getDefaultOptions","table","onColumnVisibilityChange","makeStateUpdater","createColumn","column","toggleVisibility","getCanHide","setColumnVisibility","old","id","getIsVisible","_table$getState$colum","_table$getState$colum2","getState","_column$columnDef$ena","_table$options$enable","columnDef","enableHiding","options","getToggleVisibilityHandler","e","target","checked","createRow","row","_getAllVisibleCells","memo","getAllCells","cells","filter","cell","key","debug","_table$options$debugA","debugAll","debugRows","getVisibleCells","getLeftVisibleCells","getCenterVisibleCells","getRightVisibleCells","left","center","right","_table$options$debugA2","createTable","makeVisibleColumnsMethod","getColumns","d","map","join","columns","_table$options$debugA3","debugColumns","getVisibleFlatColumns","getAllFlatColumns","getVisibleLeafColumns","getAllLeafColumns","getLeftVisibleLeafColumns","getLeftLeafColumns","getRightVisibleLeafColumns","getRightLeafColumns","getCenterVisibleLeafColumns","getCenterLeafColumns","updater","resetColumnVisibility","defaultState","_table$initialState$c","initialState","toggleAllColumnsVisible","_value","getIsAllColumnsVisible","reduce","obj","some","getIsSomeColumnsVisible","getToggleAllColumnsVisibilityHandler","_target"]
}
