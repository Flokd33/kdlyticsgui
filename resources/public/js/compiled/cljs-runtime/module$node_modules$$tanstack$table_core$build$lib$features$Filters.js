shadow$provide.module$node_modules$$tanstack$table_core$build$lib$features$Filters=function(global,require,module,exports){function shouldAutoRemoveFilter(filterFn,value,column){return(filterFn&&filterFn.autoRemove?filterFn.autoRemove(value,column):!1)||"undefined"===typeof value||"string"===typeof value&&!value}Object.defineProperty(exports,"__esModule",{value:!0});var filterFns=require("module$node_modules$$tanstack$table_core$build$lib$filterFns"),utils=require("module$node_modules$$tanstack$table_core$build$lib$utils");
exports.Filters={getDefaultColumnDef:()=>({filterFn:"auto"}),getInitialState:state=>Object.assign({},{columnFilters:[],globalFilter:void 0},state),getDefaultOptions:table=>({onColumnFiltersChange:utils.makeStateUpdater("columnFilters",table),onGlobalFilterChange:utils.makeStateUpdater("globalFilter",table),filterFromLeafRows:!1,maxLeafRowFilterDepth:100,globalFilterFn:"auto",getColumnCanGlobalFilter:column=>{var _table$getCoreRowMode,_table$getCoreRowMode2;const value=null==(_table$getCoreRowMode=
table.getCoreRowModel().flatRows[0])?void 0:null==(_table$getCoreRowMode2=_table$getCoreRowMode._getAllCellsByColumnId()[column.id])?void 0:_table$getCoreRowMode2.getValue();return"string"===typeof value||"number"===typeof value}}),createColumn:(column,table)=>({getAutoFilterFn:()=>{var firstRow=table.getCoreRowModel().flatRows[0];firstRow=null==firstRow?void 0:firstRow.getValue(column.id);return"string"===typeof firstRow?filterFns.filterFns.includesString:"number"===typeof firstRow?filterFns.filterFns.inNumberRange:
"boolean"===typeof firstRow||null!==firstRow&&"object"===typeof firstRow?filterFns.filterFns.equals:Array.isArray(firstRow)?filterFns.filterFns.arrIncludes:filterFns.filterFns.weakEquals},getFilterFn:()=>{var _table$options$filter,_table$options$filter2;return utils.isFunction(column.columnDef.filterFn)?column.columnDef.filterFn:"auto"===column.columnDef.filterFn?column.getAutoFilterFn():null!=(_table$options$filter=null==(_table$options$filter2=table.options.filterFns)?void 0:_table$options$filter2[column.columnDef.filterFn])?
_table$options$filter:filterFns.filterFns[column.columnDef.filterFn]},getCanFilter:()=>{var _column$columnDef$ena,_table$options$enable,_table$options$enable2;return(null!=(_column$columnDef$ena=column.columnDef.enableColumnFilter)?_column$columnDef$ena:!0)&&(null!=(_table$options$enable=table.options.enableColumnFilters)?_table$options$enable:!0)&&(null!=(_table$options$enable2=table.options.enableFilters)?_table$options$enable2:!0)&&!!column.accessorFn},getCanGlobalFilter:()=>{var _column$columnDef$ena2,
_table$options$enable3,_table$options$enable4,_table$options$getCol;return(null!=(_column$columnDef$ena2=column.columnDef.enableGlobalFilter)?_column$columnDef$ena2:!0)&&(null!=(_table$options$enable3=table.options.enableGlobalFilter)?_table$options$enable3:!0)&&(null!=(_table$options$enable4=table.options.enableFilters)?_table$options$enable4:!0)&&(null!=(_table$options$getCol=null==table.options.getColumnCanGlobalFilter?void 0:table.options.getColumnCanGlobalFilter(column))?_table$options$getCol:
!0)&&!!column.accessorFn},getIsFiltered:()=>-1<column.getFilterIndex(),getFilterValue:()=>{var _table$getState$colum,_table$getState$colum2;return null==(_table$getState$colum=table.getState().columnFilters)?void 0:null==(_table$getState$colum2=_table$getState$colum.find(d=>d.id===column.id))?void 0:_table$getState$colum2.value},getFilterIndex:()=>{var _table$getState$colum3,_table$getState$colum4;return null!=(_table$getState$colum3=null==(_table$getState$colum4=table.getState().columnFilters)?void 0:
_table$getState$colum4.findIndex(d=>d.id===column.id))?_table$getState$colum3:-1},setFilterValue:value=>{table.setColumnFilters(old=>{const filterFn=column.getFilterFn(),previousfilter=null==old?void 0:old.find(d=>d.id===column.id),newFilter=utils.functionalUpdate(value,previousfilter?previousfilter.value:void 0);if(shouldAutoRemoveFilter(filterFn,newFilter,column)){var _old$filter;return null!=(_old$filter=null==old?void 0:old.filter(d=>d.id!==column.id))?_old$filter:[]}const newFilterObj={id:column.id,
value:newFilter};if(previousfilter){var _old$map;return null!=(_old$map=null==old?void 0:old.map(d=>d.id===column.id?newFilterObj:d))?_old$map:[]}return null!=old&&old.length?[...old,newFilterObj]:[newFilterObj]})},_getFacetedRowModel:table.options.getFacetedRowModel&&table.options.getFacetedRowModel(table,column.id),getFacetedRowModel:()=>column._getFacetedRowModel?column._getFacetedRowModel():table.getPreFilteredRowModel(),_getFacetedUniqueValues:table.options.getFacetedUniqueValues&&table.options.getFacetedUniqueValues(table,
column.id),getFacetedUniqueValues:()=>column._getFacetedUniqueValues?column._getFacetedUniqueValues():new Map,_getFacetedMinMaxValues:table.options.getFacetedMinMaxValues&&table.options.getFacetedMinMaxValues(table,column.id),getFacetedMinMaxValues:()=>{if(column._getFacetedMinMaxValues)return column._getFacetedMinMaxValues()}}),createRow:(row,table)=>({columnFilters:{},columnFiltersMeta:{}}),createTable:table=>({getGlobalAutoFilterFn:()=>filterFns.filterFns.includesString,getGlobalFilterFn:()=>{var _table$options$filter3,
_table$options$filter4;const {globalFilterFn}=table.options;return utils.isFunction(globalFilterFn)?globalFilterFn:"auto"===globalFilterFn?table.getGlobalAutoFilterFn():null!=(_table$options$filter3=null==(_table$options$filter4=table.options.filterFns)?void 0:_table$options$filter4[globalFilterFn])?_table$options$filter3:filterFns.filterFns[globalFilterFn]},setColumnFilters:updater=>{const leafColumns=table.getAllLeafColumns(),updateFn=old=>{var _functionalUpdate;return null==(_functionalUpdate=
utils.functionalUpdate(updater,old))?void 0:_functionalUpdate.filter(filter=>{const column=leafColumns.find(d=>d.id===filter.id);if(column){const filterFn=column.getFilterFn();if(shouldAutoRemoveFilter(filterFn,filter.value,column))return!1}return!0})};null==table.options.onColumnFiltersChange?void 0:table.options.onColumnFiltersChange(updateFn)},setGlobalFilter:updater=>{null==table.options.onGlobalFilterChange?void 0:table.options.onGlobalFilterChange(updater)},resetGlobalFilter:defaultState=>{table.setGlobalFilter(defaultState?
void 0:table.initialState.globalFilter)},resetColumnFilters:defaultState=>{var _table$initialState$c,_table$initialState;table.setColumnFilters(defaultState?[]:null!=(_table$initialState$c=null==(_table$initialState=table.initialState)?void 0:_table$initialState.columnFilters)?_table$initialState$c:[])},getPreFilteredRowModel:()=>table.getCoreRowModel(),getFilteredRowModel:()=>{!table._getFilteredRowModel&&table.options.getFilteredRowModel&&(table._getFilteredRowModel=table.options.getFilteredRowModel(table));
return table.options.manualFiltering||!table._getFilteredRowModel?table.getPreFilteredRowModel():table._getFilteredRowModel()},_getGlobalFacetedRowModel:table.options.getFacetedRowModel&&table.options.getFacetedRowModel(table,"__global__"),getGlobalFacetedRowModel:()=>table.options.manualFiltering||!table._getGlobalFacetedRowModel?table.getPreFilteredRowModel():table._getGlobalFacetedRowModel(),_getGlobalFacetedUniqueValues:table.options.getFacetedUniqueValues&&table.options.getFacetedUniqueValues(table,
"__global__"),getGlobalFacetedUniqueValues:()=>table._getGlobalFacetedUniqueValues?table._getGlobalFacetedUniqueValues():new Map,_getGlobalFacetedMinMaxValues:table.options.getFacetedMinMaxValues&&table.options.getFacetedMinMaxValues(table,"__global__"),getGlobalFacetedMinMaxValues:()=>{if(table._getGlobalFacetedMinMaxValues)return table._getGlobalFacetedMinMaxValues()}})};exports.shouldAutoRemoveFilter=shouldAutoRemoveFilter}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$features$Filters.js.map
