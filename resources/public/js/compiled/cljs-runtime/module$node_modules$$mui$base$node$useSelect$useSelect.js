shadow$provide.module$node_modules$$mui$base$node$useSelect$useSelect=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function preventDefault(event){event.preventDefault()}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports.useSelect=function(props){const {areOptionsEqual,buttonRef:buttonRefProp,defaultOpen=!1,defaultValue:defaultValueProp,disabled=!1,listboxId:listboxIdProp,listboxRef:listboxRefProp,multiple=!1,onChange,onHighlightChange,onOpenChange,open:openProp,options:optionsParam,getOptionAsString=_defaultOptionStringifier.defaultOptionStringifier,value:valueProp}=props,buttonRef=React.useRef(null);var handleButtonRef=(0,_utils.unstable_useForkRef)(buttonRefProp,
buttonRef);const listboxRef=React.useRef(null),listboxId=(0,_utils.unstable_useId)(listboxIdProp);let defaultValue;void 0===valueProp&&void 0===defaultValueProp?defaultValue=[]:void 0!==defaultValueProp&&(defaultValue=multiple?defaultValueProp:null==defaultValueProp?[]:[defaultValueProp]);const value=React.useMemo(()=>{if(void 0!==valueProp)return multiple?valueProp:null==valueProp?[]:[valueProp]},[valueProp,multiple]),{subitems,contextValue:compoundComponentContextValue}=(0,_useCompound.useCompoundParent)(),
options=React.useMemo(()=>null!=optionsParam?new Map(optionsParam.map((option,index)=>[option.value,{value:option.value,label:option.label,disabled:option.disabled,ref:React.createRef(),id:`${listboxId}_${index}`}])):subitems,[optionsParam,subitems,listboxId]),handleListboxRef=(0,_utils.unstable_useForkRef)(listboxRefProp,listboxRef),{getRootProps:getButtonRootProps,active:buttonActive,focusVisible:buttonFocusVisible,rootRef:mergedButtonRef}=(0,_useButton.useButton)({disabled,rootRef:handleButtonRef}),
optionValues=React.useMemo(()=>Array.from(options.keys()),[options]),getOptionByValue=React.useCallback(valueToGet=>{if(void 0!==areOptionsEqual){const similarValue=optionValues.find(optionValue=>areOptionsEqual(optionValue,valueToGet));return options.get(similarValue)}return options.get(valueToGet)},[options,areOptionsEqual,optionValues]);handleButtonRef=React.useCallback(valueToCheck=>{var _option$disabled;valueToCheck=getOptionByValue(valueToCheck);return null!=(_option$disabled=null==valueToCheck?
void 0:valueToCheck.disabled)?_option$disabled:!1},[getOptionByValue]);var stringifyOption=React.useCallback(valueToCheck=>(valueToCheck=getOptionByValue(valueToCheck))?getOptionAsString(valueToCheck):"",[getOptionByValue,getOptionAsString]);const controlledState=React.useMemo(()=>({selectedValues:value,open:openProp}),[value,openProp]),getItemId=React.useCallback(itemValue=>{var _options$get;return null==(_options$get=options.get(itemValue))?void 0:_options$get.id},[options]),handleSelectionChange=
React.useCallback((event,newValues)=>{if(multiple)null==onChange?void 0:onChange(event,newValues);else{var _newValues$;null==onChange?void 0:onChange(event,null!=(_newValues$=newValues[0])?_newValues$:null)}},[multiple,onChange]),handleHighlightChange=React.useCallback((event,newValue)=>{null==onHighlightChange?void 0:onHighlightChange(event,null!=newValue?newValue:null)},[onHighlightChange]),handleStateChange=React.useCallback((event,field,fieldValue)=>{if("open"===field&&(null==onOpenChange?void 0:
onOpenChange(fieldValue),!1===fieldValue&&"blur"!==(null==event?void 0:event.type))){var _buttonRef$current;null==(_buttonRef$current=buttonRef.current)?void 0:_buttonRef$current.focus()}},[onOpenChange]);handleButtonRef={getInitialState:()=>{var _defaultValue;return{highlightedValue:null,selectedValues:null!=(_defaultValue=defaultValue)?_defaultValue:[],open:defaultOpen}},getItemId,controlledProps:controlledState,itemComparer:areOptionsEqual,isItemDisabled:handleButtonRef,rootRef:mergedButtonRef,
onChange:handleSelectionChange,onHighlightChange:handleHighlightChange,onStateChange:handleStateChange,reducerActionContext:React.useMemo(()=>({multiple}),[multiple]),items:optionValues,getItemAsString:stringifyOption,selectionMode:multiple?"multiple":"single",stateReducer:_selectReducer.selectReducer};const {dispatch,getRootProps:getListboxRootProps,contextValue:listContextValue,state:{open,highlightedValue:highlightedOption,selectedValues:selectedOptions},rootRef:mergedListRootRef}=(0,_useList.useList)(handleButtonRef),
createHandleButtonMouseDown=otherHandlers=>event=>{var _otherHandlers$onMous;null==otherHandlers||null==(_otherHandlers$onMous=otherHandlers.onMouseDown)?void 0:_otherHandlers$onMous.call(otherHandlers,event);event.defaultMuiPrevented||dispatch({type:_useSelect.SelectActionTypes.buttonClick,event})};(0,_utils.unstable_useEnhancedEffect)(()=>{if(null!=highlightedOption){var _getOptionByValue,optionRef=null==(_getOptionByValue=getOptionByValue(highlightedOption))?void 0:_getOptionByValue.ref;listboxRef.current&&
null!=optionRef&&optionRef.current&&(_getOptionByValue=listboxRef.current.getBoundingClientRect(),optionRef=optionRef.current.getBoundingClientRect(),optionRef.top<_getOptionByValue.top?listboxRef.current.scrollTop-=_getOptionByValue.top-optionRef.top:optionRef.bottom>_getOptionByValue.bottom&&(listboxRef.current.scrollTop+=optionRef.bottom-_getOptionByValue.bottom))}},[highlightedOption,getOptionByValue]);handleButtonRef=React.useCallback(optionValue=>getOptionByValue(optionValue),[getOptionByValue]);
const getSelectTriggerProps=(otherHandlers={})=>(0,_extends2.default)({},otherHandlers,{onMouseDown:createHandleButtonMouseDown(otherHandlers),ref:mergedListRootRef,role:"combobox","aria-expanded":open,"aria-controls":listboxId});React.useDebugValue({selectedOptions,highlightedOption,open});stringifyOption=React.useMemo(()=>(0,_extends2.default)({},listContextValue,compoundComponentContextValue),[listContextValue,compoundComponentContextValue]);return{buttonActive,buttonFocusVisible,buttonRef:mergedButtonRef,
contextValue:stringifyOption,disabled,dispatch,getButtonProps:(otherHandlers={})=>{const listboxAndButtonProps=(0,_combineHooksSlotProps.combineHooksSlotProps)(getButtonRootProps,getListboxRootProps);return(0,_combineHooksSlotProps.combineHooksSlotProps)(listboxAndButtonProps,getSelectTriggerProps)(otherHandlers)},getListboxProps:(otherHandlers={})=>(0,_extends2.default)({},otherHandlers,{id:listboxId,role:"listbox","aria-multiselectable":multiple?"true":void 0,ref:handleListboxRef,onMouseDown:preventDefault}),
getOptionMetadata:handleButtonRef,listboxRef:mergedListRootRef,open,options:optionValues,value:props.multiple?selectedOptions:0<selectedOptions.length?selectedOptions[0]:null,highlightedOption}};var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);
var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index")),_utils=require("module$node_modules$$mui$utils$index"),
_useButton=require("module$node_modules$$mui$base$node$useButton$index"),_useSelect=require("module$node_modules$$mui$base$node$useSelect$useSelect_types"),_useList=require("module$node_modules$$mui$base$node$useList$index"),_defaultOptionStringifier=require("module$node_modules$$mui$base$node$useSelect$defaultOptionStringifier"),_useCompound=require("module$node_modules$$mui$base$node$utils$useCompound"),_selectReducer=require("module$node_modules$$mui$base$node$useSelect$selectReducer"),_combineHooksSlotProps=
require("module$node_modules$$mui$base$node$utils$combineHooksSlotProps")}
//# sourceMappingURL=module$node_modules$$mui$base$node$useSelect$useSelect.js.map
