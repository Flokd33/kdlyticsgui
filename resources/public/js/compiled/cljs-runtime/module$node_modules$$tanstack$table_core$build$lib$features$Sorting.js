shadow$provide.module$node_modules$$tanstack$table_core$build$lib$features$Sorting=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var sortingFns=require("module$node_modules$$tanstack$table_core$build$lib$sortingFns"),utils=require("module$node_modules$$tanstack$table_core$build$lib$utils");exports.Sorting={getInitialState:state=>Object.assign({},{sorting:[]},state),getDefaultColumnDef:()=>({sortingFn:"auto"}),getDefaultOptions:table=>({onSortingChange:utils.makeStateUpdater("sorting",
table),isMultiSortEvent:e=>e.shiftKey}),createColumn:(column,table)=>({getAutoSortingFn:()=>{var firstRows=table.getFilteredRowModel().flatRows.slice(10);let isString=!1;for(const row of firstRows){firstRows=null==row?void 0:row.getValue(column.id);if("[object Date]"===Object.prototype.toString.call(firstRows))return sortingFns.sortingFns.datetime;if("string"===typeof firstRows&&(isString=!0,1<firstRows.split(sortingFns.reSplitAlphaNumeric).length))return sortingFns.sortingFns.alphanumeric}return isString?
sortingFns.sortingFns.text:sortingFns.sortingFns.basic},getAutoSortDir:()=>{const firstRow=table.getFilteredRowModel().flatRows[0];return"string"===typeof(null==firstRow?void 0:firstRow.getValue(column.id))?"asc":"desc"},getSortingFn:()=>{var _table$options$sortin,_table$options$sortin2;if(!column)throw Error();return utils.isFunction(column.columnDef.sortingFn)?column.columnDef.sortingFn:"auto"===column.columnDef.sortingFn?column.getAutoSortingFn():null!=(_table$options$sortin=null==(_table$options$sortin2=
table.options.sortingFns)?void 0:_table$options$sortin2[column.columnDef.sortingFn])?_table$options$sortin:sortingFns.sortingFns[column.columnDef.sortingFn]},toggleSorting:(desc,multi)=>{const nextSortingOrder=column.getNextSortingOrder(),hasManualValue="undefined"!==typeof desc&&null!==desc;table.setSorting(old=>{var existingSorting=null==old?void 0:old.find(d=>d.id===column.id);const existingIndex=null==old?void 0:old.findIndex(d=>d.id===column.id);let newSorting=[],nextDesc=hasManualValue?desc:
"desc"===nextSortingOrder;existingSorting=null!=old&&old.length&&column.getCanMultiSort()&&multi?existingSorting?"toggle":"add":null!=old&&old.length&&existingIndex!==old.length-1?"replace":existingSorting?"toggle":"replace";"toggle"===existingSorting&&(hasManualValue||nextSortingOrder||(existingSorting="remove"));if("add"===existingSorting){var _table$options$maxMul;newSorting=[...old,{id:column.id,desc:nextDesc}];newSorting.splice(0,newSorting.length-(null!=(_table$options$maxMul=table.options.maxMultiSortColCount)?
_table$options$maxMul:Number.MAX_SAFE_INTEGER))}else newSorting="toggle"===existingSorting?old.map(d=>d.id===column.id?Object.assign({},d,{desc:nextDesc}):d):"remove"===existingSorting?old.filter(d=>d.id!==column.id):[{id:column.id,desc:nextDesc}];return newSorting})},getFirstSortDir:()=>{var _ref,_column$columnDef$sor;return(null!=(_ref=null!=(_column$columnDef$sor=column.columnDef.sortDescFirst)?_column$columnDef$sor:table.options.sortDescFirst)?_ref:"desc"===column.getAutoSortDir())?"desc":"asc"},
getNextSortingOrder:multi=>{var _table$options$enable,_table$options$enable2;const firstSortDirection=column.getFirstSortDir(),isSorted=column.getIsSorted();return isSorted?isSorted!==firstSortDirection&&(null!=(_table$options$enable=table.options.enableSortingRemoval)?_table$options$enable:1)&&(multi?null!=(_table$options$enable2=table.options.enableMultiRemove)?_table$options$enable2:1:1)?!1:"desc"===isSorted?"asc":"desc":firstSortDirection},getCanSort:()=>{var _column$columnDef$ena,_table$options$enable3;
return(null!=(_column$columnDef$ena=column.columnDef.enableSorting)?_column$columnDef$ena:!0)&&(null!=(_table$options$enable3=table.options.enableSorting)?_table$options$enable3:!0)&&!!column.accessorFn},getCanMultiSort:()=>{var _ref2,_column$columnDef$ena2;return null!=(_ref2=null!=(_column$columnDef$ena2=column.columnDef.enableMultiSort)?_column$columnDef$ena2:table.options.enableMultiSort)?_ref2:!!column.accessorFn},getIsSorted:()=>{var _table$getState$sorti;const columnSort=null==(_table$getState$sorti=
table.getState().sorting)?void 0:_table$getState$sorti.find(d=>d.id===column.id);return columnSort?columnSort.desc?"desc":"asc":!1},getSortIndex:()=>{var _table$getState$sorti2,_table$getState$sorti3;return null!=(_table$getState$sorti2=null==(_table$getState$sorti3=table.getState().sorting)?void 0:_table$getState$sorti3.findIndex(d=>d.id===column.id))?_table$getState$sorti2:-1},clearSorting:()=>{table.setSorting(old=>null!=old&&old.length?old.filter(d=>d.id!==column.id):[])},getToggleSortingHandler:()=>
{const canSort=column.getCanSort();return e=>{canSort&&(null==e.persist?void 0:e.persist(),null==column.toggleSorting?void 0:column.toggleSorting(void 0,column.getCanMultiSort()?null==table.options.isMultiSortEvent?void 0:table.options.isMultiSortEvent(e):!1))}}}),createTable:table=>({setSorting:updater=>null==table.options.onSortingChange?void 0:table.options.onSortingChange(updater),resetSorting:defaultState=>{var _table$initialState$s,_table$initialState;table.setSorting(defaultState?[]:null!=
(_table$initialState$s=null==(_table$initialState=table.initialState)?void 0:_table$initialState.sorting)?_table$initialState$s:[])},getPreSortedRowModel:()=>table.getGroupedRowModel(),getSortedRowModel:()=>{!table._getSortedRowModel&&table.options.getSortedRowModel&&(table._getSortedRowModel=table.options.getSortedRowModel(table));return table.options.manualSorting||!table._getSortedRowModel?table.getPreSortedRowModel():table._getSortedRowModel()}})}}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$features$Sorting.js.map
