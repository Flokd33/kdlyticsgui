{
"version":3,
"file":"module$node_modules$vega_selections$build$vega_selection.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,gBAAvB,CAAgC,CACpH,SAAS,CAACH,MAAD,CAASI,OAAT,CAAkB,CACP,QAAnB,GAAA,MAAOD,iBAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DE,OAAA,CAAQD,gBAAR,CAAiBF,OAAA,CAAQ,+CAAR,CAAjB,CAAuCA,OAAA,CAAQ,2DAAR,CAAvC,CAA/D,CACkB,UAAlB,GAAA,MAAOI,OAAP,EAAgCA,MAAOC,CAAAA,GAAvC,CAA6CD,MAAA,CAAO,CAAC,SAAD,CAAY,WAAZ,CAAyB,iBAAzB,CAAP,CAAoDD,OAApD,CAA7C,EACCJ,MAAA,CAA+B,WAAtB,GAAA,MAAOO,WAAP;AAAoCA,UAApC,CAAiDP,MAAjD,EAA2DQ,IAApE,CAA0EJ,OAAA,CAAQJ,MAAOS,CAAAA,IAAf,CAAsB,EAAtB,CAA0BT,MAAOS,CAAAA,IAAjC,CAAuCT,MAAOS,CAAAA,IAA9C,CAD3E,CAF0B,CAA3B,CAAD,CAIG,IAJH,CAIU,QAAS,CAACN,OAAD,CAAUO,QAAV,CAAoBC,cAApB,CAAoC,CAErDC,QAASA,UAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CACvB,MAAY,KAAL,EAAAD,CAAA,EAAkB,IAAlB,EAAaC,CAAb,CAAyBC,GAAzB,CAA+BF,CAAA,CAAIC,CAAJ,CAAQ,CAAC,CAAT,CAAaD,CAAA,CAAIC,CAAJ,CAAQ,CAAR,CAAYD,CAAA,EAAKC,CAAL,CAAS,CAAT,CAAaC,GADrD,CAIzBC,QAASA,WAAU,CAACH,CAAD,CAAIC,CAAJ,CAAO,CACxB,MAAY,KAAL,EAAAD,CAAA,EAAkB,IAAlB,EAAaC,CAAb,CAAyBC,GAAzB,CAA+BD,CAAA,CAAID,CAAJ,CAAQ,CAAC,CAAT,CAAaC,CAAA,CAAID,CAAJ,CAAQ,CAAR,CAAYC,CAAA,EAAKD,CAAL,CAAS,CAAT,CAAaE,GADpD,CAmD1BE,QAASA,KAAI,EAAG,CACd,MAAO,EADO,CA2BhBC,QAASA,WAAU,CAAC,CAClBC,OADkB,CAElBC,IAFkB,CAAD,CAGhBC,KAHgB,CAGT,CACFC,IAAAA,CAAMF,IAAA,CAAKC,KAAL,CACZ,OAAOF,QAAQI,CAAAA,GAAR,CAAYD,IAAZ,CAAA,CAAmBH,OAAQK,CAAAA,GAAR,CAAYF,IAAZ,CAAnB,CAAsCD,KAFrC,CAIVI,QAASA,WAAU,CAAC,CAClBN,OADkB,CAElBC,IAFkB,CAAD,CAGhBC,KAHgB,CAGT,CACFC,IAAAA,CAAMF,IAAA,CAAKC,KAAL,CACZ,IAAIF,OAAQI,CAAAA,GAAR,CAAYD,IAAZ,CAAJ,CAAsB,MAAOH,QAAQK,CAAAA,GAAR,CAAYF,IAAZ,CAC7BH;OAAQO,CAAAA,GAAR,CAAYJ,IAAZ,CAAiBD,KAAjB,CACA,OAAOA,MAJC,CAMVM,QAASA,cAAa,CAAC,CACrBR,OADqB,CAErBC,IAFqB,CAAD,CAGnBC,KAHmB,CAGZ,CACFC,IAAAA,CAAMF,IAAA,CAAKC,KAAL,CACRF,QAAQI,CAAAA,GAAR,CAAYD,IAAZ,CAAJ,GACED,KACA,CADQF,OAAQK,CAAAA,GAAR,CAAYF,IAAZ,CACR,CAAAH,OAAQS,CAAAA,MAAR,CAAeN,IAAf,CAFF,CAIA,OAAOD,MANC,CAQVQ,QAASA,MAAK,CAACR,KAAD,CAAQ,CACpB,MAAiB,KAAV,GAAAA,KAAA,EAAmC,QAAnC,GAAkB,MAAOA,MAAzB,CAA8CA,KAAMS,CAAAA,OAAN,EAA9C,CAAgET,KADnD,CAiBtBK,QAASA,aAAG,CAACK,MAAD,CAAS,CACnB,MAAOA,OAAA,WAAkBC,UAAlB,CAA8BD,MAA9B,CAAuC,IAAIC,SAAJ,CAAcD,MAAd,CAD3B,CA+BrBE,QAASA,UAAS,CAACC,KAAD,CAAQC,KAAR,CAAe,CAAA,IAC3BC,OAASD,KAAMC,CAAAA,MACjBL,MAAAA,CAASI,KAAMJ,CAAAA,MAKjB,KAP+B,IAG7BM,EAAID,MAAOE,CAAAA,MAHkB,CAI7BC,EAAI,CAJyB,CAK7BC,IAL6B,CAM7BC,CACF,CAAOF,CAAP,CAAWF,CAAX,CAAc,EAAEE,CAAhB,CAOE,GANAE,CAMI,CANAL,MAAA,CAAOG,CAAP,CAMA,CALJE,CAAEC,CAAAA,MAKE;AALOhC,QAASiC,CAAAA,KAAMD,CAAAA,MAKtB,EALgChC,QAASiC,CAAAA,KAAT,CAAeF,CAAEE,CAAAA,KAAjB,CAKhC,CAJJH,IAII,CAJGC,CAAEC,CAAAA,MAAF,CAASR,KAAT,CAIH,CAHAxB,QAASkC,CAAAA,MAAT,CAAgBJ,IAAhB,CAGA,GAHuBA,IAGvB,CAH8B9B,QAASmC,CAAAA,QAAT,CAAkBL,IAAlB,CAG9B,EAFA9B,QAASkC,CAAAA,MAAT,CAAgBb,KAAA,CAAOQ,CAAP,CAAhB,CAEA,GAF4BR,KAAA,CAAOQ,CAAP,CAE5B,CAFwC7B,QAASmC,CAAAA,QAAT,CAAkBd,KAAA,CAAOQ,CAAP,CAAlB,CAExC,EADA7B,QAASkC,CAAAA,MAAT,CAAgBb,KAAA,CAAOQ,CAAP,CAAA,CAAU,CAAV,CAAhB,CACA,GAD+BR,KAAA,CAAOQ,CAAP,CAC/B,CAD2CR,KAAA,CAAOQ,CAAP,CAAUO,CAAAA,GAAV,CAAcpC,QAASmC,CAAAA,QAAvB,CAC3C,EAtBUE,GAsBV,GAAAN,CAAEO,CAAAA,IAAN,CAGE,IAAItC,QAASuC,CAAAA,OAAT,CAAiBlB,KAAA,CAAOQ,CAAP,CAAjB,CAAA,CAAwD,CAAxD,CAA8BR,KAAA,CAAOQ,CAAP,CAAUW,CAAAA,OAAV,CAAkBV,IAAlB,CAA9B,CAA4DA,IAA5D,GAAqET,KAAA,CAAOQ,CAAP,CAAzE,CACE,MAAO,CAAA,CADT,CAHF,IAOE,IA5BaY,GA4Bb,GAAIV,CAAEO,CAAAA,IAAN,CACE,IAAI,CAACtC,QAAS0C,CAAAA,OAAT,CAAiBZ,IAAjB,CAAuBT,KAAA,CAAOQ,CAAP,CAAvB,CAAL,CAAwC,MAAO,CAAA,CAA/C,CADF,IAEO,IA3BKc,MA2BL,GAAIZ,CAAEO,CAAAA,IAAN,CAEL,IAAI,CAACtC,QAAS0C,CAAAA,OAAT,CAAiBZ,IAAjB,CAAuBT,KAAA,CAAOQ,CAAP,CAAvB,CAAkC,CAAA,CAAlC,CAAwC,CAAA,CAAxC,CAAL,CAAqD,MAAO,CAAA,CAA5D,CAFK,IAGA,IAhCMe,KAgCN;AAAIb,CAAEO,CAAAA,IAAN,CAEL,IAAI,CAACtC,QAAS0C,CAAAA,OAAT,CAAiBZ,IAAjB,CAAuBT,KAAA,CAAOQ,CAAP,CAAvB,CAAkC,CAAA,CAAlC,CAAyC,CAAA,CAAzC,CAAL,CAAsD,MAAO,CAAA,CAA7D,CAFK,IAGA,IAlCKgB,MAkCL,GAAId,CAAEO,CAAAA,IAAN,EACD,CAACtC,QAAS0C,CAAAA,OAAT,CAAiBZ,IAAjB,CAAuBT,KAAA,CAAOQ,CAAP,CAAvB,CAAkC,CAAA,CAAlC,CAAyC,CAAA,CAAzC,CADA,CACgD,MAAO,CAAA,CAIlE,OAAO,CAAA,CAlCwB,CAlGjC,KAAMP,UAAN,QAAwBwB,IAAxB,CACEC,WAAW,CAAC1B,MAAD,CAAST,GAAA,CAAMO,KAAf,CAAsB,CAC/B,KAAA,EACA6B,OAAOC,CAAAA,gBAAP,CAAwB,IAAxB,CAA8B,CAC5BxC,QAAS,CACPE,MAAO,IAAIuC,GADJ,CADmB,CAI5BxC,KAAM,CACJC,MAAOC,GADH,CAJsB,CAA9B,CAQA,IAAc,IAAd,EAAIS,MAAJ,CAAoB,IAAK,MAAMV,KAAX,GAAoBU,OAApB,CAA4B,IAAK8B,CAAAA,GAAL,CAASxC,KAAT,CAVjB,CAYjCE,GAAG,CAACF,KAAD,CAAQ,CACT,MAAO,MAAME,CAAAA,GAAN,CAAUL,UAAA,CAAW,IAAX,CAAiBG,KAAjB,CAAV,CADE,CAGXwC,GAAG,CAACxC,KAAD,CAAQ,CACT,MAAO,MAAMwC,CAAAA,GAAN,CAAUpC,UAAA,CAAW,IAAX,CAAiBJ,KAAjB,CAAV,CADE,CAGXO,MAAM,CAACP,KAAD,CAAQ,CACZ,MAAO,MAAMO,CAAAA,MAAN,CAAaD,aAAA,CAAc,IAAd,CAAoBN,KAApB,CAAb,CADK,CAnBhB;AAwFA,MAAMyC,aAAepD,QAASiC,CAAAA,KAAT,CADDoB,SACC,CAArB,CAuGMC,OAlPNC,QAAiB,CAACxB,CAAD,CAAI,CAiBnByB,QAASA,KAAI,CAACrD,CAAD,CAAIsD,CAAJ,CAAOC,EAAA,CAAK,CAAZ,CAAeC,EAAA,CAAKxD,CAAEyB,CAAAA,MAAtB,CAA8B,CACzC,GAAI8B,EAAJ,CAASC,EAAT,CAAa,CACX,GAAuB,CAAvB,GAAIC,QAAA,CAASH,CAAT,CAAYA,CAAZ,CAAJ,CAA0B,MAAOE,GACjC,GAAG,CACD,MAAME,IAAMH,EAANG,CAAWF,EAAXE,GAAkB,CACE,EAA1B,CAAIC,QAAA,CAAS3D,CAAA,CAAE0D,GAAF,CAAT,CAAiBJ,CAAjB,CAAJ,CAA6BC,EAA7B,CAAkCG,GAAlC,CAAwC,CAAxC,CAA+CF,EAA/C,CAAoDE,GAFnD,CAAH,MAGSH,EAHT,CAGcC,EAHd,CAFW,CAOb,MAAOD,GARkC,CAjBxB,IACfE,QADe,CACLE,QADK,CACKC,KAOP,EAAjB,GAAIhC,CAAEH,CAAAA,MAAN,EACEgC,QAEA,CAFW1D,SAEX,CADA4D,QACA,CADW,CAACE,CAAD,CAAIP,CAAJ,CAAAK,EAAU5D,SAAA,CAAU6B,CAAA,CAAEiC,CAAF,CAAV,CAAgBP,CAAhB,CACrB,CAAAM,KAAA,CAAQ,CAACC,CAAD,CAAIP,CAAJ,CAAAM,EAAUhC,CAAA,CAAEiC,CAAF,CAAVD,CAAiBN,CAH3B,GAKEG,QAEA,CAFW7B,CAAA,GAAM7B,SAAN,EAAmB6B,CAAnB,GAAyBzB,UAAzB,CAAsCyB,CAAtC,CAA0CxB,IAErD,CAAAwD,KAAA,CADAD,QACA,CADW/B,CANb,CAiCA,OAAO,CACLyB,IADK,CAELS,OANFA,QAAe,CAAC9D,CAAD,CAAIsD,CAAJ,CAAOC,EAAA,CAAK,CAAZ,CAAeC,EAAA,CAAKxD,CAAEyB,CAAAA,MAAtB,CAA8B,CACrCC,EAAAA,CAAI2B,IAAA,CAAKrD,CAAL,CAAQsD,CAAR,CAAWC,EAAX,CAAeC,EAAf,CAAoB,CAApB,CACV,OAAO9B,GAAA,CAAI6B,EAAJ,EAAUK,KAAA,CAAM5D,CAAA,CAAE0B,EAAF;AAAM,CAAN,CAAN,CAAgB4B,CAAhB,CAAV,CAA+B,CAACM,KAAA,CAAM5D,CAAA,CAAE0B,EAAF,CAAN,CAAY4B,CAAZ,CAAhC,CAAiD5B,EAAjD,CAAqD,CAArD,CAAyDA,EAFrB,CAItC,CAGLqC,MAjBFA,QAAc,CAAC/D,CAAD,CAAIsD,CAAJ,CAAOC,EAAA,CAAK,CAAZ,CAAeC,EAAA,CAAKxD,CAAEyB,CAAAA,MAAtB,CAA8B,CAC1C,GAAI8B,EAAJ,CAASC,EAAT,CAAa,CACX,GAAuB,CAAvB,GAAIC,QAAA,CAASH,CAAT,CAAYA,CAAZ,CAAJ,CAA0B,MAAOE,GACjC,GAAG,CACD,MAAME,IAAMH,EAANG,CAAWF,EAAXE,GAAkB,CACG,EAA3B,EAAIC,QAAA,CAAS3D,CAAA,CAAE0D,GAAF,CAAT,CAAiBJ,CAAjB,CAAJ,CAA8BC,EAA9B,CAAmCG,GAAnC,CAAyC,CAAzC,CAAgDF,EAAhD,CAAqDE,GAFpD,CAAH,MAGSH,EAHT,CAGcC,EAHd,CAFW,CAOb,MAAOD,GARmC,CAcrC,CAzCY,CAkPN,CAASN,YAAT,CAvGf,CAwGEe,WAAab,MAAOE,CAAAA,IAxGtB,CAyGEY,YAAcd,MAAOY,CAAAA,KAmIvB,KAAIG,IAAM,CACR,cA9PFC,QAAc,CAAC,GAAGC,MAAJ,CAAY,CACxB,MAAMvD,IAAM,IAAIM,SAChB,KAAK,MAAMkD,KAAX,GAAoBD,OAApB,CACE,IAAK,MAAME,CAAX,GAAgBD,MAAhB,CACExD,GAAImC,CAAAA,GAAJ,CAAQsB,CAAR,CAGJ,OAAOzD,IAPiB,CA6PhB,CAER,kBAhRF0D,QAAqB,CAACrD,MAAD,CAAS,GAAGkD,MAAZ,CAAoB,CACvClD,MAAA,CAAS,IAAIC,SAAJ,CAAcD,MAAd,CACTkD,OAAA,CAASA,MAAOnC,CAAAA,GAAP,CAAWpB,YAAX,CACT;CAAA,CAAK,IAAK,MAAML,KAAX,GAAoBU,OAApB,CACH,IAAK,MAAMmD,KAAX,GAAoBD,OAApB,CACE,GAAI,CAACC,KAAM3D,CAAAA,GAAN,CAAUF,KAAV,CAAL,CAAuB,CACrBU,MAAOH,CAAAA,MAAP,CAAcP,KAAd,CACA,UAAS,CAFY,CAM3B,MAAOU,OAXgC,CA8Q/B,CAGRsD,QAASA,QAAS,CAACC,IAAD,CAAOjE,KAAP,CAAc,CAC9B,GAAI,CAACiE,IAAKhD,CAAAA,MAAV,CAAkB,MAAOjB,MAGzB,KAJ8B,IAE1BkB,EAAI,CAFsB,CAG5BF,EAAIhB,KAAMiB,CAAAA,MACZ,CAAOC,CAAP,CAAWF,CAAX,CAAc,EAAEE,CAAhB,CAAgD,CAA7B,CAAI+C,IAAKpC,CAAAA,OAAL,CAAa7B,KAAA,CAAMkB,CAAN,CAAb,CAAJ,EAAgC+C,IAAKC,CAAAA,IAAL,CAAUlE,KAAA,CAAMkB,CAAN,CAAV,CACnD,OAAO+C,KALuB,CAHxB,CAURE,YAAaA,QAAS,CAACF,IAAD,CAAOjE,KAAP,CAAc,CAClC,MAAQiE,KAAKhD,CAAAA,MAAN,CAAuBgD,IAAKG,CAAAA,MAAL,CAAYC,CAAA,EAAyB,CAAzB,EAAKrE,KAAM6B,CAAAA,OAAN,CAAcwC,CAAd,CAAjB,CAAvB,CAAerE,KADY,CAV5B,CAaRsE,QAASA,QAAS,CAACL,IAAD,CAAOjE,KAAP,CAAc,CAAA,IAC1B+C,GAAK1D,QAASmC,CAAAA,QAAT,CAAkBxB,KAAA,CAAM,CAAN,CAAlB,CADqB,CAE5BgD,GAAK3D,QAASmC,CAAAA,QAAT,CAAkBxB,KAAA,CAAM,CAAN,CAAlB,CACH+C,GAAJ,CAASC,EAAT,GACED,EACA,CADK/C,KAAA,CAAM,CAAN,CACL,CAAAgD,EAAA,CAAKhD,KAAA,CAAM,CAAN,CAFP,CAIA,IAAI,CAACiE,IAAKhD,CAAAA,MAAV,CAAkB,MAAO,CAAC8B,EAAD;AAAKC,EAAL,CACrBiB,KAAA,CAAK,CAAL,CAAJ,CAAclB,EAAd,GAAkBkB,IAAA,CAAK,CAAL,CAAlB,CAA4BlB,EAA5B,CACIkB,KAAA,CAAK,CAAL,CAAJ,CAAcjB,EAAd,GAAkBiB,IAAA,CAAK,CAAL,CAAlB,CAA4BjB,EAA5B,CACA,OAAOiB,KAVuB,CAbxB,CAyBRM,YAAaA,QAAS,CAACN,IAAD,CAAOjE,KAAP,CAAc,CAAA,IAC9B+C,GAAK1D,QAASmC,CAAAA,QAAT,CAAkBxB,KAAA,CAAM,CAAN,CAAlB,CADyB,CAEhCgD,GAAK3D,QAASmC,CAAAA,QAAT,CAAkBxB,KAAA,CAAM,CAAN,CAAlB,CACH+C,GAAJ,CAASC,EAAT,GACED,EACA,CADK/C,KAAA,CAAM,CAAN,CACL,CAAAgD,EAAA,CAAKhD,KAAA,CAAM,CAAN,CAFP,CAIA,IAAI,CAACiE,IAAKhD,CAAAA,MAAV,CAAkB,MAAO,CAAC8B,EAAD,CAAKC,EAAL,CACzB,IAAIA,EAAJ,CAASiB,IAAA,CAAK,CAAL,CAAT,EAAoBA,IAAA,CAAK,CAAL,CAApB,CAA8BlB,EAA9B,CACE,MAAO,EAEHkB,KAAA,CAAK,CAAL,CAAJ,CAAclB,EAAd,GAAkBkB,IAAA,CAAK,CAAL,CAAlB,CAA4BlB,EAA5B,CACIkB,KAAA,CAAK,CAAL,CAAJ,CAAcjB,EAAd,GAAkBiB,IAAA,CAAK,CAAL,CAAlB,CAA4BjB,EAA5B,CAEF,OAAOiB,KAd2B,CAzB5B,CAgEVnF,QAAQ0F,CAAAA,eAAR,CAlMAA,QAAwB,CAACC,IAAD,CAAO5D,KAAP,CAAc6D,EAAd,CAAkB,CAAA,IAClCC,KAAO,IAAKC,CAAAA,OAAQD,CAAAA,IAAb,CAAkBF,IAAlB,CACXI,KAAAA,CAAUF,IAAA,CAAOA,IAAKjE,CAAAA,MAAOV,CAAAA,KAAnB,CAA2B,EACrC8E,KAAAA,CAAUH,IAAA,CAAOA,IAAA,CAtGNI,YAsGM,CAAP,EAA2BJ,IAAA,CAtG1BI,YAsG0B,CAAiB/E,CAAAA,KAA5C,CAAoDgF,IAAAA,EAC9DC;EAAAA,CArHcC,WAqHdD,GAAYP,EACZ1E,MAAAA,CAAQyC,YAAA,CAAa5B,KAAb,CAJV,OAKEsE,MAAQ3B,UAAA,CAAWqB,IAAX,CAAoB7E,KAApB,CAEV,IADImF,KACJ,GADcN,IAAQ5D,CAAAA,MACtB,EAAIwB,YAAA,CAAaoC,IAAA,CAAQM,KAAR,CAAb,CAAJ,GAAqCnF,KAArC,CAA4C,MAAO,CAAA,CACnD,IAAI8E,IAAJ,EAAeG,EAAf,CAA0B,CACxB,GAAqB,CAArB,GAAIH,IAAQM,CAAAA,IAAZ,CAAwB,MAAO,CAAA,CAC/B,IAAI3B,WAAA,CAAYoB,IAAZ,CAAqB7E,KAArB,CAAJ,CAAkCmF,KAAlC,CAA0CL,IAAQM,CAAAA,IAAlD,CAAwD,MAAO,CAAA,CAFvC,CAI1B,MAAO,CAAA,CAbiC,CAmM1CtG,QAAQuG,CAAAA,gBAAR,CAvJAA,QAAyB,CAACZ,IAAD,CAAOC,EAAP,CAAWY,OAAX,CAAoBC,GAApB,CAAyB,CAE9CV,IAAAA,CAAU,CADRF,IACQ,CADD,IAAKC,CAAAA,OAAQD,CAAAA,IAAb,CAAkBF,IAAlB,CACC,EAAOE,IAAKjE,CAAAA,MAAOV,CAAAA,KAAnB,CAA2B,EAoBvC,KAtBgD,IAG9CwF,SAAW,EAHmC,CAI9CC,SAAW,EAJmC,CAK9CC,MAAQ,EALsC,CAM9C5E,KAN8C,CAO9CC,MAP8C,CAQ9CL,MAR8C,CAS9CiF,aAT8C,CAU9CrE,cAV8C,CAa9CsE,OAb8C,CAgB9C5E,EAAI6D,IAAQ5D,CAAAA,MAhBkC,CAiB9CC,EAAI,CAjB0C,CAkB9C2E,UAlB8C,CAmB9CC,CAGF,CAAO5E,CAAP,CAAWF,CAAX,CAAc,EAAEE,CAAhB,CAKE,GAJAJ,KAII;AAJI+D,IAAA,CAAQ3D,CAAR,CAIJ,CAHJyE,aAGI,CAHG7E,KAAM6E,CAAAA,IAGT,CAFJ5E,MAEI,CAFKD,KAAMC,CAAAA,MAEX,CADJL,MACI,CADKI,KAAMJ,CAAAA,MACX,CAAAK,MAAA,EAAUL,MAAd,CAAsB,CAEfmF,UAAA,CAAI,CAAT,KAAYC,CAAZ,CAAgB/E,MAAOE,CAAAA,MAAvB,CAA+B4E,UAA/B,CAAmCC,CAAnC,CAAsC,EAAED,UAAxC,CACEvE,cAKA,CALQP,MAAA,CAAO8E,UAAP,CAKR,CAJAE,KAIA,CAJMP,QAAA,CAASlE,cAAMA,CAAAA,KAAf,CAIN,GAJgCkE,QAAA,CAASlE,cAAMA,CAAAA,KAAf,CAIhC,CAJwD,EAIxD,EAHAsE,OAGA,CAHUG,KAAA,CAAIJ,aAAJ,CAGV,GAHwBI,KAAA,CAAIJ,aAAJ,CAGxB,CAHoC,EAGpC,EAFAD,KAAA,CAAMpE,cAAMA,CAAAA,KAAZ,CAEA,CAFqBK,cAErB,CAF4BL,cAAMK,CAAAA,IAAKqE,CAAAA,MAAX,CAAkB,CAAlB,CAE5B,CADArC,cACA,CADQD,GAAA,CAAK,GAAE/B,cAAF,QAAL,CACR,CAAAoE,KAAA,CAAIJ,aAAJ,CAAA,CAAYhC,cAAA,CAAMiC,OAAN,CAAevG,QAAS4G,CAAAA,KAAT,CAAevF,MAAA,CAAOmF,UAAP,CAAf,CAAf,CASVP;OAAJ,GACEM,OACA,CADUH,QAAA,CAASE,aAAT,CACV,GAD6BF,QAAA,CAASE,aAAT,CAC7B,CAD8C,EAC9C,EAAAC,OAAQ1B,CAAAA,IAAR,CAAa7E,QAAS4G,CAAAA,KAAT,CAAevF,MAAf,CAAuBwF,CAAAA,MAAvB,CAA8B,CAACC,GAAD,CAAMC,IAAN,CAAYP,CAAZ,CAAA,GAAmBM,GAAA,CAAIpF,MAAA,CAAO8E,CAAP,CAAUvE,CAAAA,KAAd,CAAA,CAAuB8E,IAAvB,CAA6BD,GAAhD,CAA9B,CAAoF,EAApF,CAAb,CAFF,CAjBoB,CAAtB,IAuBE7E,eAKA,CA9McoB,SA8Md,CAJA1C,MAIA,CAJQyC,YAAA,CAAa3B,KAAb,CAIR,CAHAiF,KAGA,CAHMP,QAAA,CAASlE,cAAT,CAGN,GAH0BkE,QAAA,CAASlE,cAAT,CAG1B,CAH4C,EAG5C,EAFAsE,OAEA,CAFUG,KAAA,CAAIJ,aAAJ,CAEV,GAFwBI,KAAA,CAAIJ,aAAJ,CAExB,CAFoC,EAEpC,EADAC,OAAQ1B,CAAAA,IAAR,CAAalE,MAAb,CACA,CAAIsF,OAAJ,GACEM,OACA,CADUH,QAAA,CAASE,aAAT,CACV,GAD6BF,QAAA,CAASE,aAAT,CAC7B,CAD8C,EAC9C,EAAAC,OAAQ1B,CAAAA,IAAR,CAAa,CACX,QAAelE,MADJ,CAAb,CAFF,CAUJ0E,GAAA,CAAKA,EAAL,EA7NY2B,OA8NRb,SAAA,CAAA,OAAJ,CACEA,QAAA,CAAA,OADF;AAC0B9B,GAAA,CAAK,GA1NbhB,SA0Na,IAAiBgC,EAAjB,EAAL,CAAA,CAA4B,GAAGrC,MAAO3B,CAAAA,MAAP,CAAc8E,QAAA,CAAA,OAAd,CAA/B,CAD1B,CAGEnD,MAAOiE,CAAAA,IAAP,CAAYd,QAAZ,CAAsBe,CAAAA,OAAtB,CAA8BjF,KAAA,EAAS,CACrCkE,QAAA,CAASlE,KAAT,CAAA,CAAkBe,MAAOiE,CAAAA,IAAP,CAAYd,QAAA,CAASlE,KAAT,CAAZ,CAA6BG,CAAAA,GAA7B,CAAiCkE,IAAA,EAAQH,QAAA,CAASlE,KAAT,CAAA,CAAgBqE,IAAhB,CAAzC,CAAgEO,CAAAA,MAAhE,CAAuE,CAACM,GAAD,CAAMJ,IAAN,CAAA,EAAuBpB,IAAAA,EAAR,GAAAwB,GAAA,CAAoBJ,IAApB,CAA2B1C,GAAA,CAAK,GAAEgC,KAAA,CAAMpE,KAAN,CAAF,IAAkBoD,EAAlB,EAAL,CAAA,CAA6B8B,GAA7B,CAAkCJ,IAAlC,CAAjH,CADmB,CAAvC,CAIFvB,KAAA,CAAUxC,MAAOiE,CAAAA,IAAP,CAAYb,QAAZ,CACNH,QAAJ,EAAeT,IAAQ5D,CAAAA,MAAvB,GAEEuE,QAAA,CADYD,GAAAtF,CArOAwG,SAqOAxG,CAtOAyG,SAuOZ,CAFF,CAtOYL,OAwOM,GAAA3B,EAAA,CAAe,CAC7B,GAAMG,IAAQqB,CAAAA,MAAR,CAAe,CAACM,GAAD,CAAMG,CAAN,CAAA,GAAaH,GAAItC,CAAAA,IAAJ,CAAS,GAAGuB,QAAA,CAASkB,CAAT,CAAZ,CAAA,CAA0BH,GAAvC,CAAf,CAA4D,EAA5D,CADuB,CAAf,CAEZ,CACF,IAAO3B,IAAQpD,CAAAA,GAAR,CAAYkF,CAAA,EAAM,EACvB,GAAMlB,QAAA,CAASkB,CAAT,CADiB,EAAlB,CADL,CAJN,CAUA,OAAOnB,SApFyC,CAwJlD1G,QAAQ8H,CAAAA,aAAR,CAjPAA,QAAsB,CAACnC,IAAD;AAAO5D,KAAP,CAAc6D,EAAd,CAAkB,CAAA,IAClCC,KAAO,IAAKC,CAAAA,OAAQD,CAAAA,IAAb,CAAkBF,IAAlB,CACTI,KAAAA,CAAUF,IAAA,CAAOA,IAAKjE,CAAAA,MAAOV,CAAAA,KAAnB,CAA2B,EACrC8E,KAAAA,CAAUH,IAAA,CAAOA,IAAA,CAzDNI,YAyDM,CAAP,EAA2BJ,IAAA,CAzD1BI,YAyD0B,CAAiB/E,CAAAA,KAA5C,CAAoDgF,IAAAA,EAC9DC,GAAAA,CAxEcC,WAwEdD,GAAYP,EAQd,KAZsC,IAKpC1D,EAAI6D,IAAQ5D,CAAAA,MALwB,CAMpCC,EAAI,CANgC,CAOpCJ,KAPoC,CAQpC+F,IARoC,CASpCC,KAToC,CAUpCnB,IAEF,CAAOzE,CAAP,CAAWF,CAAX,CAAc,EAAEE,CAAhB,CAEE,GADAJ,KACI,CADI+D,IAAA,CAAQ3D,CAAR,CACJ,CAAA4D,IAAA,EAAWG,EAAf,CAME,IAJA4B,IAII,CAJGA,IAIH,EAJW,EAIX,CAHJC,KAGI,CAHID,IAAA,CAAKlB,IAAL,CAAY7E,KAAM6E,CAAAA,IAAlB,CAGJ,EAH+B,CAG/B,CAAU,CAAC,CAAX,GAAAmB,KAAJ,CAAA,CACArH,KAAA,CAAImB,SAAA,CAAUC,KAAV,CAAiBC,KAAjB,CACJ+F,KAAA,CAAKlB,IAAL,CAAA,CAAalG,KAAA,CAAI,CAAC,CAAL,CAAS,EAAEqH,KAIxB,IAAIrH,KAAJ,EAA0B,CAA1B,GAASqF,IAAQM,CAAAA,IAAjB,CAA6B,MAAO,CAAA,CACpC,IAAI,CAAC3F,KAAL,EAAUqH,KAAV,GAAoBhC,IAAQ3E,CAAAA,GAAR,CAAYwF,IAAZ,CAAkBmB,CAAAA,KAAtC,CAA6C,MAAO,CAAA,CAPpD,CAAA,CANF,IAmBE,IAJArH,KAII,CAJAmB,SAAA,CAAUC,KAAV,CAAiBC,KAAjB,CAIA,CAAAmE,EAAA,CAAYxF,KAAhB,CAAmB,MAAOA,MAO9B,OAAOuB,EAAP;AAAYiE,EAxC0B,CAkPxCnG,QAAQiI,CAAAA,eAAR,CA9KAA,QAAwB,CAACd,KAAD,CAAQhC,IAAR,CAAc,CACpC,MAAOgC,MAAMxE,CAAAA,GAAN,CAAUqB,CAAA,EAAKzD,QAAS2H,CAAAA,MAAT,CAAgB/C,IAAKlD,CAAAA,MAAL,CAAc,CAClDL,OAAQuD,IAAKlD,CAAAA,MAAOU,CAAAA,GAAZ,CAAgBL,CAAA,EAAK,CAACA,CAAEC,CAAAA,MAAH,GAAcD,CAAEC,CAAAA,MAAhB,CAAyBhC,QAASiC,CAAAA,KAAT,CAAeF,CAAEE,CAAAA,KAAjB,CAAzB,GAAmDwB,CAAEjC,CAAAA,KAArD,CAArB,CAD0C,CAAd,CAElC,CACF,QAAe4B,YAAA,CAAaK,CAAEjC,CAAAA,KAAf,CADb,CAFkB,CAInBoD,IAJmB,CAAf,CAD6B,CA+KtCnF,QAAQmI,CAAAA,gBAAR,CAvBAA,QAAyB,CAACxC,IAAD,CAAOyC,IAAP,CAAaC,KAAb,CAAoBC,MAApB,CAA4B,CAC/CF,IAAA,CAAK,CAAL,CAAQvF,CAAAA,IAAZ,GAAqBrC,cAAe+H,CAAAA,OAApC,EAA6ChI,QAASiI,CAAAA,KAAT,CAAe,iEAAf,CACvC3C,KAAAA,CAAOuC,IAAA,CAAK,CAAL,CAAQlH,CAAAA,KACnB0E,KAAAA,CAAoB,CAApBA,EAAKwC,IAAKjG,CAAAA,MAAVyD,EAAyBrF,QAASkI,CAAAA,IAAT,CAAcL,IAAd,CAAoBlH,CAAAA,KAD/C,OAIEwH,SAReC,GAQfD,CAAwB7C,IAtSVO,YAyShB;AAAIR,IAAJ,EAAyBrF,QAASqI,CAAAA,cAAT,CAAwBN,MAAxB,CAJXO,OAIW,CAAzB,GACEP,MAAA,CALYO,OAKZ,CADF,CACsBR,KAAMS,CAAAA,OAAN,CAAcjD,IAAd,CAAoBkD,CAAAA,SAApB,CAA8BV,KAA9B,CANZ7F,MAMY,CADtB,CAKKjC,SAASqI,CAAAA,cAAT,CAAwBN,MAAxB,CAAgCI,QAAhC,CAAL,GACEJ,MAAA,CAAOI,QAAP,CADF,CACqBL,KAAMS,CAAAA,OAAN,CAAcjD,IAAd,CAAoBmD,CAAAA,SAApB,EADrB,CAdmD,CA9aA,CAJvD,CADqH;",
"sources":["node_modules/vega-selections/build/vega-selection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_selections$build$vega_selection\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('vega-expression')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'vega-expression'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.vega));\n})(this, (function (exports, vegaUtil, vegaExpression) { 'use strict';\n\n  function ascending(a, b) {\n    return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function descending(a, b) {\n    return a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function bisector(f) {\n    let compare1, compare2, delta;\n\n    // If an accessor is specified, promote it to a comparator. In this case we\n    // can test whether the search value is (self-) comparable. We can\u2019t do this\n    // for a comparator (except for specific, known comparators) because we can\u2019t\n    // tell if the comparator is symmetric, and an asymmetric comparator can\u2019t be\n    // used to test whether a single value is comparable.\n    if (f.length !== 2) {\n      compare1 = ascending;\n      compare2 = (d, x) => ascending(f(d), x);\n      delta = (d, x) => f(d) - x;\n    } else {\n      compare1 = f === ascending || f === descending ? f : zero;\n      compare2 = f;\n      delta = f;\n    }\n    function left(a, x, lo = 0, hi = a.length) {\n      if (lo < hi) {\n        if (compare1(x, x) !== 0) return hi;\n        do {\n          const mid = lo + hi >>> 1;\n          if (compare2(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        } while (lo < hi);\n      }\n      return lo;\n    }\n    function right(a, x, lo = 0, hi = a.length) {\n      if (lo < hi) {\n        if (compare1(x, x) !== 0) return hi;\n        do {\n          const mid = lo + hi >>> 1;\n          if (compare2(a[mid], x) <= 0) lo = mid + 1;else hi = mid;\n        } while (lo < hi);\n      }\n      return lo;\n    }\n    function center(a, x, lo = 0, hi = a.length) {\n      const i = left(a, x, lo, hi - 1);\n      return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n    }\n    return {\n      left,\n      center,\n      right\n    };\n  }\n  function zero() {\n    return 0;\n  }\n\n  class InternSet extends Set {\n    constructor(values, key = keyof) {\n      super();\n      Object.defineProperties(this, {\n        _intern: {\n          value: new Map()\n        },\n        _key: {\n          value: key\n        }\n      });\n      if (values != null) for (const value of values) this.add(value);\n    }\n    has(value) {\n      return super.has(intern_get(this, value));\n    }\n    add(value) {\n      return super.add(intern_set(this, value));\n    }\n    delete(value) {\n      return super.delete(intern_delete(this, value));\n    }\n  }\n  function intern_get({\n    _intern,\n    _key\n  }, value) {\n    const key = _key(value);\n    return _intern.has(key) ? _intern.get(key) : value;\n  }\n  function intern_set({\n    _intern,\n    _key\n  }, value) {\n    const key = _key(value);\n    if (_intern.has(key)) return _intern.get(key);\n    _intern.set(key, value);\n    return value;\n  }\n  function intern_delete({\n    _intern,\n    _key\n  }, value) {\n    const key = _key(value);\n    if (_intern.has(key)) {\n      value = _intern.get(key);\n      _intern.delete(key);\n    }\n    return value;\n  }\n  function keyof(value) {\n    return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n  }\n\n  function intersection(values, ...others) {\n    values = new InternSet(values);\n    others = others.map(set);\n    out: for (const value of values) {\n      for (const other of others) {\n        if (!other.has(value)) {\n          values.delete(value);\n          continue out;\n        }\n      }\n    }\n    return values;\n  }\n  function set(values) {\n    return values instanceof InternSet ? values : new InternSet(values);\n  }\n\n  function union(...others) {\n    const set = new InternSet();\n    for (const other of others) {\n      for (const o of other) {\n        set.add(o);\n      }\n    }\n    return set;\n  }\n\n  const Intersect = 'intersect';\n  const Union = 'union';\n  const VlMulti = 'vlMulti';\n  const VlPoint = 'vlPoint';\n  const Or = 'or';\n  const And = 'and';\n  const SelectionId = '_vgsid_';\n  const $selectionId = vegaUtil.field(SelectionId);\n\n  const TYPE_ENUM = 'E',\n    TYPE_RANGE_INC = 'R',\n    TYPE_RANGE_EXC = 'R-E',\n    TYPE_RANGE_LE = 'R-LE',\n    TYPE_RANGE_RE = 'R-RE',\n    UNIT_INDEX = 'index:unit';\n\n  // TODO: revisit date coercion?\n  function testPoint(datum, entry) {\n    var fields = entry.fields,\n      values = entry.values,\n      n = fields.length,\n      i = 0,\n      dval,\n      f;\n    for (; i < n; ++i) {\n      f = fields[i];\n      f.getter = vegaUtil.field.getter || vegaUtil.field(f.field);\n      dval = f.getter(datum);\n      if (vegaUtil.isDate(dval)) dval = vegaUtil.toNumber(dval);\n      if (vegaUtil.isDate(values[i])) values[i] = vegaUtil.toNumber(values[i]);\n      if (vegaUtil.isDate(values[i][0])) values[i] = values[i].map(vegaUtil.toNumber);\n      if (f.type === TYPE_ENUM) {\n        // Enumerated fields can either specify individual values (single/multi selections)\n        // or an array of values (interval selections).\n        if (vegaUtil.isArray(values[i]) ? values[i].indexOf(dval) < 0 : dval !== values[i]) {\n          return false;\n        }\n      } else {\n        if (f.type === TYPE_RANGE_INC) {\n          if (!vegaUtil.inrange(dval, values[i])) return false;\n        } else if (f.type === TYPE_RANGE_RE) {\n          // Discrete selection of bins test within the range [bin_start, bin_end).\n          if (!vegaUtil.inrange(dval, values[i], true, false)) return false;\n        } else if (f.type === TYPE_RANGE_EXC) {\n          // 'R-E'/'R-LE' included for completeness.\n          if (!vegaUtil.inrange(dval, values[i], false, false)) return false;\n        } else if (f.type === TYPE_RANGE_LE) {\n          if (!vegaUtil.inrange(dval, values[i], false, true)) return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Tests if a tuple is contained within an interactive selection.\n   * @param {string} name - The name of the data set representing the selection.\n   *  Tuples in the dataset are of the form\n   *  {unit: string, fields: array<fielddef>, values: array<*>}.\n   *  Fielddef is of the form\n   *  {field: string, channel: string, type: 'E' | 'R'} where\n   *  'type' identifies whether tuples in the dataset enumerate\n   *  values for the field, or specify a continuous range.\n   * @param {object} datum - The tuple to test for inclusion.\n   * @param {string} op - The set operation for combining selections.\n   *   One of 'intersect' or 'union' (default).\n   * @return {boolean} - True if the datum is in the selection, false otherwise.\n   */\n  function selectionTest(name, datum, op) {\n    var data = this.context.data[name],\n      entries = data ? data.values.value : [],\n      unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,\n      intersect = op === Intersect,\n      n = entries.length,\n      i = 0,\n      entry,\n      miss,\n      count,\n      unit,\n      b;\n    for (; i < n; ++i) {\n      entry = entries[i];\n      if (unitIdx && intersect) {\n        // multi selections union within the same unit and intersect across units.\n        miss = miss || {};\n        count = miss[unit = entry.unit] || 0;\n\n        // if we've already matched this unit, skip.\n        if (count === -1) continue;\n        b = testPoint(datum, entry);\n        miss[unit] = b ? -1 : ++count;\n\n        // if we match and there are no other units return true\n        // if we've missed against all tuples in this unit return false\n        if (b && unitIdx.size === 1) return true;\n        if (!b && count === unitIdx.get(unit).count) return false;\n      } else {\n        b = testPoint(datum, entry);\n\n        // if we find a miss and we do require intersection return false\n        // if we find a match and we don't require intersection return true\n        if (intersect ^ b) return b;\n      }\n    }\n\n    // if intersecting and we made it here, then we saw no misses\n    // if not intersecting, then we saw no matches\n    // if no active selections, return false\n    return n && intersect;\n  }\n  const bisect = bisector($selectionId),\n    bisectLeft = bisect.left,\n    bisectRight = bisect.right;\n  function selectionIdTest(name, datum, op) {\n    const data = this.context.data[name],\n      entries = data ? data.values.value : [],\n      unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,\n      intersect = op === Intersect,\n      value = $selectionId(datum),\n      index = bisectLeft(entries, value);\n    if (index === entries.length) return false;\n    if ($selectionId(entries[index]) !== value) return false;\n    if (unitIdx && intersect) {\n      if (unitIdx.size === 1) return true;\n      if (bisectRight(entries, value) - index < unitIdx.size) return false;\n    }\n    return true;\n  }\n\n  /**\n   * Maps an array of scene graph items to an array of selection tuples.\n   * @param {string} name  - The name of the dataset representing the selection.\n   * @param {string} base  - The base object that generated tuples extend.\n   *\n   * @returns {array} An array of selection entries for the given unit.\n   */\n  function selectionTuples(array, base) {\n    return array.map(x => vegaUtil.extend(base.fields ? {\n      values: base.fields.map(f => (f.getter || (f.getter = vegaUtil.field(f.field)))(x.datum))\n    } : {\n      [SelectionId]: $selectionId(x.datum)\n    }, base));\n  }\n\n  /**\n   * Resolves selection for use as a scale domain or reads via the API.\n   * @param {string} name - The name of the dataset representing the selection\n   * @param {string} [op='union'] - The set operation for combining selections.\n   *                 One of 'intersect' or 'union' (default).\n   * @param {boolean} isMulti - Identifies a \"multi\" selection to perform more\n   *                 expensive resolution computation.\n   * @param {boolean} vl5 - With Vega-Lite v5, \"multi\" selections are now called \"point\"\n   *                 selections, and thus the resolved tuple should reflect this name.\n   *                 This parameter allows us to reflect this change without triggering\n   *                 a major version bump for Vega.\n   * @returns {object} An object of selected fields and values.\n   */\n  function selectionResolve(name, op, isMulti, vl5) {\n    var data = this.context.data[name],\n      entries = data ? data.values.value : [],\n      resolved = {},\n      multiRes = {},\n      types = {},\n      entry,\n      fields,\n      values,\n      unit,\n      field,\n      value,\n      res,\n      resUnit,\n      type,\n      union,\n      n = entries.length,\n      i = 0,\n      j,\n      m;\n\n    // First union all entries within the same unit.\n    for (; i < n; ++i) {\n      entry = entries[i];\n      unit = entry.unit;\n      fields = entry.fields;\n      values = entry.values;\n      if (fields && values) {\n        // Intentional selection stores\n        for (j = 0, m = fields.length; j < m; ++j) {\n          field = fields[j];\n          res = resolved[field.field] || (resolved[field.field] = {});\n          resUnit = res[unit] || (res[unit] = []);\n          types[field.field] = type = field.type.charAt(0);\n          union = ops[`${type}_union`];\n          res[unit] = union(resUnit, vegaUtil.array(values[j]));\n        }\n\n        // If the same multi-selection is repeated over views and projected over\n        // an encoding, it may operate over different fields making it especially\n        // tricky to reliably resolve it. At best, we can de-dupe identical entries\n        // but doing so may be more computationally expensive than it is worth.\n        // Instead, for now, we simply transform our store representation into\n        // a more human-friendly one.\n        if (isMulti) {\n          resUnit = multiRes[unit] || (multiRes[unit] = []);\n          resUnit.push(vegaUtil.array(values).reduce((obj, curr, j) => (obj[fields[j].field] = curr, obj), {}));\n        }\n      } else {\n        // Short circuit extensional selectionId stores which hold sorted IDs unique to each unit.\n        field = SelectionId;\n        value = $selectionId(entry);\n        res = resolved[field] || (resolved[field] = {});\n        resUnit = res[unit] || (res[unit] = []);\n        resUnit.push(value);\n        if (isMulti) {\n          resUnit = multiRes[unit] || (multiRes[unit] = []);\n          resUnit.push({\n            [SelectionId]: value\n          });\n        }\n      }\n    }\n\n    // Then resolve fields across units as per the op.\n    op = op || Union;\n    if (resolved[SelectionId]) {\n      resolved[SelectionId] = ops[`${SelectionId}_${op}`](...Object.values(resolved[SelectionId]));\n    } else {\n      Object.keys(resolved).forEach(field => {\n        resolved[field] = Object.keys(resolved[field]).map(unit => resolved[field][unit]).reduce((acc, curr) => acc === undefined ? curr : ops[`${types[field]}_${op}`](acc, curr));\n      });\n    }\n    entries = Object.keys(multiRes);\n    if (isMulti && entries.length) {\n      const key = vl5 ? VlPoint : VlMulti;\n      resolved[key] = op === Union ? {\n        [Or]: entries.reduce((acc, k) => (acc.push(...multiRes[k]), acc), [])\n      } : {\n        [And]: entries.map(k => ({\n          [Or]: multiRes[k]\n        }))\n      };\n    }\n    return resolved;\n  }\n  var ops = {\n    [`${SelectionId}_union`]: union,\n    [`${SelectionId}_intersect`]: intersection,\n    E_union: function (base, value) {\n      if (!base.length) return value;\n      var i = 0,\n        n = value.length;\n      for (; i < n; ++i) if (base.indexOf(value[i]) < 0) base.push(value[i]);\n      return base;\n    },\n    E_intersect: function (base, value) {\n      return !base.length ? value : base.filter(v => value.indexOf(v) >= 0);\n    },\n    R_union: function (base, value) {\n      var lo = vegaUtil.toNumber(value[0]),\n        hi = vegaUtil.toNumber(value[1]);\n      if (lo > hi) {\n        lo = value[1];\n        hi = value[0];\n      }\n      if (!base.length) return [lo, hi];\n      if (base[0] > lo) base[0] = lo;\n      if (base[1] < hi) base[1] = hi;\n      return base;\n    },\n    R_intersect: function (base, value) {\n      var lo = vegaUtil.toNumber(value[0]),\n        hi = vegaUtil.toNumber(value[1]);\n      if (lo > hi) {\n        lo = value[1];\n        hi = value[0];\n      }\n      if (!base.length) return [lo, hi];\n      if (hi < base[0] || base[1] < lo) {\n        return [];\n      } else {\n        if (base[0] < lo) base[0] = lo;\n        if (base[1] > hi) base[1] = hi;\n      }\n      return base;\n    }\n  };\n\n  const DataPrefix = ':',\n    IndexPrefix = '@';\n  function selectionVisitor(name, args, scope, params) {\n    if (args[0].type !== vegaExpression.Literal) vegaUtil.error('First argument to selection functions must be a string literal.');\n    const data = args[0].value,\n      op = args.length >= 2 && vegaUtil.peek(args).value,\n      field = 'unit',\n      indexName = IndexPrefix + field,\n      dataName = DataPrefix + data;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (op === Intersect && !vegaUtil.hasOwnProperty(params, indexName)) {\n      params[indexName] = scope.getData(data).indataRef(scope, field);\n    }\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!vegaUtil.hasOwnProperty(params, dataName)) {\n      params[dataName] = scope.getData(data).tuplesRef();\n    }\n  }\n\n  exports.selectionIdTest = selectionIdTest;\n  exports.selectionResolve = selectionResolve;\n  exports.selectionTest = selectionTest;\n  exports.selectionTuples = selectionTuples;\n  exports.selectionVisitor = selectionVisitor;\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","vegaUtil","vegaExpression","ascending","a","b","NaN","descending","zero","intern_get","_intern","_key","value","key","has","get","intern_set","set","intern_delete","delete","keyof","valueOf","values","InternSet","testPoint","datum","entry","fields","n","length","i","dval","f","getter","field","isDate","toNumber","map","TYPE_ENUM","type","isArray","indexOf","TYPE_RANGE_INC","inrange","TYPE_RANGE_RE","TYPE_RANGE_EXC","TYPE_RANGE_LE","Set","constructor","Object","defineProperties","Map","add","$selectionId","SelectionId","bisect","bisector","left","x","lo","hi","compare1","mid","compare2","delta","d","center","right","bisectLeft","bisectRight","ops","union","others","other","o","intersection","E_union","base","push","E_intersect","filter","v","R_union","R_intersect","selectionIdTest","name","op","data","context","entries","unitIdx","UNIT_INDEX","undefined","intersect","Intersect","index","size","selectionResolve","isMulti","vl5","resolved","multiRes","types","unit","resUnit","j","m","res","charAt","array","reduce","obj","curr","Union","keys","forEach","acc","VlPoint","VlMulti","k","selectionTest","miss","count","selectionTuples","extend","selectionVisitor","args","scope","params","Literal","error","peek","dataName","DataPrefix","hasOwnProperty","indexName","getData","indataRef","tuplesRef"]
}
