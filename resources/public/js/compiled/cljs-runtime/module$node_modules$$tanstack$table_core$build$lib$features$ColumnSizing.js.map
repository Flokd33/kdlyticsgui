{
"version":3,
"file":"module$node_modules$$tanstack$table_core$build$lib$features$ColumnSizing.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/@tanstack/table-core/build/lib/features/ColumnSizing.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$table_core$build$lib$features$ColumnSizing\"] = function(global,require,module,exports) {\n/**\n * table-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('../utils.js');\n\n//\n\n//\n\nconst defaultColumnSizing = {\n  size: 150,\n  minSize: 20,\n  maxSize: Number.MAX_SAFE_INTEGER\n};\nconst getDefaultColumnSizingInfoState = () => ({\n  startOffset: null,\n  startSize: null,\n  deltaOffset: null,\n  deltaPercentage: null,\n  isResizingColumn: false,\n  columnSizingStart: []\n});\nconst ColumnSizing = {\n  getDefaultColumnDef: () => {\n    return defaultColumnSizing;\n  },\n  getInitialState: state => {\n    return {\n      columnSizing: {},\n      columnSizingInfo: getDefaultColumnSizingInfoState(),\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      columnResizeMode: 'onEnd',\n      onColumnSizingChange: utils.makeStateUpdater('columnSizing', table),\n      onColumnSizingInfoChange: utils.makeStateUpdater('columnSizingInfo', table)\n    };\n  },\n  createColumn: (column, table) => {\n    return {\n      getSize: () => {\n        var _column$columnDef$min, _ref, _column$columnDef$max;\n        const columnSize = table.getState().columnSizing[column.id];\n        return Math.min(Math.max((_column$columnDef$min = column.columnDef.minSize) != null ? _column$columnDef$min : defaultColumnSizing.minSize, (_ref = columnSize != null ? columnSize : column.columnDef.size) != null ? _ref : defaultColumnSizing.size), (_column$columnDef$max = column.columnDef.maxSize) != null ? _column$columnDef$max : defaultColumnSizing.maxSize);\n      },\n      getStart: position => {\n        const columns = !position ? table.getVisibleLeafColumns() : position === 'left' ? table.getLeftVisibleLeafColumns() : table.getRightVisibleLeafColumns();\n        const index = columns.findIndex(d => d.id === column.id);\n        if (index > 0) {\n          const prevSiblingColumn = columns[index - 1];\n          return prevSiblingColumn.getStart(position) + prevSiblingColumn.getSize();\n        }\n        return 0;\n      },\n      resetSize: () => {\n        table.setColumnSizing(_ref2 => {\n          let {\n            [column.id]: _,\n            ...rest\n          } = _ref2;\n          return rest;\n        });\n      },\n      getCanResize: () => {\n        var _column$columnDef$ena, _table$options$enable;\n        return ((_column$columnDef$ena = column.columnDef.enableResizing) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnResizing) != null ? _table$options$enable : true);\n      },\n      getIsResizing: () => {\n        return table.getState().columnSizingInfo.isResizingColumn === column.id;\n      }\n    };\n  },\n  createHeader: (header, table) => {\n    return {\n      getSize: () => {\n        let sum = 0;\n        const recurse = header => {\n          if (header.subHeaders.length) {\n            header.subHeaders.forEach(recurse);\n          } else {\n            var _header$column$getSiz;\n            sum += (_header$column$getSiz = header.column.getSize()) != null ? _header$column$getSiz : 0;\n          }\n        };\n        recurse(header);\n        return sum;\n      },\n      getStart: () => {\n        if (header.index > 0) {\n          const prevSiblingHeader = header.headerGroup.headers[header.index - 1];\n          return prevSiblingHeader.getStart() + prevSiblingHeader.getSize();\n        }\n        return 0;\n      },\n      getResizeHandler: () => {\n        const column = table.getColumn(header.column.id);\n        const canResize = column == null ? void 0 : column.getCanResize();\n        return e => {\n          if (!column || !canResize) {\n            return;\n          }\n          e.persist == null ? void 0 : e.persist();\n          if (isTouchStartEvent(e)) {\n            // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n            if (e.touches && e.touches.length > 1) {\n              return;\n            }\n          }\n          const startSize = header.getSize();\n          const columnSizingStart = header ? header.getLeafHeaders().map(d => [d.column.id, d.column.getSize()]) : [[column.id, column.getSize()]];\n          const clientX = isTouchStartEvent(e) ? Math.round(e.touches[0].clientX) : e.clientX;\n          const newColumnSizing = {};\n          const updateOffset = (eventType, clientXPos) => {\n            if (typeof clientXPos !== 'number') {\n              return;\n            }\n            table.setColumnSizingInfo(old => {\n              var _old$startOffset, _old$startSize;\n              const deltaOffset = clientXPos - ((_old$startOffset = old == null ? void 0 : old.startOffset) != null ? _old$startOffset : 0);\n              const deltaPercentage = Math.max(deltaOffset / ((_old$startSize = old == null ? void 0 : old.startSize) != null ? _old$startSize : 0), -0.999999);\n              old.columnSizingStart.forEach(_ref3 => {\n                let [columnId, headerSize] = _ref3;\n                newColumnSizing[columnId] = Math.round(Math.max(headerSize + headerSize * deltaPercentage, 0) * 100) / 100;\n              });\n              return {\n                ...old,\n                deltaOffset,\n                deltaPercentage\n              };\n            });\n            if (table.options.columnResizeMode === 'onChange' || eventType === 'end') {\n              table.setColumnSizing(old => ({\n                ...old,\n                ...newColumnSizing\n              }));\n            }\n          };\n          const onMove = clientXPos => updateOffset('move', clientXPos);\n          const onEnd = clientXPos => {\n            updateOffset('end', clientXPos);\n            table.setColumnSizingInfo(old => ({\n              ...old,\n              isResizingColumn: false,\n              startOffset: null,\n              startSize: null,\n              deltaOffset: null,\n              deltaPercentage: null,\n              columnSizingStart: []\n            }));\n          };\n          const mouseEvents = {\n            moveHandler: e => onMove(e.clientX),\n            upHandler: e => {\n              document.removeEventListener('mousemove', mouseEvents.moveHandler);\n              document.removeEventListener('mouseup', mouseEvents.upHandler);\n              onEnd(e.clientX);\n            }\n          };\n          const touchEvents = {\n            moveHandler: e => {\n              if (e.cancelable) {\n                e.preventDefault();\n                e.stopPropagation();\n              }\n              onMove(e.touches[0].clientX);\n              return false;\n            },\n            upHandler: e => {\n              var _e$touches$;\n              document.removeEventListener('touchmove', touchEvents.moveHandler);\n              document.removeEventListener('touchend', touchEvents.upHandler);\n              if (e.cancelable) {\n                e.preventDefault();\n                e.stopPropagation();\n              }\n              onEnd((_e$touches$ = e.touches[0]) == null ? void 0 : _e$touches$.clientX);\n            }\n          };\n          const passiveIfSupported = passiveEventSupported() ? {\n            passive: false\n          } : false;\n          if (isTouchStartEvent(e)) {\n            document.addEventListener('touchmove', touchEvents.moveHandler, passiveIfSupported);\n            document.addEventListener('touchend', touchEvents.upHandler, passiveIfSupported);\n          } else {\n            document.addEventListener('mousemove', mouseEvents.moveHandler, passiveIfSupported);\n            document.addEventListener('mouseup', mouseEvents.upHandler, passiveIfSupported);\n          }\n          table.setColumnSizingInfo(old => ({\n            ...old,\n            startOffset: clientX,\n            startSize,\n            deltaOffset: 0,\n            deltaPercentage: 0,\n            columnSizingStart,\n            isResizingColumn: column.id\n          }));\n        };\n      }\n    };\n  },\n  createTable: table => {\n    return {\n      setColumnSizing: updater => table.options.onColumnSizingChange == null ? void 0 : table.options.onColumnSizingChange(updater),\n      setColumnSizingInfo: updater => table.options.onColumnSizingInfoChange == null ? void 0 : table.options.onColumnSizingInfoChange(updater),\n      resetColumnSizing: defaultState => {\n        var _table$initialState$c;\n        table.setColumnSizing(defaultState ? {} : (_table$initialState$c = table.initialState.columnSizing) != null ? _table$initialState$c : {});\n      },\n      resetHeaderSizeInfo: defaultState => {\n        var _table$initialState$c2;\n        table.setColumnSizingInfo(defaultState ? getDefaultColumnSizingInfoState() : (_table$initialState$c2 = table.initialState.columnSizingInfo) != null ? _table$initialState$c2 : getDefaultColumnSizingInfoState());\n      },\n      getTotalSize: () => {\n        var _table$getHeaderGroup, _table$getHeaderGroup2;\n        return (_table$getHeaderGroup = (_table$getHeaderGroup2 = table.getHeaderGroups()[0]) == null ? void 0 : _table$getHeaderGroup2.headers.reduce((sum, header) => {\n          return sum + header.getSize();\n        }, 0)) != null ? _table$getHeaderGroup : 0;\n      },\n      getLeftTotalSize: () => {\n        var _table$getLeftHeaderG, _table$getLeftHeaderG2;\n        return (_table$getLeftHeaderG = (_table$getLeftHeaderG2 = table.getLeftHeaderGroups()[0]) == null ? void 0 : _table$getLeftHeaderG2.headers.reduce((sum, header) => {\n          return sum + header.getSize();\n        }, 0)) != null ? _table$getLeftHeaderG : 0;\n      },\n      getCenterTotalSize: () => {\n        var _table$getCenterHeade, _table$getCenterHeade2;\n        return (_table$getCenterHeade = (_table$getCenterHeade2 = table.getCenterHeaderGroups()[0]) == null ? void 0 : _table$getCenterHeade2.headers.reduce((sum, header) => {\n          return sum + header.getSize();\n        }, 0)) != null ? _table$getCenterHeade : 0;\n      },\n      getRightTotalSize: () => {\n        var _table$getRightHeader, _table$getRightHeader2;\n        return (_table$getRightHeader = (_table$getRightHeader2 = table.getRightHeaderGroups()[0]) == null ? void 0 : _table$getRightHeader2.headers.reduce((sum, header) => {\n          return sum + header.getSize();\n        }, 0)) != null ? _table$getRightHeader : 0;\n      }\n    };\n  }\n};\nlet passiveSupported = null;\nfunction passiveEventSupported() {\n  if (typeof passiveSupported === 'boolean') return passiveSupported;\n  let supported = false;\n  try {\n    const options = {\n      get passive() {\n        supported = true;\n        return false;\n      }\n    };\n    const noop = () => {};\n    window.addEventListener('test', noop, options);\n    window.removeEventListener('test', noop);\n  } catch (err) {\n    supported = false;\n  }\n  passiveSupported = supported;\n  return passiveSupported;\n}\nfunction isTouchStartEvent(e) {\n  return e.type === 'touchstart';\n}\n\nexports.ColumnSizing = ColumnSizing;\nexports.defaultColumnSizing = defaultColumnSizing;\nexports.passiveEventSupported = passiveEventSupported;\n//# sourceMappingURL=ColumnSizing.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","passiveEventSupported","passiveSupported","supported","noop","window","addEventListener","options","passive","removeEventListener","err","Object","defineProperty","value","utils","defaultColumnSizing","size","minSize","maxSize","Number","MAX_SAFE_INTEGER","getDefaultColumnSizingInfoState","startOffset","startSize","deltaOffset","deltaPercentage","isResizingColumn","columnSizingStart","ColumnSizing","getDefaultColumnDef","getInitialState","state","columnSizing","columnSizingInfo","getDefaultOptions","table","columnResizeMode","onColumnSizingChange","makeStateUpdater","onColumnSizingInfoChange","createColumn","column","getSize","_column$columnDef$min","_ref","_column$columnDef$max","columnSize","getState","id","Math","min","max","columnDef","getStart","position","columns","getLeftVisibleLeafColumns","getRightVisibleLeafColumns","getVisibleLeafColumns","index","findIndex","d","prevSiblingColumn","resetSize","setColumnSizing","_ref2","rest","getCanResize","_column$columnDef$ena","_table$options$enable","enableResizing","enableColumnResizing","getIsResizing","createHeader","header","sum","recurse","subHeaders","length","forEach","_header$column$getSiz","prevSiblingHeader","headerGroup","headers","getResizeHandler","getColumn","canResize","e","persist","type","touches","getLeafHeaders","map","clientX","round","newColumnSizing","updateOffset","eventType","clientXPos","setColumnSizingInfo","old","_old$startOffset","_old$startSize","_ref3","columnId","headerSize","onEnd","mouseEvents","moveHandler","upHandler","document","touchEvents","cancelable","preventDefault","stopPropagation","_e$touches$","passiveIfSupported","createTable","updater","resetColumnSizing","defaultState","_table$initialState$c","initialState","resetHeaderSizeInfo","_table$initialState$c2","getTotalSize","_table$getHeaderGroup","_table$getHeaderGroup2","getHeaderGroups","reduce","getLeftTotalSize","_table$getLeftHeaderG","_table$getLeftHeaderG2","getLeftHeaderGroups","getCenterTotalSize","_table$getCenterHeade","_table$getCenterHeade2","getCenterHeaderGroups","getRightTotalSize","_table$getRightHeader","_table$getRightHeader2","getRightHeaderGroups"]
}
