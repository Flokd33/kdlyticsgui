{
"version":3,
"file":"module$node_modules$vega_util$build$vega_util.js",
"lineCount":26,
"mappings":"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",
"sources":["node_modules/vega-util/build/vega-util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_util$build$vega_util\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}));\n})(this, (function (exports) { 'use strict';\n\n  function accessor (fn, fields, name) {\n    fn.fields = fields || [];\n    fn.fname = name;\n    return fn;\n  }\n  function accessorName(fn) {\n    return fn == null ? null : fn.fname;\n  }\n  function accessorFields(fn) {\n    return fn == null ? null : fn.fields;\n  }\n\n  function getter (path) {\n    return path.length === 1 ? get1(path[0]) : getN(path);\n  }\n  const get1 = field => function (obj) {\n    return obj[field];\n  };\n  const getN = path => {\n    const len = path.length;\n    return function (obj) {\n      for (let i = 0; i < len; ++i) {\n        obj = obj[path[i]];\n      }\n      return obj;\n    };\n  };\n\n  function error (message) {\n    throw Error(message);\n  }\n\n  function splitAccessPath (p) {\n    const path = [],\n      n = p.length;\n    let q = null,\n      b = 0,\n      s = '',\n      i,\n      j,\n      c;\n    p = p + '';\n    function push() {\n      path.push(s + p.substring(i, j));\n      s = '';\n      i = j + 1;\n    }\n    for (i = j = 0; j < n; ++j) {\n      c = p[j];\n      if (c === '\\\\') {\n        s += p.substring(i, j++);\n        i = j;\n      } else if (c === q) {\n        push();\n        q = null;\n        b = -1;\n      } else if (q) {\n        continue;\n      } else if (i === b && c === '\"') {\n        i = j + 1;\n        q = c;\n      } else if (i === b && c === \"'\") {\n        i = j + 1;\n        q = c;\n      } else if (c === '.' && !b) {\n        if (j > i) {\n          push();\n        } else {\n          i = j + 1;\n        }\n      } else if (c === '[') {\n        if (j > i) push();\n        b = i = j + 1;\n      } else if (c === ']') {\n        if (!b) error('Access path missing open bracket: ' + p);\n        if (b > 0) push();\n        b = 0;\n        i = j + 1;\n      }\n    }\n    if (b) error('Access path missing closing bracket: ' + p);\n    if (q) error('Access path missing closing quote: ' + p);\n    if (j > i) {\n      j++;\n      push();\n    }\n    return path;\n  }\n\n  function field (field, name, opt) {\n    const path = splitAccessPath(field);\n    field = path.length === 1 ? path[0] : field;\n    return accessor((opt && opt.get || getter)(path), [field], name || field);\n  }\n\n  const id = field('id');\n  const identity = accessor(_ => _, [], 'identity');\n  const zero = accessor(() => 0, [], 'zero');\n  const one = accessor(() => 1, [], 'one');\n  const truthy = accessor(() => true, [], 'true');\n  const falsy = accessor(() => false, [], 'false');\n\n  function log$1(method, level, input) {\n    const args = [level].concat([].slice.call(input));\n    console[method].apply(console, args); // eslint-disable-line no-console\n  }\n\n  const None = 0;\n  const Error$1 = 1;\n  const Warn = 2;\n  const Info = 3;\n  const Debug = 4;\n  function logger (_, method, handler = log$1) {\n    let level = _ || None;\n    return {\n      level(_) {\n        if (arguments.length) {\n          level = +_;\n          return this;\n        } else {\n          return level;\n        }\n      },\n      error() {\n        if (level >= Error$1) handler(method || 'error', 'ERROR', arguments);\n        return this;\n      },\n      warn() {\n        if (level >= Warn) handler(method || 'warn', 'WARN', arguments);\n        return this;\n      },\n      info() {\n        if (level >= Info) handler(method || 'log', 'INFO', arguments);\n        return this;\n      },\n      debug() {\n        if (level >= Debug) handler(method || 'log', 'DEBUG', arguments);\n        return this;\n      }\n    };\n  }\n\n  var isArray = Array.isArray;\n\n  function isObject (_) {\n    return _ === Object(_);\n  }\n\n  const isLegalKey = key => key !== '__proto__';\n  function mergeConfig(...configs) {\n    return configs.reduce((out, source) => {\n      for (const key in source) {\n        if (key === 'signals') {\n          // for signals, we merge the signals arrays\n          // source signals take precedence over\n          // existing signals with the same name\n          out.signals = mergeNamed(out.signals, source.signals);\n        } else {\n          // otherwise, merge objects subject to recursion constraints\n          // for legend block, recurse for the layout entry only\n          // for style block, recurse for all properties\n          // otherwise, no recursion: objects overwrite, no merging\n          const r = key === 'legend' ? {\n            layout: 1\n          } : key === 'style' ? true : null;\n          writeConfig(out, key, source[key], r);\n        }\n      }\n      return out;\n    }, {});\n  }\n  function writeConfig(output, key, value, recurse) {\n    if (!isLegalKey(key)) return;\n    let k, o;\n    if (isObject(value) && !isArray(value)) {\n      o = isObject(output[key]) ? output[key] : output[key] = {};\n      for (k in value) {\n        if (recurse && (recurse === true || recurse[k])) {\n          writeConfig(o, k, value[k]);\n        } else if (isLegalKey(k)) {\n          o[k] = value[k];\n        }\n      }\n    } else {\n      output[key] = value;\n    }\n  }\n  function mergeNamed(a, b) {\n    if (a == null) return b;\n    const map = {},\n      out = [];\n    function add(_) {\n      if (!map[_.name]) {\n        map[_.name] = 1;\n        out.push(_);\n      }\n    }\n    b.forEach(add);\n    a.forEach(add);\n    return out;\n  }\n\n  function peek (array) {\n    return array[array.length - 1];\n  }\n\n  function toNumber (_) {\n    return _ == null || _ === '' ? null : +_;\n  }\n\n  const exp = sign => x => sign * Math.exp(x);\n  const log = sign => x => Math.log(sign * x);\n  const symlog = c => x => Math.sign(x) * Math.log1p(Math.abs(x / c));\n  const symexp = c => x => Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  const pow = exponent => x => x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  function pan(domain, delta, lift, ground) {\n    const d0 = lift(domain[0]),\n      d1 = lift(peek(domain)),\n      dd = (d1 - d0) * delta;\n    return [ground(d0 - dd), ground(d1 - dd)];\n  }\n  function panLinear(domain, delta) {\n    return pan(domain, delta, toNumber, identity);\n  }\n  function panLog(domain, delta) {\n    var sign = Math.sign(domain[0]);\n    return pan(domain, delta, log(sign), exp(sign));\n  }\n  function panPow(domain, delta, exponent) {\n    return pan(domain, delta, pow(exponent), pow(1 / exponent));\n  }\n  function panSymlog(domain, delta, constant) {\n    return pan(domain, delta, symlog(constant), symexp(constant));\n  }\n  function zoom(domain, anchor, scale, lift, ground) {\n    const d0 = lift(domain[0]),\n      d1 = lift(peek(domain)),\n      da = anchor != null ? lift(anchor) : (d0 + d1) / 2;\n    return [ground(da + (d0 - da) * scale), ground(da + (d1 - da) * scale)];\n  }\n  function zoomLinear(domain, anchor, scale) {\n    return zoom(domain, anchor, scale, toNumber, identity);\n  }\n  function zoomLog(domain, anchor, scale) {\n    const sign = Math.sign(domain[0]);\n    return zoom(domain, anchor, scale, log(sign), exp(sign));\n  }\n  function zoomPow(domain, anchor, scale, exponent) {\n    return zoom(domain, anchor, scale, pow(exponent), pow(1 / exponent));\n  }\n  function zoomSymlog(domain, anchor, scale, constant) {\n    return zoom(domain, anchor, scale, symlog(constant), symexp(constant));\n  }\n\n  function quarter(date) {\n    return 1 + ~~(new Date(date).getMonth() / 3);\n  }\n  function utcquarter(date) {\n    return 1 + ~~(new Date(date).getUTCMonth() / 3);\n  }\n\n  function array (_) {\n    return _ != null ? isArray(_) ? _ : [_] : [];\n  }\n\n  /**\n   * Span-preserving range clamp. If the span of the input range is less\n   * than (max - min) and an endpoint exceeds either the min or max value,\n   * the range is translated such that the span is preserved and one\n   * endpoint touches the boundary of the min/max range.\n   * If the span exceeds (max - min), the range [min, max] is returned.\n   */\n  function clampRange (range, min, max) {\n    let lo = range[0],\n      hi = range[1],\n      span;\n    if (hi < lo) {\n      span = hi;\n      hi = lo;\n      lo = span;\n    }\n    span = hi - lo;\n    return span >= max - min ? [min, max] : [lo = Math.min(Math.max(lo, min), max - span), lo + span];\n  }\n\n  function isFunction (_) {\n    return typeof _ === 'function';\n  }\n\n  const DESCENDING = 'descending';\n  function compare (fields, orders, opt) {\n    opt = opt || {};\n    orders = array(orders) || [];\n    const ord = [],\n      get = [],\n      fmap = {},\n      gen = opt.comparator || comparator;\n    array(fields).forEach((f, i) => {\n      if (f == null) return;\n      ord.push(orders[i] === DESCENDING ? -1 : 1);\n      get.push(f = isFunction(f) ? f : field(f, null, opt));\n      (accessorFields(f) || []).forEach(_ => fmap[_] = 1);\n    });\n    return get.length === 0 ? null : accessor(gen(get, ord), Object.keys(fmap));\n  }\n  const ascending = (u, v) => (u < v || u == null) && v != null ? -1 : (u > v || v == null) && u != null ? 1 : (v = v instanceof Date ? +v : v, u = u instanceof Date ? +u : u) !== u && v === v ? -1 : v !== v && u === u ? 1 : 0;\n  const comparator = (fields, orders) => fields.length === 1 ? compare1(fields[0], orders[0]) : compareN(fields, orders, fields.length);\n  const compare1 = (field, order) => function (a, b) {\n    return ascending(field(a), field(b)) * order;\n  };\n  const compareN = (fields, orders, n) => {\n    orders.push(0); // pad zero for convenient lookup\n    return function (a, b) {\n      let f,\n        c = 0,\n        i = -1;\n      while (c === 0 && ++i < n) {\n        f = fields[i];\n        c = ascending(f(a), f(b));\n      }\n      return c * orders[i];\n    };\n  };\n\n  function constant (_) {\n    return isFunction(_) ? _ : () => _;\n  }\n\n  function debounce (delay, handler) {\n    let tid;\n    return e => {\n      if (tid) clearTimeout(tid);\n      tid = setTimeout(() => (handler(e), tid = null), delay);\n    };\n  }\n\n  function extend (_) {\n    for (let x, k, i = 1, len = arguments.length; i < len; ++i) {\n      x = arguments[i];\n      for (k in x) {\n        _[k] = x[k];\n      }\n    }\n    return _;\n  }\n\n  /**\n   * Return an array with minimum and maximum values, in the\n   * form [min, max]. Ignores null, undefined, and NaN values.\n   */\n  function extent (array, f) {\n    let i = 0,\n      n,\n      v,\n      min,\n      max;\n    if (array && (n = array.length)) {\n      if (f == null) {\n        // find first valid value\n        for (v = array[i]; i < n && (v == null || v !== v); v = array[++i]);\n        min = max = v;\n\n        // visit all other values\n        for (; i < n; ++i) {\n          v = array[i];\n          // skip null/undefined; NaN will fail all comparisons\n          if (v != null) {\n            if (v < min) min = v;\n            if (v > max) max = v;\n          }\n        }\n      } else {\n        // find first valid value\n        for (v = f(array[i]); i < n && (v == null || v !== v); v = f(array[++i]));\n        min = max = v;\n\n        // visit all other values\n        for (; i < n; ++i) {\n          v = f(array[i]);\n          // skip null/undefined; NaN will fail all comparisons\n          if (v != null) {\n            if (v < min) min = v;\n            if (v > max) max = v;\n          }\n        }\n      }\n    }\n    return [min, max];\n  }\n\n  function extentIndex (array, f) {\n    const n = array.length;\n    let i = -1,\n      a,\n      b,\n      c,\n      u,\n      v;\n    if (f == null) {\n      while (++i < n) {\n        b = array[i];\n        if (b != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n      if (i === n) return [-1, -1];\n      u = v = i;\n      while (++i < n) {\n        b = array[i];\n        if (b != null) {\n          if (a > b) {\n            a = b;\n            u = i;\n          }\n          if (c < b) {\n            c = b;\n            v = i;\n          }\n        }\n      }\n    } else {\n      while (++i < n) {\n        b = f(array[i], i, array);\n        if (b != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n      if (i === n) return [-1, -1];\n      u = v = i;\n      while (++i < n) {\n        b = f(array[i], i, array);\n        if (b != null) {\n          if (a > b) {\n            a = b;\n            u = i;\n          }\n          if (c < b) {\n            c = b;\n            v = i;\n          }\n        }\n      }\n    }\n    return [u, v];\n  }\n\n  const hop = Object.prototype.hasOwnProperty;\n  function has (object, property) {\n    return hop.call(object, property);\n  }\n\n  const NULL = {};\n  function fastmap (input) {\n    let obj = {},\n      test;\n    function has$1(key) {\n      return has(obj, key) && obj[key] !== NULL;\n    }\n    const map = {\n      size: 0,\n      empty: 0,\n      object: obj,\n      has: has$1,\n      get(key) {\n        return has$1(key) ? obj[key] : undefined;\n      },\n      set(key, value) {\n        if (!has$1(key)) {\n          ++map.size;\n          if (obj[key] === NULL) --map.empty;\n        }\n        obj[key] = value;\n        return this;\n      },\n      delete(key) {\n        if (has$1(key)) {\n          --map.size;\n          ++map.empty;\n          obj[key] = NULL;\n        }\n        return this;\n      },\n      clear() {\n        map.size = map.empty = 0;\n        map.object = obj = {};\n      },\n      test(_) {\n        if (arguments.length) {\n          test = _;\n          return map;\n        } else {\n          return test;\n        }\n      },\n      clean() {\n        const next = {};\n        let size = 0;\n        for (const key in obj) {\n          const value = obj[key];\n          if (value !== NULL && (!test || !test(value))) {\n            next[key] = value;\n            ++size;\n          }\n        }\n        map.size = size;\n        map.empty = 0;\n        map.object = obj = next;\n      }\n    };\n    if (input) Object.keys(input).forEach(key => {\n      map.set(key, input[key]);\n    });\n    return map;\n  }\n\n  function flush (range, value, threshold, left, right, center) {\n    if (!threshold && threshold !== 0) return center;\n    const t = +threshold;\n    let a = range[0],\n      b = peek(range),\n      l;\n\n    // swap endpoints if range is reversed\n    if (b < a) {\n      l = a;\n      a = b;\n      b = l;\n    }\n\n    // compare value to endpoints\n    l = Math.abs(value - a);\n    const r = Math.abs(b - value);\n\n    // adjust if value is within threshold distance of endpoint\n    return l < r && l <= t ? left : r <= t ? right : center;\n  }\n\n  function inherits (child, parent, members) {\n    const proto = child.prototype = Object.create(parent.prototype);\n    Object.defineProperty(proto, 'constructor', {\n      value: child,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n    return extend(proto, members);\n  }\n\n  /**\n   * Predicate that returns true if the value lies within the span\n   * of the given range. The left and right flags control the use\n   * of inclusive (true) or exclusive (false) comparisons.\n   */\n  function inrange (value, range, left, right) {\n    let r0 = range[0],\n      r1 = range[range.length - 1],\n      t;\n    if (r0 > r1) {\n      t = r0;\n      r0 = r1;\n      r1 = t;\n    }\n    left = left === undefined || left;\n    right = right === undefined || right;\n    return (left ? r0 <= value : r0 < value) && (right ? value <= r1 : value < r1);\n  }\n\n  function isBoolean (_) {\n    return typeof _ === 'boolean';\n  }\n\n  function isDate (_) {\n    return Object.prototype.toString.call(_) === '[object Date]';\n  }\n\n  function isIterable (_) {\n    return _ && isFunction(_[Symbol.iterator]);\n  }\n\n  function isNumber (_) {\n    return typeof _ === 'number';\n  }\n\n  function isRegExp (_) {\n    return Object.prototype.toString.call(_) === '[object RegExp]';\n  }\n\n  function isString (_) {\n    return typeof _ === 'string';\n  }\n\n  function key (fields, flat, opt) {\n    if (fields) {\n      fields = flat ? array(fields).map(f => f.replace(/\\\\(.)/g, '$1')) : array(fields);\n    }\n    const len = fields && fields.length,\n      gen = opt && opt.get || getter,\n      map = f => gen(flat ? [f] : splitAccessPath(f));\n    let fn;\n    if (!len) {\n      fn = function () {\n        return '';\n      };\n    } else if (len === 1) {\n      const get = map(fields[0]);\n      fn = function (_) {\n        return '' + get(_);\n      };\n    } else {\n      const get = fields.map(map);\n      fn = function (_) {\n        let s = '' + get[0](_),\n          i = 0;\n        while (++i < len) s += '|' + get[i](_);\n        return s;\n      };\n    }\n    return accessor(fn, fields, 'key');\n  }\n\n  function lerp (array, frac) {\n    const lo = array[0],\n      hi = peek(array),\n      f = +frac;\n    return !f ? lo : f === 1 ? hi : lo + f * (hi - lo);\n  }\n\n  const DEFAULT_MAX_SIZE = 10000;\n\n  // adapted from https://github.com/dominictarr/hashlru/ (MIT License)\n  function lruCache (maxsize) {\n    maxsize = +maxsize || DEFAULT_MAX_SIZE;\n    let curr, prev, size;\n    const clear = () => {\n      curr = {};\n      prev = {};\n      size = 0;\n    };\n    const update = (key, value) => {\n      if (++size > maxsize) {\n        prev = curr;\n        curr = {};\n        size = 1;\n      }\n      return curr[key] = value;\n    };\n    clear();\n    return {\n      clear,\n      has: key => has(curr, key) || has(prev, key),\n      get: key => has(curr, key) ? curr[key] : has(prev, key) ? update(key, prev[key]) : undefined,\n      set: (key, value) => has(curr, key) ? curr[key] = value : update(key, value)\n    };\n  }\n\n  function merge (compare, array0, array1, output) {\n    const n0 = array0.length,\n      n1 = array1.length;\n    if (!n1) return array0;\n    if (!n0) return array1;\n    const merged = output || new array0.constructor(n0 + n1);\n    let i0 = 0,\n      i1 = 0,\n      i = 0;\n    for (; i0 < n0 && i1 < n1; ++i) {\n      merged[i] = compare(array0[i0], array1[i1]) > 0 ? array1[i1++] : array0[i0++];\n    }\n    for (; i0 < n0; ++i0, ++i) {\n      merged[i] = array0[i0];\n    }\n    for (; i1 < n1; ++i1, ++i) {\n      merged[i] = array1[i1];\n    }\n    return merged;\n  }\n\n  function repeat (str, reps) {\n    let s = '';\n    while (--reps >= 0) s += str;\n    return s;\n  }\n\n  function pad (str, length, padchar, align) {\n    const c = padchar || ' ',\n      s = str + '',\n      n = length - s.length;\n    return n <= 0 ? s : align === 'left' ? repeat(c, n) + s : align === 'center' ? repeat(c, ~~(n / 2)) + s + repeat(c, Math.ceil(n / 2)) : s + repeat(c, n);\n  }\n\n  /**\n   * Return the numerical span of an array: the difference between\n   * the last and first values.\n   */\n  function span (array) {\n    return array && peek(array) - array[0] || 0;\n  }\n\n  function $(x) {\n    return isArray(x) ? '[' + x.map($) + ']' : isObject(x) || isString(x) ?\n    // Output valid JSON and JS source strings.\n    // See http://timelessrepo.com/json-isnt-a-javascript-subset\n    JSON.stringify(x).replace('\\u2028', '\\\\u2028').replace('\\u2029', '\\\\u2029') : x;\n  }\n\n  function toBoolean (_) {\n    return _ == null || _ === '' ? null : !_ || _ === 'false' || _ === '0' ? false : !!_;\n  }\n\n  const defaultParser = _ => isNumber(_) ? _ : isDate(_) ? _ : Date.parse(_);\n  function toDate (_, parser) {\n    parser = parser || defaultParser;\n    return _ == null || _ === '' ? null : parser(_);\n  }\n\n  function toString (_) {\n    return _ == null || _ === '' ? null : _ + '';\n  }\n\n  function toSet (_) {\n    const s = {},\n      n = _.length;\n    for (let i = 0; i < n; ++i) s[_[i]] = true;\n    return s;\n  }\n\n  function truncate (str, length, align, ellipsis) {\n    const e = ellipsis != null ? ellipsis : '\\u2026',\n      s = str + '',\n      n = s.length,\n      l = Math.max(0, length - e.length);\n    return n <= length ? s : align === 'left' ? e + s.slice(n - l) : align === 'center' ? s.slice(0, Math.ceil(l / 2)) + e + s.slice(n - ~~(l / 2)) : s.slice(0, l) + e;\n  }\n\n  function visitArray (array, filter, visitor) {\n    if (array) {\n      if (filter) {\n        const n = array.length;\n        for (let i = 0; i < n; ++i) {\n          const t = filter(array[i]);\n          if (t) visitor(t, i, array);\n        }\n      } else {\n        array.forEach(visitor);\n      }\n    }\n  }\n\n  exports.Debug = Debug;\n  exports.Error = Error$1;\n  exports.Info = Info;\n  exports.None = None;\n  exports.Warn = Warn;\n  exports.accessor = accessor;\n  exports.accessorFields = accessorFields;\n  exports.accessorName = accessorName;\n  exports.array = array;\n  exports.ascending = ascending;\n  exports.clampRange = clampRange;\n  exports.compare = compare;\n  exports.constant = constant;\n  exports.debounce = debounce;\n  exports.error = error;\n  exports.extend = extend;\n  exports.extent = extent;\n  exports.extentIndex = extentIndex;\n  exports.falsy = falsy;\n  exports.fastmap = fastmap;\n  exports.field = field;\n  exports.flush = flush;\n  exports.hasOwnProperty = has;\n  exports.id = id;\n  exports.identity = identity;\n  exports.inherits = inherits;\n  exports.inrange = inrange;\n  exports.isArray = isArray;\n  exports.isBoolean = isBoolean;\n  exports.isDate = isDate;\n  exports.isFunction = isFunction;\n  exports.isIterable = isIterable;\n  exports.isNumber = isNumber;\n  exports.isObject = isObject;\n  exports.isRegExp = isRegExp;\n  exports.isString = isString;\n  exports.key = key;\n  exports.lerp = lerp;\n  exports.logger = logger;\n  exports.lruCache = lruCache;\n  exports.merge = merge;\n  exports.mergeConfig = mergeConfig;\n  exports.one = one;\n  exports.pad = pad;\n  exports.panLinear = panLinear;\n  exports.panLog = panLog;\n  exports.panPow = panPow;\n  exports.panSymlog = panSymlog;\n  exports.peek = peek;\n  exports.quarter = quarter;\n  exports.repeat = repeat;\n  exports.span = span;\n  exports.splitAccessPath = splitAccessPath;\n  exports.stringValue = $;\n  exports.toBoolean = toBoolean;\n  exports.toDate = toDate;\n  exports.toNumber = toNumber;\n  exports.toSet = toSet;\n  exports.toString = toString;\n  exports.truncate = truncate;\n  exports.truthy = truthy;\n  exports.utcquarter = utcquarter;\n  exports.visitArray = visitArray;\n  exports.writeConfig = writeConfig;\n  exports.zero = zero;\n  exports.zoomLinear = zoomLinear;\n  exports.zoomLog = zoomLog;\n  exports.zoomPow = zoomPow;\n  exports.zoomSymlog = zoomSymlog;\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","accessor","fn","fields","name","fname","accessorFields","getter","path","length","get1","getN","error","message","Error","splitAccessPath","p","push","s","substring","i","j","n","q","b","c","field","opt","get","log$1","method","level","input","args","concat","slice","call","console","apply","isObject","_","Object","writeConfig","output","key","value","recurse","k","isArray","o","mergeNamed","a","add","map","out","forEach","peek","array","toNumber","pan","domain","delta","lift","ground","d0","d1","dd","zoom","anchor","scale","da","isFunction","extend","x","len","arguments","has","object","property","hop","isDate","prototype","toString","isNumber","isString","repeat","str","reps","$","JSON","stringify","replace","obj","id","identity","zero","one","truthy","falsy","Array","exp","sign","Math","log","symlog","log1p","abs","symexp","expm1","pow","exponent","ascending","u","v","Date","comparator","orders","compare1","compareN","order","f","hasOwnProperty","NULL","defaultParser","parse","Debug","Error$1","Info","None","Warn","accessorName","clampRange","range","min","max","lo","hi","span","compare","ord","fmap","gen","DESCENDING","keys","constant","debounce","delay","handler","tid","e","clearTimeout","setTimeout","extent","extentIndex","fastmap","has$1","test","size","empty","undefined","set","delete","clear","clean","next","flush","threshold","left","right","center","t","l","r","inherits","child","parent","members","proto","create","defineProperty","writable","enumerable","configurable","inrange","r0","r1","isBoolean","isIterable","Symbol","iterator","isRegExp","flat","lerp","frac","logger","warn","info","debug","lruCache","maxsize","DEFAULT_MAX_SIZE","curr","prev","update","merge","array0","array1","n0","n1","merged","constructor","i0","i1","mergeConfig","configs","reduce","source","signals","layout","pad","padchar","align","ceil","panLinear","panLog","panPow","panSymlog","quarter","date","getMonth","stringValue","toBoolean","toDate","parser","toSet","truncate","ellipsis","utcquarter","getUTCMonth","visitArray","filter","visitor","zoomLinear","zoomLog","zoomPow","zoomSymlog"]
}
