{
"version":3,
"file":"module$node_modules$$tanstack$table_core$build$lib$utils$getFacetedRowModel.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,2EAAA,CAAgG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAaxIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,MAAQN,OAAA,CAAQ,0DAAR,CAAZ,CACIO,gBAAkBP,OAAA,CAAQ,0EAAR,CA4BtBE,QAAQM,CAAAA,kBAAR,CA1BAA,QAA2B,EAAG,CAC5B,MAAO,CAACC,KAAD,CAAQC,QAAR,CAAA,EAAqBJ,KAAMK,CAAAA,IAAN,CAAW,EAAA,EAAM,CAACF,KAAMG,CAAAA,sBAAN,EAAD,CAAiCH,KAAMI,CAAAA,QAAN,EAAiBC,CAAAA,aAAlD;AAAiEL,KAAMI,CAAAA,QAAN,EAAiBE,CAAAA,YAAlF,CAAgGN,KAAMO,CAAAA,mBAAN,EAAhG,CAAjB,CAA+I,CAACC,WAAD,CAAcH,aAAd,CAA6BC,YAA7B,CAAA,EAA8C,CACvN,GAAI,CAACE,WAAYC,CAAAA,IAAKC,CAAAA,MAAtB,EAAgC,EAAmB,IAAnB,EAAEL,aAAF,EAA2BA,aAAcK,CAAAA,MAAzC,EAAqDJ,YAArD,CAAhC,CACE,MAAOE,YAET,OAAMG,cAAgB,CAAC,GAAGN,aAAcO,CAAAA,GAAd,CAAkBC,CAAA,EAAKA,CAAEC,CAAAA,EAAzB,CAA6BC,CAAAA,MAA7B,CAAoCF,CAAA,EAAKA,CAAL,GAAWZ,QAA/C,CAAJ,CAA8DK,YAAA,CAAe,YAAf,CAA8BU,IAAAA,EAA5F,CAAuGD,CAAAA,MAAvG,CAA8GE,OAA9G,CAUtB,OAAOnB,gBAAgBoB,CAAAA,UAAhB,CAA2BV,WAAYC,CAAAA,IAAvC,CATgBU,GAAAC,EAAO,CAE5B,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBV,aAAcD,CAAAA,MAAlC,CAA0CW,CAAA,EAA1C,CACE,GAA4C,CAAA,CAA5C,GAAIF,GAAId,CAAAA,aAAJ,CAAkBM,aAAA,CAAcU,CAAd,CAAlB,CAAJ,CACE,MAAO,CAAA,CAGX,OAAO,CAAA,CAPqB,CASvB,CAA6DrB,KAA7D,CAdgN,CAA7L;AAezB,CACDsB,IAA+C,qBAA/CA,CAAuErB,QADtE,CAEDsB,MAAO,EAAAA,EAAM,CACX,IAAIC,qBACJ,OAA2D,KAApD,GAACA,qBAAD,CAAyBxB,KAAMyB,CAAAA,OAAQC,CAAAA,QAAvC,EAA2DF,qBAA3D,CAAmFxB,KAAMyB,CAAAA,OAAQE,CAAAA,UAF7F,CAFZ,CAMDC,SAAU,EAAAA,EAAM,EANf,CAfyB,CADA,CAlB0G;",
"sources":["node_modules/@tanstack/table-core/build/lib/utils/getFacetedRowModel.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$table_core$build$lib$utils$getFacetedRowModel\"] = function(global,require,module,exports) {\n/**\n * table-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('../utils.js');\nvar filterRowsUtils = require('./filterRowsUtils.js');\n\nfunction getFacetedRowModel() {\n  return (table, columnId) => utils.memo(() => [table.getPreFilteredRowModel(), table.getState().columnFilters, table.getState().globalFilter, table.getFilteredRowModel()], (preRowModel, columnFilters, globalFilter) => {\n    if (!preRowModel.rows.length || !(columnFilters != null && columnFilters.length) && !globalFilter) {\n      return preRowModel;\n    }\n    const filterableIds = [...columnFilters.map(d => d.id).filter(d => d !== columnId), globalFilter ? '__global__' : undefined].filter(Boolean);\n    const filterRowsImpl = row => {\n      // Horizontally filter rows through each column\n      for (let i = 0; i < filterableIds.length; i++) {\n        if (row.columnFilters[filterableIds[i]] === false) {\n          return false;\n        }\n      }\n      return true;\n    };\n    return filterRowsUtils.filterRows(preRowModel.rows, filterRowsImpl, table);\n  }, {\n    key: process.env.NODE_ENV === 'development' && 'getFacetedRowModel_' + columnId,\n    debug: () => {\n      var _table$options$debugA;\n      return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;\n    },\n    onChange: () => {}\n  });\n}\n\nexports.getFacetedRowModel = getFacetedRowModel;\n//# sourceMappingURL=getFacetedRowModel.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","filterRowsUtils","getFacetedRowModel","table","columnId","memo","getPreFilteredRowModel","getState","columnFilters","globalFilter","getFilteredRowModel","preRowModel","rows","length","filterableIds","map","d","id","filter","undefined","Boolean","filterRows","row","filterRowsImpl","i","key","debug","_table$options$debugA","options","debugAll","debugTable","onChange"]
}
