{"version":3,"sources":["kdlyticsgui/wealth.cljs"],"mappings":";AAUA,qCAAA,rCAAMA;AAAN,AACE,uBAAA,mFAAA,1GAACC;;AACD,WAAA,AAAAC,PAAMC,uBAAM,sDAAA,mFAAA,zIAACC;AAAb,AACE,AAACC,yGAAQF;;AADX,0GAAA,wDAAA,uBAAA,/FAEGG;;AAmBL,wCAAA,xCAAMC;AAAN,AACE,WAAA,PAAMJ;AAAN,AAAA,0GAAA,wDAAA,uBAAA,/FACGG,qJACA,+DAAA,UAAA,0BAAA,nGAACE,gFAAgC,cAAoBL","names":["kdlyticsgui.wealth/summary-display","re-frame.core/dispatch","cljs.core/deref","data","re_frame.core.subscribe","cljs.core.println","re-com.core/box","kdlyticsgui.wealth/projection-display","kdlyticsgui.guitools.element_box"],"sourcesContent":["(ns kdlyticsgui.wealth\r\n  (:require [kdlyticsgui.guitools :as gt]\r\n            [re-frame.core :as rf]\r\n            [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                                 single-dropdown hyperlink modal-panel alert-box throbber input-password selection-list md-circle-icon-button\r\n                                 input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n            )\r\n  )\r\n\r\n\r\n(defn summary-display []\r\n  (rf/dispatch [:get-positions-summary])\r\n  (let [data @(rf/subscribe [:positions-summary])]                                              ;@(rf/subscribe [:positions-summary])\r\n    (println data)\r\n    [box :class \"subbody rightelement\" :child\r\n     ;(gt/element-box \"summary\" \"100%\" (str \"Summary \") data\r\n     ;                []\r\n     ;                [[:> ReactTable\r\n     ;                  {:data           data\r\n     ;                   :columns        [{:Header \"Portfolio\" :accessor \"portfolio\" :width 90 :filterable true :filterMethod tables/text-filter-OR :Cell #((if rot13? t/rot13 identity) (gobj/get % \"value\"))}\r\n     ;                                    {:Header \"Balance\" :columns (mapv #(assoc % :filterable false) (mapv tables/risk-table-columns [:value :cash-pct]))}\r\n     ;\r\n     ;                                    ]\r\n     ;                   :showPagination false :pageSize (count @(rf/subscribe [:portfolios])) :getTrProps go-to-portfolio-risk :className \"-striped -highlight\"}]\r\n     ;                 ]\r\n     ;                )\r\n\r\n     \r\n\r\n     ]\r\n    ))\r\n\r\n\r\n(defn projection-display []\r\n  (let [data nil]                                              ;@(rf/subscribe [:summary-display/table])\r\n    [box :class \"subbody rightelement\" :child\r\n     (gt/element-box \"summary\" \"100%\" (str \"Projection \") data\r\n                     []\r\n                     ;[[:> ReactTable\r\n                     ;  {:data           data\r\n                     ;   :columns        [{:Header \"Portfolio\" :accessor \"portfolio\" :width 90 :filterable true :filterMethod tables/text-filter-OR :Cell #((if rot13? t/rot13 identity) (gobj/get % \"value\"))}\r\n                     ;                    {:Header \"Balance\" :columns (mapv #(assoc % :filterable false) (mapv tables/risk-table-columns [:value :cash-pct]))}\r\n                     ;\r\n                     ;                    ]\r\n                     ;   :showPagination false :pageSize (count @(rf/subscribe [:portfolios])) :getTrProps go-to-portfolio-risk :className \"-striped -highlight\"}]\r\n                     ; ]\r\n                     )\r\n     ]\r\n    ))"]}