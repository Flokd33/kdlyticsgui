shadow$provide.module$node_modules$$tanstack$table_core$build$lib$core$headers=function(global,require,module,exports){function createHeader(table,column,options){var _options$id;let header={id:null!=(_options$id=options.id)?_options$id:column.id,column,index:options.index,isPlaceholder:!!options.isPlaceholder,placeholderId:options.placeholderId,depth:options.depth,subHeaders:[],colSpan:0,rowSpan:0,headerGroup:null,getLeafHeaders:()=>{const leafHeaders=[],recurseHeader=h=>{h.subHeaders&&h.subHeaders.length&&
h.subHeaders.map(recurseHeader);leafHeaders.push(h)};recurseHeader(header);return leafHeaders},getContext:()=>({table,header,column})};table._features.forEach(feature=>{Object.assign(header,null==feature.createHeader?void 0:feature.createHeader(header,table))});return header}function buildHeaderGroups(allColumns,columnsToGroup,table,headerFamily){var _headerGroups$0$heade,_headerGroups$;let maxDepth=0;const findMaxDepth=function(columns,depth){void 0===depth&&(depth=1);maxDepth=Math.max(maxDepth,
depth);columns.filter(column=>column.getIsVisible()).forEach(column=>{var _column$columns;null!=(_column$columns=column.columns)&&_column$columns.length&&findMaxDepth(column.columns,depth+1)},0)};findMaxDepth(allColumns);let headerGroups=[];const createHeaderGroup=(headersToGroup,depth)=>{const headerGroup={depth,id:[headerFamily,`${depth}`].filter(Boolean).join("_"),headers:[]},pendingParentHeaders=[];headersToGroup.forEach(headerToGroup=>{var latestPendingParentHeader=[...pendingParentHeaders].reverse()[0];
let column,isPlaceholder=!1;headerToGroup.column.depth===headerGroup.depth&&headerToGroup.column.parent?column=headerToGroup.column.parent:(column=headerToGroup.column,isPlaceholder=!0);latestPendingParentHeader&&(null==latestPendingParentHeader?void 0:latestPendingParentHeader.column)===column?latestPendingParentHeader.subHeaders.push(headerToGroup):(latestPendingParentHeader=createHeader(table,column,{id:[headerFamily,depth,column.id,null==headerToGroup?void 0:headerToGroup.id].filter(Boolean).join("_"),
isPlaceholder,placeholderId:isPlaceholder?`${pendingParentHeaders.filter(d=>d.column===column).length}`:void 0,depth,index:pendingParentHeaders.length}),latestPendingParentHeader.subHeaders.push(headerToGroup),pendingParentHeaders.push(latestPendingParentHeader));headerGroup.headers.push(headerToGroup);headerToGroup.headerGroup=headerGroup});headerGroups.push(headerGroup);0<depth&&createHeaderGroup(pendingParentHeaders,depth-1)};allColumns=columnsToGroup.map((column,index)=>createHeader(table,column,
{depth:maxDepth,index}));createHeaderGroup(allColumns,maxDepth-1);headerGroups.reverse();const recurseHeadersForSpans=headers=>headers.filter(header=>header.column.getIsVisible()).map(header=>{let colSpan=0,rowSpan=0,childRowSpans=[0];header.subHeaders&&header.subHeaders.length?(childRowSpans=[],recurseHeadersForSpans(header.subHeaders).forEach(_ref=>{let {colSpan:childColSpan,rowSpan:childRowSpan}=_ref;colSpan+=childColSpan;childRowSpans.push(childRowSpan)})):colSpan=1;const minChildRowSpan=Math.min(...childRowSpans);
rowSpan+=minChildRowSpan;header.colSpan=colSpan;header.rowSpan=rowSpan;return{colSpan,rowSpan}});recurseHeadersForSpans(null!=(_headerGroups$0$heade=null==(_headerGroups$=headerGroups[0])?void 0:_headerGroups$.headers)?_headerGroups$0$heade:[]);return headerGroups}Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$tanstack$table_core$build$lib$utils");exports.Headers={createTable:table=>({getHeaderGroups:utils.memo(()=>[table.getAllColumns(),table.getVisibleLeafColumns(),
table.getState().columnPinning.left,table.getState().columnPinning.right],(allColumns,leafColumns,left,right)=>{var _left$map$filter,_right$map$filter;const leftColumns=null!=(_left$map$filter=null==left?void 0:left.map(columnId=>leafColumns.find(d=>d.id===columnId)).filter(Boolean))?_left$map$filter:[];_left$map$filter=null!=(_right$map$filter=null==right?void 0:right.map(columnId=>leafColumns.find(d=>d.id===columnId)).filter(Boolean))?_right$map$filter:[];_right$map$filter=leafColumns.filter(column=>
!(null!=left&&left.includes(column.id))&&!(null!=right&&right.includes(column.id)));return buildHeaderGroups(allColumns,[...leftColumns,..._right$map$filter,..._left$map$filter],table)},{key:"getHeaderGroups",debug:()=>{var _table$options$debugA;return null!=(_table$options$debugA=table.options.debugAll)?_table$options$debugA:table.options.debugHeaders}}),getCenterHeaderGroups:utils.memo(()=>[table.getAllColumns(),table.getVisibleLeafColumns(),table.getState().columnPinning.left,table.getState().columnPinning.right],
(allColumns,leafColumns,left,right)=>{leafColumns=leafColumns.filter(column=>!(null!=left&&left.includes(column.id))&&!(null!=right&&right.includes(column.id)));return buildHeaderGroups(allColumns,leafColumns,table,"center")},{key:"getCenterHeaderGroups",debug:()=>{var _table$options$debugA2;return null!=(_table$options$debugA2=table.options.debugAll)?_table$options$debugA2:table.options.debugHeaders}}),getLeftHeaderGroups:utils.memo(()=>[table.getAllColumns(),table.getVisibleLeafColumns(),table.getState().columnPinning.left],
(allColumns,leafColumns,left)=>{var _left$map$filter2;left=null!=(_left$map$filter2=null==left?void 0:left.map(columnId=>leafColumns.find(d=>d.id===columnId)).filter(Boolean))?_left$map$filter2:[];return buildHeaderGroups(allColumns,left,table,"left")},{key:"getLeftHeaderGroups",debug:()=>{var _table$options$debugA3;return null!=(_table$options$debugA3=table.options.debugAll)?_table$options$debugA3:table.options.debugHeaders}}),getRightHeaderGroups:utils.memo(()=>[table.getAllColumns(),table.getVisibleLeafColumns(),
table.getState().columnPinning.right],(allColumns,leafColumns,right)=>{var _right$map$filter2;right=null!=(_right$map$filter2=null==right?void 0:right.map(columnId=>leafColumns.find(d=>d.id===columnId)).filter(Boolean))?_right$map$filter2:[];return buildHeaderGroups(allColumns,right,table,"right")},{key:"getRightHeaderGroups",debug:()=>{var _table$options$debugA4;return null!=(_table$options$debugA4=table.options.debugAll)?_table$options$debugA4:table.options.debugHeaders}}),getFooterGroups:utils.memo(()=>
[table.getHeaderGroups()],headerGroups=>[...headerGroups].reverse(),{key:"getFooterGroups",debug:()=>{var _table$options$debugA5;return null!=(_table$options$debugA5=table.options.debugAll)?_table$options$debugA5:table.options.debugHeaders}}),getLeftFooterGroups:utils.memo(()=>[table.getLeftHeaderGroups()],headerGroups=>[...headerGroups].reverse(),{key:"getLeftFooterGroups",debug:()=>{var _table$options$debugA6;return null!=(_table$options$debugA6=table.options.debugAll)?_table$options$debugA6:table.options.debugHeaders}}),
getCenterFooterGroups:utils.memo(()=>[table.getCenterHeaderGroups()],headerGroups=>[...headerGroups].reverse(),{key:"getCenterFooterGroups",debug:()=>{var _table$options$debugA7;return null!=(_table$options$debugA7=table.options.debugAll)?_table$options$debugA7:table.options.debugHeaders}}),getRightFooterGroups:utils.memo(()=>[table.getRightHeaderGroups()],headerGroups=>[...headerGroups].reverse(),{key:"getRightFooterGroups",debug:()=>{var _table$options$debugA8;return null!=(_table$options$debugA8=
table.options.debugAll)?_table$options$debugA8:table.options.debugHeaders}}),getFlatHeaders:utils.memo(()=>[table.getHeaderGroups()],headerGroups=>headerGroups.map(headerGroup=>headerGroup.headers).flat(),{key:"getFlatHeaders",debug:()=>{var _table$options$debugA9;return null!=(_table$options$debugA9=table.options.debugAll)?_table$options$debugA9:table.options.debugHeaders}}),getLeftFlatHeaders:utils.memo(()=>[table.getLeftHeaderGroups()],left=>left.map(headerGroup=>headerGroup.headers).flat(),{key:"getLeftFlatHeaders",
debug:()=>{var _table$options$debugA10;return null!=(_table$options$debugA10=table.options.debugAll)?_table$options$debugA10:table.options.debugHeaders}}),getCenterFlatHeaders:utils.memo(()=>[table.getCenterHeaderGroups()],left=>left.map(headerGroup=>headerGroup.headers).flat(),{key:"getCenterFlatHeaders",debug:()=>{var _table$options$debugA11;return null!=(_table$options$debugA11=table.options.debugAll)?_table$options$debugA11:table.options.debugHeaders}}),getRightFlatHeaders:utils.memo(()=>[table.getRightHeaderGroups()],
left=>left.map(headerGroup=>headerGroup.headers).flat(),{key:"getRightFlatHeaders",debug:()=>{var _table$options$debugA12;return null!=(_table$options$debugA12=table.options.debugAll)?_table$options$debugA12:table.options.debugHeaders}}),getCenterLeafHeaders:utils.memo(()=>[table.getCenterFlatHeaders()],flatHeaders=>flatHeaders.filter(header=>{var _header$subHeaders;return!(null!=(_header$subHeaders=header.subHeaders)&&_header$subHeaders.length)}),{key:"getCenterLeafHeaders",debug:()=>{var _table$options$debugA13;
return null!=(_table$options$debugA13=table.options.debugAll)?_table$options$debugA13:table.options.debugHeaders}}),getLeftLeafHeaders:utils.memo(()=>[table.getLeftFlatHeaders()],flatHeaders=>flatHeaders.filter(header=>{var _header$subHeaders2;return!(null!=(_header$subHeaders2=header.subHeaders)&&_header$subHeaders2.length)}),{key:"getLeftLeafHeaders",debug:()=>{var _table$options$debugA14;return null!=(_table$options$debugA14=table.options.debugAll)?_table$options$debugA14:table.options.debugHeaders}}),
getRightLeafHeaders:utils.memo(()=>[table.getRightFlatHeaders()],flatHeaders=>flatHeaders.filter(header=>{var _header$subHeaders3;return!(null!=(_header$subHeaders3=header.subHeaders)&&_header$subHeaders3.length)}),{key:"getRightLeafHeaders",debug:()=>{var _table$options$debugA15;return null!=(_table$options$debugA15=table.options.debugAll)?_table$options$debugA15:table.options.debugHeaders}}),getLeafHeaders:utils.memo(()=>[table.getLeftHeaderGroups(),table.getCenterHeaderGroups(),table.getRightHeaderGroups()],
(left,center,right)=>{var _left$0$headers,_left$,_center$0$headers,_center$,_right$0$headers,_right$;return[...(null!=(_left$0$headers=null==(_left$=left[0])?void 0:_left$.headers)?_left$0$headers:[]),...(null!=(_center$0$headers=null==(_center$=center[0])?void 0:_center$.headers)?_center$0$headers:[]),...(null!=(_right$0$headers=null==(_right$=right[0])?void 0:_right$.headers)?_right$0$headers:[])].map(header=>header.getLeafHeaders()).flat()},{key:"getLeafHeaders",debug:()=>{var _table$options$debugA16;
return null!=(_table$options$debugA16=table.options.debugAll)?_table$options$debugA16:table.options.debugHeaders}})})};exports.buildHeaderGroups=buildHeaderGroups}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$core$headers.js.map
