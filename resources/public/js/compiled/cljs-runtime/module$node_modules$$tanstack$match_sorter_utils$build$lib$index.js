shadow$provide.module$node_modules$$tanstack$match_sorter_utils$build$lib$index=function(global,require,module,exports){function getMatchRanking(testString,stringToRank,options){testString=prepareValueForComparison(testString,options);stringToRank=prepareValueForComparison(stringToRank,options);if(stringToRank.length>testString.length)return rankings.NO_MATCH;if(testString===stringToRank)return rankings.CASE_SENSITIVE_EQUAL;testString=testString.toLowerCase();stringToRank=stringToRank.toLowerCase();
return testString===stringToRank?rankings.EQUAL:testString.startsWith(stringToRank)?rankings.STARTS_WITH:testString.includes(` ${stringToRank}`)?rankings.WORD_STARTS_WITH:testString.includes(stringToRank)?rankings.CONTAINS:1===stringToRank.length?rankings.NO_MATCH:getAcronym(testString).includes(stringToRank)?rankings.ACRONYM:getClosenessRanking(testString,stringToRank)}function getAcronym(string){let acronym="";string.split(" ").forEach(wordInString=>{wordInString.split("-").forEach(splitByHyphenWord=>
{acronym+=splitByHyphenWord.substr(0,1)})});return acronym}function getClosenessRanking(testString,stringToRank){function findMatchingCharacter(matchChar,string,index){for(let j=index,J=string.length;j<J;j++)if(string[j]===matchChar)return matchingInOrderCharCount+=1,j+1;return-1}let matchingInOrderCharCount=0,charNumber=0;const firstIndex=findMatchingCharacter(stringToRank[0],testString,0);if(0>firstIndex)return rankings.NO_MATCH;charNumber=firstIndex;for(let i=1,I=stringToRank.length;i<I;i++)if(charNumber=
findMatchingCharacter(stringToRank[i],testString,charNumber),!(-1<charNumber))return rankings.NO_MATCH;return rankings.MATCHES+matchingInOrderCharCount/stringToRank.length*(1/(charNumber-firstIndex))}function prepareValueForComparison(value,_ref){({keepDiacritics:_ref}=_ref);value=`${value}`;_ref||(value=removeAccents.removeAccents(value));return value}Object.defineProperty(exports,"__esModule",{value:!0});var removeAccents=require("module$node_modules$$tanstack$match_sorter_utils$build$lib$remove_accents");
const rankings={CASE_SENSITIVE_EQUAL:7,EQUAL:6,STARTS_WITH:5,WORD_STARTS_WITH:4,CONTAINS:3,ACRONYM:2,MATCHES:1,NO_MATCH:0},defaultKeyAttributes={maxRanking:Infinity,minRanking:-Infinity};exports.compareItems=function(a,b){return a.rank===b.rank?0:a.rank>b.rank?-1:1};exports.rankItem=function(item,value,options){var _options$threshold;options=options||{};options.threshold=null!=(_options$threshold=options.threshold)?_options$threshold:rankings.MATCHES;if(!options.accessors)return value=getMatchRanking(item,
value,options),{rankedValue:item,rank:value,accessorIndex:-1,accessorThreshold:options.threshold,passed:value>=options.threshold};var accessors=options.accessors;_options$threshold=[];for(let j=0,J=accessors.length;j<J;j++){var accessor=accessors[j],attributes="function"===typeof accessor?defaultKeyAttributes:Object.assign({},defaultKeyAttributes,accessor);let accessorFn=accessor;"object"===typeof accessor&&(accessorFn=accessor.accessor);accessor=accessorFn(item);accessor=null==accessor?[]:Array.isArray(accessor)?
accessor:[String(accessor)];for(let i=0,I=accessor.length;i<I;i++)_options$threshold.push({itemValue:accessor[i],attributes})}item={rankedValue:item,rank:rankings.NO_MATCH,accessorIndex:-1,accessorThreshold:options.threshold,passed:!1};for(accessors=0;accessors<_options$threshold.length;accessors++){attributes=_options$threshold[accessors];accessor=getMatchRanking(attributes.itemValue,value,options);const {minRanking,maxRanking,threshold=options.threshold}=attributes.attributes;accessor<minRanking&&
accessor>=rankings.MATCHES?accessor=minRanking:accessor>maxRanking&&(accessor=maxRanking);accessor=Math.min(accessor,maxRanking);accessor>=threshold&&accessor>item.rank&&(item.rank=accessor,item.passed=!0,item.accessorIndex=accessors,item.accessorThreshold=threshold,item.rankedValue=attributes.itemValue)}return item};exports.rankings=rankings}
//# sourceMappingURL=module$node_modules$$tanstack$match_sorter_utils$build$lib$index.js.map
