{
"version":3,
"file":"module$node_modules$vega_projection$build$vega_projection.js",
"lineCount":94,
"mappings":"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",
"sources":["node_modules/vega-projection/build/vega-projection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_projection$build$vega_projection\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-scale')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-scale'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega));\n})(this, (function (exports, vegaScale) { 'use strict';\n\n  // https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\n  class Adder {\n    constructor() {\n      this._partials = new Float64Array(32);\n      this._n = 0;\n    }\n    add(x) {\n      const p = this._partials;\n      let i = 0;\n      for (let j = 0; j < this._n && j < 32; j++) {\n        const y = p[j],\n          hi = x + y,\n          lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n        if (lo) p[i++] = lo;\n        x = hi;\n      }\n      p[i] = x;\n      this._n = i + 1;\n      return this;\n    }\n    valueOf() {\n      const p = this._partials;\n      let n = this._n,\n        x,\n        y,\n        lo,\n        hi = 0;\n      if (n > 0) {\n        hi = p[--n];\n        while (n > 0) {\n          x = hi;\n          y = p[--n];\n          hi = x + y;\n          lo = y - (hi - x);\n          if (lo) break;\n        }\n        if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n          y = lo * 2;\n          x = hi + y;\n          if (y == x - hi) hi = x;\n        }\n      }\n      return hi;\n    }\n  }\n\n  function* flatten(arrays) {\n    for (const array of arrays) {\n      yield* array;\n    }\n  }\n  function merge(arrays) {\n    return Array.from(flatten(arrays));\n  }\n\n  var epsilon$1 = 1e-6;\n  var epsilon2 = 1e-12;\n  var pi$1 = Math.PI;\n  var halfPi$1 = pi$1 / 2;\n  var quarterPi = pi$1 / 4;\n  var tau = pi$1 * 2;\n  var degrees = 180 / pi$1;\n  var radians = pi$1 / 180;\n  var abs$1 = Math.abs;\n  var atan = Math.atan;\n  var atan2 = Math.atan2;\n  var cos$1 = Math.cos;\n  var exp = Math.exp;\n  var log = Math.log;\n  var pow = Math.pow;\n  var sin$1 = Math.sin;\n  var sign = Math.sign || function (x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  };\n  var sqrt$1 = Math.sqrt;\n  var tan = Math.tan;\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? pi$1 : Math.acos(x);\n  }\n  function asin$1(x) {\n    return x > 1 ? halfPi$1 : x < -1 ? -halfPi$1 : Math.asin(x);\n  }\n\n  function noop() {}\n\n  function streamGeometry(geometry, stream) {\n    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n      streamGeometryType[geometry.type](geometry, stream);\n    }\n  }\n  var streamObjectType = {\n    Feature: function (object, stream) {\n      streamGeometry(object.geometry, stream);\n    },\n    FeatureCollection: function (object, stream) {\n      var features = object.features,\n        i = -1,\n        n = features.length;\n      while (++i < n) streamGeometry(features[i].geometry, stream);\n    }\n  };\n  var streamGeometryType = {\n    Sphere: function (object, stream) {\n      stream.sphere();\n    },\n    Point: function (object, stream) {\n      object = object.coordinates;\n      stream.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function (object, stream) {\n      var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    },\n    LineString: function (object, stream) {\n      streamLine(object.coordinates, stream, 0);\n    },\n    MultiLineString: function (object, stream) {\n      var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n      while (++i < n) streamLine(coordinates[i], stream, 0);\n    },\n    Polygon: function (object, stream) {\n      streamPolygon(object.coordinates, stream);\n    },\n    MultiPolygon: function (object, stream) {\n      var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n      while (++i < n) streamPolygon(coordinates[i], stream);\n    },\n    GeometryCollection: function (object, stream) {\n      var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n      while (++i < n) streamGeometry(geometries[i], stream);\n    }\n  };\n  function streamLine(coordinates, stream, closed) {\n    var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n    stream.lineStart();\n    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n    stream.lineEnd();\n  }\n  function streamPolygon(coordinates, stream) {\n    var i = -1,\n      n = coordinates.length;\n    stream.polygonStart();\n    while (++i < n) streamLine(coordinates[i], stream, 1);\n    stream.polygonEnd();\n  }\n  function geoStream (object, stream) {\n    if (object && streamObjectType.hasOwnProperty(object.type)) {\n      streamObjectType[object.type](object, stream);\n    } else {\n      streamGeometry(object, stream);\n    }\n  }\n\n  function spherical(cartesian) {\n    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n  }\n  function cartesian(spherical) {\n    var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos$1(phi);\n    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n  }\n  function cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  // TODO return a\n  function cartesianAddInPlace(a, b) {\n    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n  }\n  function cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  // TODO return d\n  function cartesianNormalizeInPlace(d) {\n    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l, d[1] /= l, d[2] /= l;\n  }\n\n  function compose (a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function rotationIdentity(lambda, phi) {\n    if (abs$1(lambda) > pi$1) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  }\n  rotationIdentity.invert = rotationIdentity;\n  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n    return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n  }\n  function forwardRotationLambda(deltaLambda) {\n    return function (lambda, phi) {\n      lambda += deltaLambda;\n      if (abs$1(lambda) > pi$1) lambda -= Math.round(lambda / tau) * tau;\n      return [lambda, phi];\n    };\n  }\n  function rotationLambda(deltaLambda) {\n    var rotation = forwardRotationLambda(deltaLambda);\n    rotation.invert = forwardRotationLambda(-deltaLambda);\n    return rotation;\n  }\n  function rotationPhiGamma(deltaPhi, deltaGamma) {\n    var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n    function rotation(lambda, phi) {\n      var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n      return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin$1(k * cosDeltaGamma + y * sinDeltaGamma)];\n    }\n    rotation.invert = function (lambda, phi) {\n      var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n      return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin$1(k * cosDeltaPhi - x * sinDeltaPhi)];\n    };\n    return rotation;\n  }\n  function rotation (rotate) {\n    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n    }\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n    };\n    return forward;\n  }\n\n  // Generates a circle centered at [0\u00b0, 0\u00b0], with a given radius and precision.\n  function circleStream(stream, radius, delta, direction, t0, t1) {\n    if (!delta) return;\n    var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n    if (t0 == null) {\n      t0 = radius + direction * tau;\n      t1 = radius - step / 2;\n    } else {\n      t0 = circleRadius(cosRadius, t0);\n      t1 = circleRadius(cosRadius, t1);\n      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n    }\n    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n      stream.point(point[0], point[1]);\n    }\n  }\n\n  // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n  function circleRadius(cosRadius, point) {\n    point = cartesian(point), point[0] -= cosRadius;\n    cartesianNormalizeInPlace(point);\n    var radius = acos(-point[1]);\n    return ((-point[2] < 0 ? -radius : radius) + tau - epsilon$1) % tau;\n  }\n\n  function clipBuffer () {\n    var lines = [],\n      line;\n    return {\n      point: function (x, y, m) {\n        line.push([x, y, m]);\n      },\n      lineStart: function () {\n        lines.push(line = []);\n      },\n      lineEnd: noop,\n      rejoin: function () {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      },\n      result: function () {\n        var result = lines;\n        lines = [];\n        line = null;\n        return result;\n      }\n    };\n  }\n\n  function pointEqual (a, b) {\n    return abs$1(a[0] - b[0]) < epsilon$1 && abs$1(a[1] - b[1]) < epsilon$1;\n  }\n\n  function Intersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other; // another intersection\n    this.e = entry; // is an entry?\n    this.v = false; // visited\n    this.n = this.p = null; // next & previous\n  }\n\n  // A generalized polygon clipping algorithm: given a polygon that has been cut\n  // into its visible line segments, and rejoins the segments by interpolating\n  // along the clip edge.\n  function clipRejoin (segments, compareIntersection, startInside, interpolate, stream) {\n    var subject = [],\n      clip = [],\n      i,\n      n;\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x;\n      if (pointEqual(p0, p1)) {\n        if (!p0[2] && !p1[2]) {\n          stream.lineStart();\n          for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n          stream.lineEnd();\n          return;\n        }\n        // handle degenerate cases by moving the point\n        p1[0] += 2 * epsilon$1;\n      }\n      subject.push(x = new Intersection(p0, segment, null, true));\n      clip.push(x.o = new Intersection(p0, null, x, false));\n      subject.push(x = new Intersection(p1, segment, null, false));\n      clip.push(x.o = new Intersection(p1, null, x, true));\n    });\n    if (!subject.length) return;\n    clip.sort(compareIntersection);\n    link(subject);\n    link(clip);\n    for (i = 0, n = clip.length; i < n; ++i) {\n      clip[i].e = startInside = !startInside;\n    }\n    var start = subject[0],\n      points,\n      point;\n    while (1) {\n      // Find first unvisited intersection.\n      var current = start,\n        isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      stream.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, stream);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, stream);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      stream.lineEnd();\n    }\n  }\n  function link(array) {\n    if (!(n = array.length)) return;\n    var n,\n      i = 0,\n      a = array[0],\n      b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function longitude(point) {\n    return abs$1(point[0]) <= pi$1 ? point[0] : sign(point[0]) * ((abs$1(point[0]) + pi$1) % tau - pi$1);\n  }\n  function polygonContains (polygon, point) {\n    var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin$1(phi),\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n    var sum = new Adder();\n    if (sinPhi === 1) phi = halfPi$1 + epsilon$1;else if (sinPhi === -1) phi = -halfPi$1 - epsilon$1;\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      if (!(m = (ring = polygon[i]).length)) continue;\n      var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n        var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi$1,\n          k = sinPhi0 * sinPhi1;\n        sum.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n        angle += antimeridian ? delta + sign * tau : delta;\n\n        // Are the longitudes either side of the point\u2019s meridian (lambda),\n        // and are the latitudes smaller than the parallel (phi)?\n        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n          cartesianNormalizeInPlace(arc);\n          var intersection = cartesianCross(normal, arc);\n          cartesianNormalizeInPlace(intersection);\n          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n          }\n        }\n      }\n    }\n\n    // First, determine whether the South pole is inside or outside:\n    //\n    // It is inside if:\n    // * the polygon winds around it in a clockwise direction.\n    // * the polygon does not (cumulatively) wind around it, but has a negative\n    //   (counter-clockwise) area.\n    //\n    // Second, count the (signed) number of times a segment crosses a lambda\n    // from the point to the South pole.  If it is zero, then the point is the\n    // same side as the South pole.\n\n    return (angle < -epsilon$1 || angle < epsilon$1 && sum < -epsilon2) ^ winding & 1;\n  }\n\n  function clip (pointVisible, clipLine, interpolate, start) {\n    return function (sink) {\n      var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function () {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function () {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = merge(segments);\n          var startInside = polygonContains(polygon, start);\n          if (segments.length) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n          } else if (startInside) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            interpolate(null, null, 1, sink);\n            sink.lineEnd();\n          }\n          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function () {\n          sink.polygonStart();\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n          sink.polygonEnd();\n        }\n      };\n      function point(lambda, phi) {\n        if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n      }\n      function pointLine(lambda, phi) {\n        line.point(lambda, phi);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      function pointRing(lambda, phi) {\n        ring.push([lambda, phi]);\n        ringSink.point(lambda, phi);\n      }\n      function ringStart() {\n        ringSink.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringSink.lineEnd();\n        var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        // No intersections.\n        if (clean & 1) {\n          segment = ringSegments[0];\n          if ((m = segment.length - 1) > 0) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n            sink.lineEnd();\n          }\n          return;\n        }\n\n        // Rejoin connected segments.\n        // TODO reuse ringBuffer.rejoin()?\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(validSegment));\n      }\n      return clip;\n    };\n  }\n  function validSegment(segment) {\n    return segment.length > 1;\n  }\n\n  // Intersections are sorted along the clip edge. For both antimeridian cutting\n  // and circle clipping, the same comparison is used.\n  function compareIntersection(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfPi$1 - epsilon$1 : halfPi$1 - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi$1 - epsilon$1 : halfPi$1 - b[1]);\n  }\n\n  var clipAntimeridian = clip(function () {\n    return true;\n  }, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi$1, -halfPi$1]);\n\n  // Takes a line and cuts into visible segments. Return values: 0 - there were\n  // intersections or the line was empty; 1 - no intersections; 2 - there were\n  // intersections, and the first and last segments should be rejoined.\n  function clipAntimeridianLine(stream) {\n    var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n    return {\n      lineStart: function () {\n        stream.lineStart();\n        clean = 1;\n      },\n      point: function (lambda1, phi1) {\n        var sign1 = lambda1 > 0 ? pi$1 : -pi$1,\n          delta = abs$1(lambda1 - lambda0);\n        if (abs$1(delta - pi$1) < epsilon$1) {\n          // line crosses a pole\n          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$1 : -halfPi$1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          stream.point(lambda1, phi0);\n          clean = 0;\n        } else if (sign0 !== sign1 && delta >= pi$1) {\n          // line crosses antimeridian\n          if (abs$1(lambda0 - sign0) < epsilon$1) lambda0 -= sign0 * epsilon$1; // handle degeneracies\n          if (abs$1(lambda1 - sign1) < epsilon$1) lambda1 -= sign1 * epsilon$1;\n          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          clean = 0;\n        }\n        stream.point(lambda0 = lambda1, phi0 = phi1);\n        sign0 = sign1;\n      },\n      lineEnd: function () {\n        stream.lineEnd();\n        lambda0 = phi0 = NaN;\n      },\n      clean: function () {\n        return 2 - clean; // if intersections, rejoin first and last segments\n      }\n    };\n  }\n\n  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n    var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n    return abs$1(sinLambda0Lambda1) > epsilon$1 ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1) - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n  }\n  function clipAntimeridianInterpolate(from, to, direction, stream) {\n    var phi;\n    if (from == null) {\n      phi = direction * halfPi$1;\n      stream.point(-pi$1, phi);\n      stream.point(0, phi);\n      stream.point(pi$1, phi);\n      stream.point(pi$1, 0);\n      stream.point(pi$1, -phi);\n      stream.point(0, -phi);\n      stream.point(-pi$1, -phi);\n      stream.point(-pi$1, 0);\n      stream.point(-pi$1, phi);\n    } else if (abs$1(from[0] - to[0]) > epsilon$1) {\n      var lambda = from[0] < to[0] ? pi$1 : -pi$1;\n      phi = direction * lambda / 2;\n      stream.point(-lambda, phi);\n      stream.point(0, phi);\n      stream.point(lambda, phi);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function clipCircle (radius) {\n    var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs$1(cr) > epsilon$1; // TODO optimise for this common case\n\n    function interpolate(from, to, direction, stream) {\n      circleStream(stream, radius, delta, direction, from, to);\n    }\n    function visible(lambda, phi) {\n      return cos$1(lambda) * cos$1(phi) > cr;\n    }\n\n    // Takes a line and cuts into visible segments. Return values used for polygon\n    // clipping: 0 - there were intersections or the line was empty; 1 - no\n    // intersections 2 - there were intersections, and the first and last segments\n    // should be rejoined.\n    function clipLine(stream) {\n      var point0,\n        // previous point\n        c0,\n        // code for previous point\n        v0,\n        // visibility of previous point\n        v00,\n        // visibility of first point\n        clean; // no intersections\n      return {\n        lineStart: function () {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function (lambda, phi) {\n          var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi$1 : -pi$1), phi) : 0;\n          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) point1[2] = 1;\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              // outside going in\n              stream.lineStart();\n              point2 = intersect(point1, point0);\n              stream.point(point2[0], point2[1]);\n            } else {\n              // inside going out\n              point2 = intersect(point0, point1);\n              stream.point(point2[0], point2[1], 2);\n              stream.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            // If the codes for two points are different, or are both zero,\n            // and there this segment intersects with the small circle.\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n              } else {\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1], 3);\n              }\n            }\n          }\n          if (v && (!point0 || !pointEqual(point0, point1))) {\n            stream.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function () {\n          if (v0) stream.lineEnd();\n          point0 = null;\n        },\n        // Rejoin first and last segments if there were intersections and the first\n        // and last points were visible.\n        clean: function () {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    // Intersects the great circle between a and b with the clip circle.\n    function intersect(a, b, two) {\n      var pa = cartesian(a),\n        pb = cartesian(b);\n\n      // We have two planes, n1.p = d1 and n2.p = d2.\n      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2a2f n2).\n      var n1 = [1, 0, 0],\n        // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n      // Two polar points.\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n      cartesianAddInPlace(A, B);\n\n      // Solve |p(t)|^2 = 1.\n      var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n      cartesianAddInPlace(q, A);\n      q = spherical(q);\n      if (!two) return q;\n\n      // Two intersection points.\n      var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n      var delta = lambda1 - lambda0,\n        polar = abs$1(delta - pi$1) < epsilon$1,\n        meridian = polar || delta < epsilon$1;\n      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n      // Check that the first point is between a and b.\n      if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs$1(q[0] - lambda0) < epsilon$1 ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi$1 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n        var q1 = cartesianScale(u, (-w + t) / uu);\n        cartesianAddInPlace(q1, A);\n        return [q, spherical(q1)];\n      }\n    }\n\n    // Generates a 4-bit vector representing the location of a point relative to\n    // the small circle's bounding box.\n    function code(lambda, phi) {\n      var r = smallRadius ? radius : pi$1 - radius,\n        code = 0;\n      if (lambda < -r) code |= 1; // left\n      else if (lambda > r) code |= 2; // right\n      if (phi < -r) code |= 4; // below\n      else if (phi > r) code |= 8; // above\n      return code;\n    }\n    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$1, radius - pi$1]);\n  }\n\n  function clipLine (a, b, x0, y0, x1, y1) {\n    var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n    return true;\n  }\n\n  var clipMax = 1e9,\n    clipMin = -clipMax;\n\n  // TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\n  function clipRectangle(x0, y0, x1, y1) {\n    function visible(x, y) {\n      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n    }\n    function interpolate(from, to, direction, stream) {\n      var a = 0,\n        a1 = 0;\n      if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);\n      } else {\n        stream.point(to[0], to[1]);\n      }\n    }\n    function corner(p, direction) {\n      return abs$1(p[0] - x0) < epsilon$1 ? direction > 0 ? 0 : 3 : abs$1(p[0] - x1) < epsilon$1 ? direction > 0 ? 2 : 1 : abs$1(p[1] - y0) < epsilon$1 ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n    }\n\n    function compareIntersection(a, b) {\n      return comparePoint(a.x, b.x);\n    }\n    function comparePoint(a, b) {\n      var ca = corner(a, 1),\n        cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n    return function (stream) {\n      var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n        x_,\n        y_,\n        v_,\n        // previous point\n        first,\n        clean;\n      var clipStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: polygonStart,\n        polygonEnd: polygonEnd\n      };\n      function point(x, y) {\n        if (visible(x, y)) activeStream.point(x, y);\n      }\n      function polygonInside() {\n        var winding = 0;\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n            if (a1 <= y1) {\n              if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n            } else {\n              if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n            }\n          }\n        }\n        return winding;\n      }\n\n      // Buffer geometry within a polygon and then clip it en masse.\n      function polygonStart() {\n        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n      }\n      function polygonEnd() {\n        var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n        if (cleanInside || visible) {\n          stream.polygonStart();\n          if (cleanInside) {\n            stream.lineStart();\n            interpolate(null, null, 1, stream);\n            stream.lineEnd();\n          }\n          if (visible) {\n            clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n          }\n          stream.polygonEnd();\n        }\n        activeStream = stream, segments = polygon = ring = null;\n      }\n      function lineStart() {\n        clipStream.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      // TODO rather than special-case polygons, simply handle them separately.\n      // Ideally, coincident intersection points should be jittered to avoid\n      // clipping issues.\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferStream.rejoin();\n          segments.push(bufferStream.result());\n        }\n        clipStream.point = point;\n        if (v_) activeStream.lineEnd();\n      }\n      function linePoint(x, y) {\n        var v = visible(x, y);\n        if (polygon) ring.push([x, y]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n          }\n        } else {\n          if (v && v_) activeStream.point(x, y);else {\n            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n            if (clipLine(a, b, x0, y0, x1, y1)) {\n              if (!v_) {\n                activeStream.lineStart();\n                activeStream.point(a[0], a[1]);\n              }\n              activeStream.point(b[0], b[1]);\n              if (!v) activeStream.lineEnd();\n              clean = false;\n            } else if (v) {\n              activeStream.lineStart();\n              activeStream.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clipStream;\n    };\n  }\n\n  var identity = (x => x);\n\n  var areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00$2,\n    y00$2,\n    x0$3,\n    y0$3;\n  var areaStream = {\n    point: noop,\n    lineStart: noop,\n    lineEnd: noop,\n    polygonStart: function () {\n      areaStream.lineStart = areaRingStart;\n      areaStream.lineEnd = areaRingEnd;\n    },\n    polygonEnd: function () {\n      areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n      areaSum.add(abs$1(areaRingSum));\n      areaRingSum = new Adder();\n    },\n    result: function () {\n      var area = areaSum / 2;\n      areaSum = new Adder();\n      return area;\n    }\n  };\n  function areaRingStart() {\n    areaStream.point = areaPointFirst;\n  }\n  function areaPointFirst(x, y) {\n    areaStream.point = areaPoint;\n    x00$2 = x0$3 = x, y00$2 = y0$3 = y;\n  }\n  function areaPoint(x, y) {\n    areaRingSum.add(y0$3 * x - x0$3 * y);\n    x0$3 = x, y0$3 = y;\n  }\n  function areaRingEnd() {\n    areaPoint(x00$2, y00$2);\n  }\n  var pathArea = areaStream;\n\n  var x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n  var boundsStream = {\n    point: boundsPoint,\n    lineStart: noop,\n    lineEnd: noop,\n    polygonStart: noop,\n    polygonEnd: noop,\n    result: function () {\n      var bounds = [[x0$2, y0$2], [x1, y1]];\n      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n      return bounds;\n    }\n  };\n  function boundsPoint(x, y) {\n    if (x < x0$2) x0$2 = x;\n    if (x > x1) x1 = x;\n    if (y < y0$2) y0$2 = y;\n    if (y > y1) y1 = y;\n  }\n  var boundsStream$1 = boundsStream;\n\n  // TODO Enforce positive area for exterior, negative area for interior?\n\n  var X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00$1,\n    y00$1,\n    x0$1,\n    y0$1;\n  var centroidStream = {\n    point: centroidPoint,\n    lineStart: centroidLineStart,\n    lineEnd: centroidLineEnd,\n    polygonStart: function () {\n      centroidStream.lineStart = centroidRingStart;\n      centroidStream.lineEnd = centroidRingEnd;\n    },\n    polygonEnd: function () {\n      centroidStream.point = centroidPoint;\n      centroidStream.lineStart = centroidLineStart;\n      centroidStream.lineEnd = centroidLineEnd;\n    },\n    result: function () {\n      var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n      X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n      return centroid;\n    }\n  };\n  function centroidPoint(x, y) {\n    X0 += x;\n    Y0 += y;\n    ++Z0;\n  }\n  function centroidLineStart() {\n    centroidStream.point = centroidPointFirstLine;\n  }\n  function centroidPointFirstLine(x, y) {\n    centroidStream.point = centroidPointLine;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n  function centroidPointLine(x, y) {\n    var dx = x - x0$1,\n      dy = y - y0$1,\n      z = sqrt$1(dx * dx + dy * dy);\n    X1 += z * (x0$1 + x) / 2;\n    Y1 += z * (y0$1 + y) / 2;\n    Z1 += z;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n  function centroidLineEnd() {\n    centroidStream.point = centroidPoint;\n  }\n  function centroidRingStart() {\n    centroidStream.point = centroidPointFirstRing;\n  }\n  function centroidRingEnd() {\n    centroidPointRing(x00$1, y00$1);\n  }\n  function centroidPointFirstRing(x, y) {\n    centroidStream.point = centroidPointRing;\n    centroidPoint(x00$1 = x0$1 = x, y00$1 = y0$1 = y);\n  }\n  function centroidPointRing(x, y) {\n    var dx = x - x0$1,\n      dy = y - y0$1,\n      z = sqrt$1(dx * dx + dy * dy);\n    X1 += z * (x0$1 + x) / 2;\n    Y1 += z * (y0$1 + y) / 2;\n    Z1 += z;\n    z = y0$1 * x - x0$1 * y;\n    X2 += z * (x0$1 + x);\n    Y2 += z * (y0$1 + y);\n    Z2 += z * 3;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n  var pathCentroid = centroidStream;\n\n  function PathContext(context) {\n    this._context = context;\n  }\n  PathContext.prototype = {\n    _radius: 4.5,\n    pointRadius: function (_) {\n      return this._radius = _, this;\n    },\n    polygonStart: function () {\n      this._line = 0;\n    },\n    polygonEnd: function () {\n      this._line = NaN;\n    },\n    lineStart: function () {\n      this._point = 0;\n    },\n    lineEnd: function () {\n      if (this._line === 0) this._context.closePath();\n      this._point = NaN;\n    },\n    point: function (x, y) {\n      switch (this._point) {\n        case 0:\n          {\n            this._context.moveTo(x, y);\n            this._point = 1;\n            break;\n          }\n        case 1:\n          {\n            this._context.lineTo(x, y);\n            break;\n          }\n        default:\n          {\n            this._context.moveTo(x + this._radius, y);\n            this._context.arc(x, y, this._radius, 0, tau);\n            break;\n          }\n      }\n    },\n    result: noop\n  };\n\n  var lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n  var lengthStream = {\n    point: noop,\n    lineStart: function () {\n      lengthStream.point = lengthPointFirst;\n    },\n    lineEnd: function () {\n      if (lengthRing) lengthPoint(x00, y00);\n      lengthStream.point = noop;\n    },\n    polygonStart: function () {\n      lengthRing = true;\n    },\n    polygonEnd: function () {\n      lengthRing = null;\n    },\n    result: function () {\n      var length = +lengthSum;\n      lengthSum = new Adder();\n      return length;\n    }\n  };\n  function lengthPointFirst(x, y) {\n    lengthStream.point = lengthPoint;\n    x00 = x0 = x, y00 = y0 = y;\n  }\n  function lengthPoint(x, y) {\n    x0 -= x, y0 -= y;\n    lengthSum.add(sqrt$1(x0 * x0 + y0 * y0));\n    x0 = x, y0 = y;\n  }\n  var pathMeasure = lengthStream;\n\n  // Simple caching for constant-radius points.\n  let cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n  class PathString {\n    constructor(digits) {\n      this._append = digits == null ? append : appendRound(digits);\n      this._radius = 4.5;\n      this._ = \"\";\n    }\n    pointRadius(_) {\n      this._radius = +_;\n      return this;\n    }\n    polygonStart() {\n      this._line = 0;\n    }\n    polygonEnd() {\n      this._line = NaN;\n    }\n    lineStart() {\n      this._point = 0;\n    }\n    lineEnd() {\n      if (this._line === 0) this._ += \"Z\";\n      this._point = NaN;\n    }\n    point(x, y) {\n      switch (this._point) {\n        case 0:\n          {\n            this._append`M${x},${y}`;\n            this._point = 1;\n            break;\n          }\n        case 1:\n          {\n            this._append`L${x},${y}`;\n            break;\n          }\n        default:\n          {\n            this._append`M${x},${y}`;\n            if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n              const r = this._radius;\n              const s = this._;\n              this._ = \"\"; // stash the old string so we can cache the circle path fragment\n              this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n              cacheRadius = r;\n              cacheAppend = this._append;\n              cacheCircle = this._;\n              this._ = s;\n            }\n            this._ += cacheCircle;\n            break;\n          }\n      }\n    }\n    result() {\n      const result = this._;\n      this._ = \"\";\n      return result.length ? result : null;\n    }\n  }\n  function append(strings) {\n    let i = 1;\n    this._ += strings[0];\n    for (const j = strings.length; i < j; ++i) {\n      this._ += arguments[i] + strings[i];\n    }\n  }\n  function appendRound(digits) {\n    const d = Math.floor(digits);\n    if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n    if (d > 15) return append;\n    if (d !== cacheDigits) {\n      const k = 10 ** d;\n      cacheDigits = d;\n      cacheAppend = function append(strings) {\n        let i = 1;\n        this._ += strings[0];\n        for (const j = strings.length; i < j; ++i) {\n          this._ += Math.round(arguments[i] * k) / k + strings[i];\n        }\n      };\n    }\n    return cacheAppend;\n  }\n\n  function geoPath (projection, context) {\n    let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        geoStream(object, projectionStream(contextStream));\n      }\n      return contextStream.result();\n    }\n    path.area = function (object) {\n      geoStream(object, projectionStream(pathArea));\n      return pathArea.result();\n    };\n    path.measure = function (object) {\n      geoStream(object, projectionStream(pathMeasure));\n      return pathMeasure.result();\n    };\n    path.bounds = function (object) {\n      geoStream(object, projectionStream(boundsStream$1));\n      return boundsStream$1.result();\n    };\n    path.centroid = function (object) {\n      geoStream(object, projectionStream(pathCentroid));\n      return pathCentroid.result();\n    };\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n      return path;\n    };\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return path;\n    };\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    path.digits = function (_) {\n      if (!arguments.length) return digits;\n      if (_ == null) digits = null;else {\n        const d = Math.floor(_);\n        if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n        digits = d;\n      }\n      if (context === null) contextStream = new PathString(digits);\n      return path;\n    };\n    return path.projection(projection).digits(digits).context(context);\n  }\n\n  function transformer(methods) {\n    return function (stream) {\n      var s = new TransformStream();\n      for (var key in methods) s[key] = methods[key];\n      s.stream = stream;\n      return s;\n    };\n  }\n  function TransformStream() {}\n  TransformStream.prototype = {\n    constructor: TransformStream,\n    point: function (x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function () {\n      this.stream.sphere();\n    },\n    lineStart: function () {\n      this.stream.lineStart();\n    },\n    lineEnd: function () {\n      this.stream.lineEnd();\n    },\n    polygonStart: function () {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function () {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function fit(projection, fitBounds, object) {\n    var clip = projection.clipExtent && projection.clipExtent();\n    projection.scale(150).translate([0, 0]);\n    if (clip != null) projection.clipExtent(null);\n    geoStream(object, projection.stream(boundsStream$1));\n    fitBounds(boundsStream$1.result());\n    if (clip != null) projection.clipExtent(clip);\n    return projection;\n  }\n  function fitExtent(projection, extent, object) {\n    return fit(projection, function (b) {\n      var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n  function fitSize(projection, size, object) {\n    return fitExtent(projection, [[0, 0], size], object);\n  }\n  function fitWidth(projection, width, object) {\n    return fit(projection, function (b) {\n      var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n  function fitHeight(projection, height, object) {\n    return fit(projection, function (b) {\n      var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n\n  var maxDepth = 16,\n    // maximum depth of subdivision\n    cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\n  function resample (project, delta2) {\n    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n  }\n  function resampleNone(project) {\n    return transformer({\n      point: function (x, y) {\n        x = project(x, y);\n        this.stream.point(x[0], x[1]);\n      }\n    });\n  }\n  function resample$1(project, delta2) {\n    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n      if (d2 > 4 * delta2 && depth--) {\n        var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs$1(abs$1(c) - 1) < epsilon$1 || abs$1(lambda0 - lambda1) < epsilon$1 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > delta2 // perpendicular projected distance\n        || abs$1((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n        || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          // angular distance\n          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    return function (stream) {\n      var lambda00, x00, y00, a00, b00, c00,\n        // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n      var resampleStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function () {\n          stream.polygonStart();\n          resampleStream.lineStart = ringStart;\n        },\n        polygonEnd: function () {\n          stream.polygonEnd();\n          resampleStream.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resampleStream.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(lambda, phi) {\n        var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resampleStream.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resampleStream.point = ringPoint;\n        resampleStream.lineEnd = ringEnd;\n      }\n      function ringPoint(lambda, phi) {\n        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resampleStream.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n        resampleStream.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resampleStream;\n    };\n  }\n\n  var transformRadians = transformer({\n    point: function (x, y) {\n      this.stream.point(x * radians, y * radians);\n    }\n  });\n  function transformRotate(rotate) {\n    return transformer({\n      point: function (x, y) {\n        var r = rotate(x, y);\n        return this.stream.point(r[0], r[1]);\n      }\n    });\n  }\n  function scaleTranslate(k, dx, dy, sx, sy) {\n    function transform(x, y) {\n      x *= sx;\n      y *= sy;\n      return [dx + k * x, dy - k * y];\n    }\n    transform.invert = function (x, y) {\n      return [(x - dx) / k * sx, (dy - y) / k * sy];\n    };\n    return transform;\n  }\n  function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n    if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n    var cosAlpha = cos$1(alpha),\n      sinAlpha = sin$1(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n    function transform(x, y) {\n      x *= sx;\n      y *= sy;\n      return [a * x - b * y + dx, dy - b * x - a * y];\n    }\n    transform.invert = function (x, y) {\n      return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n    };\n    return transform;\n  }\n  function projection$1(project) {\n    return projectionMutator(function () {\n      return project;\n    })();\n  }\n  function projectionMutator(projectAt) {\n    var project,\n      k = 150,\n      // scale\n      x = 480,\n      y = 250,\n      // translate\n      lambda = 0,\n      phi = 0,\n      // center\n      deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n      alpha = 0,\n      // post-rotate angle\n      sx = 1,\n      // reflectX\n      sy = 1,\n      // reflectX\n      theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n      x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n      delta2 = 0.5,\n      // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n    function projection(point) {\n      return projectRotateTransform(point[0] * radians, point[1] * radians);\n    }\n    function invert(point) {\n      point = projectRotateTransform.invert(point[0], point[1]);\n      return point && [point[0] * degrees, point[1] * degrees];\n    }\n    projection.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n    };\n    projection.preclip = function (_) {\n      return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n    };\n    projection.postclip = function (_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    };\n    projection.clipAngle = function (_) {\n      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n    };\n    projection.clipExtent = function (_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n    projection.scale = function (_) {\n      return arguments.length ? (k = +_, recenter()) : k;\n    };\n    projection.translate = function (_) {\n      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n    };\n    projection.center = function (_) {\n      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n    };\n    projection.rotate = function (_) {\n      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n    };\n    projection.angle = function (_) {\n      return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n    };\n    projection.reflectX = function (_) {\n      return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n    };\n    projection.reflectY = function (_) {\n      return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n    };\n    projection.precision = function (_) {\n      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n    };\n    projection.fitExtent = function (extent, object) {\n      return fitExtent(projection, extent, object);\n    };\n    projection.fitSize = function (size, object) {\n      return fitSize(projection, size, object);\n    };\n    projection.fitWidth = function (width, object) {\n      return fitWidth(projection, width, object);\n    };\n    projection.fitHeight = function (height, object) {\n      return fitHeight(projection, height, object);\n    };\n    function recenter() {\n      var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n      rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n      projectTransform = compose(project, transform);\n      projectRotateTransform = compose(rotate, projectTransform);\n      projectResample = resample(projectTransform, delta2);\n      return reset();\n    }\n    function reset() {\n      cache = cacheStream = null;\n      return projection;\n    }\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return recenter();\n    };\n  }\n\n  function conicProjection(projectAt) {\n    var phi0 = 0,\n      phi1 = pi$1 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n    p.parallels = function (_) {\n      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n    };\n    return p;\n  }\n\n  function cylindricalEqualAreaRaw(phi0) {\n    var cosPhi0 = cos$1(phi0);\n    function forward(lambda, phi) {\n      return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n    }\n    forward.invert = function (x, y) {\n      return [x / cosPhi0, asin$1(y * cosPhi0)];\n    };\n    return forward;\n  }\n\n  function conicEqualAreaRaw(y0, y1) {\n    var sy0 = sin$1(y0),\n      n = (sy0 + sin$1(y1)) / 2;\n\n    // Are the parallels symmetrical around the Equator?\n    if (abs$1(n) < epsilon$1) return cylindricalEqualAreaRaw(y0);\n    var c = 1 + sy0 * (2 * n - sy0),\n      r0 = sqrt$1(c) / n;\n    function project(x, y) {\n      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n    }\n    project.invert = function (x, y) {\n      var r0y = r0 - y,\n        l = atan2(x, abs$1(r0y)) * sign(r0y);\n      if (r0y * n < 0) l -= pi$1 * sign(x) * sign(r0y);\n      return [l / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n    };\n    return project;\n  }\n  function geoConicEqualArea () {\n    return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n  }\n\n  function geoAlbers () {\n    return geoConicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n  }\n\n  // The projections must have mutually exclusive clip regions on the sphere,\n  // as this will avoid emitting interleaving lines and polygons.\n  function multiplex(streams) {\n    var n = streams.length;\n    return {\n      point: function (x, y) {\n        var i = -1;\n        while (++i < n) streams[i].point(x, y);\n      },\n      sphere: function () {\n        var i = -1;\n        while (++i < n) streams[i].sphere();\n      },\n      lineStart: function () {\n        var i = -1;\n        while (++i < n) streams[i].lineStart();\n      },\n      lineEnd: function () {\n        var i = -1;\n        while (++i < n) streams[i].lineEnd();\n      },\n      polygonStart: function () {\n        var i = -1;\n        while (++i < n) streams[i].polygonStart();\n      },\n      polygonEnd: function () {\n        var i = -1;\n        while (++i < n) streams[i].polygonEnd();\n      }\n    };\n  }\n\n  // A composite projection for the United States, configured by default for\n  // 960\u00d7500. The projection also works quite well at 960\u00d7600 if you change the\n  // scale to 1285 and adjust the translate accordingly. The set of standard\n  // parallels for each region comes from USGS, which is published here:\n  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n  function geoAlbersUsa () {\n    var cache,\n      cacheStream,\n      lower48 = geoAlbers(),\n      lower48Point,\n      alaska = geoConicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n      alaskaPoint,\n      // EPSG:3338\n      hawaii = geoConicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n      hawaiiPoint,\n      // ESRI:102007\n      point,\n      pointStream = {\n        point: function (x, y) {\n          point = [x, y];\n        }\n      };\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n        y = coordinates[1];\n      return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);\n    }\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n    };\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n      return reset();\n    };\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n        x = +_[0],\n        y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n      alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + epsilon$1, y + 0.120 * k + epsilon$1], [x - 0.214 * k - epsilon$1, y + 0.234 * k - epsilon$1]]).stream(pointStream);\n      hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + epsilon$1, y + 0.166 * k + epsilon$1], [x - 0.115 * k - epsilon$1, y + 0.234 * k - epsilon$1]]).stream(pointStream);\n      return reset();\n    };\n    albersUsa.fitExtent = function (extent, object) {\n      return fitExtent(albersUsa, extent, object);\n    };\n    albersUsa.fitSize = function (size, object) {\n      return fitSize(albersUsa, size, object);\n    };\n    albersUsa.fitWidth = function (width, object) {\n      return fitWidth(albersUsa, width, object);\n    };\n    albersUsa.fitHeight = function (height, object) {\n      return fitHeight(albersUsa, height, object);\n    };\n    function reset() {\n      cache = cacheStream = null;\n      return albersUsa;\n    }\n    return albersUsa.scale(1070);\n  }\n\n  function azimuthalRaw(scale) {\n    return function (x, y) {\n      var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n      if (k === Infinity) return [2, 0];\n      return [k * cy * sin$1(x), k * sin$1(y)];\n    };\n  }\n  function azimuthalInvert(angle) {\n    return function (x, y) {\n      var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n      return [atan2(x * sc, z * cc), asin$1(z && y * sc / z)];\n    };\n  }\n\n  var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n    return sqrt$1(2 / (1 + cxcy));\n  });\n  azimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n    return 2 * asin$1(z / 2);\n  });\n  function geoAzimuthalEqualArea () {\n    return projection$1(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n  }\n\n  var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n    return (c = acos(c)) && c / sin$1(c);\n  });\n  azimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n    return z;\n  });\n  function geoAzimuthalEquidistant () {\n    return projection$1(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n  }\n\n  function mercatorRaw(lambda, phi) {\n    return [lambda, log(tan((halfPi$1 + phi) / 2))];\n  }\n  mercatorRaw.invert = function (x, y) {\n    return [x, 2 * atan(exp(y)) - halfPi$1];\n  };\n  function geoMercator () {\n    return mercatorProjection(mercatorRaw).scale(961 / tau);\n  }\n  function mercatorProjection(project) {\n    var m = projection$1(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n    m.scale = function (_) {\n      return arguments.length ? (scale(_), reclip()) : scale();\n    };\n    m.translate = function (_) {\n      return arguments.length ? (translate(_), reclip()) : translate();\n    };\n    m.center = function (_) {\n      return arguments.length ? (center(_), reclip()) : center();\n    };\n    m.clipExtent = function (_) {\n      return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n    function reclip() {\n      var k = pi$1 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n      return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n    }\n    return reclip();\n  }\n\n  function tany(y) {\n    return tan((halfPi$1 + y) / 2);\n  }\n  function conicConformalRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n    if (!n) return mercatorRaw;\n    function project(x, y) {\n      if (f > 0) {\n        if (y < -halfPi$1 + epsilon$1) y = -halfPi$1 + epsilon$1;\n      } else {\n        if (y > halfPi$1 - epsilon$1) y = halfPi$1 - epsilon$1;\n      }\n      var r = f / pow(tany(y), n);\n      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n    }\n    project.invert = function (x, y) {\n      var fy = f - y,\n        r = sign(n) * sqrt$1(x * x + fy * fy),\n        l = atan2(x, abs$1(fy)) * sign(fy);\n      if (fy * n < 0) l -= pi$1 * sign(x) * sign(fy);\n      return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi$1];\n    };\n    return project;\n  }\n  function geoConicConformal () {\n    return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n  }\n\n  function equirectangularRaw(lambda, phi) {\n    return [lambda, phi];\n  }\n  equirectangularRaw.invert = equirectangularRaw;\n  function geoEquirectangular () {\n    return projection$1(equirectangularRaw).scale(152.63);\n  }\n\n  function conicEquidistantRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n    if (abs$1(n) < epsilon$1) return equirectangularRaw;\n    function project(x, y) {\n      var gy = g - y,\n        nx = n * x;\n      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n    }\n    project.invert = function (x, y) {\n      var gy = g - y,\n        l = atan2(x, abs$1(gy)) * sign(gy);\n      if (gy * n < 0) l -= pi$1 * sign(x) * sign(gy);\n      return [l / n, g - sign(n) * sqrt$1(x * x + gy * gy)];\n    };\n    return project;\n  }\n  function geoConicEquidistant () {\n    return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n  }\n\n  var A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt$1(3) / 2,\n    iterations = 12;\n  function equalEarthRaw(lambda, phi) {\n    var l = asin$1(M * sin$1(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n    return [lambda * cos$1(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n  }\n  equalEarthRaw.invert = function (x, y) {\n    var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n    for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n      fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n      fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n      l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n      if (abs$1(delta) < epsilon2) break;\n    }\n    return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos$1(l), asin$1(sin$1(l) / M)];\n  };\n  function geoEqualEarth () {\n    return projection$1(equalEarthRaw).scale(177.158);\n  }\n\n  function gnomonicRaw(x, y) {\n    var cy = cos$1(y),\n      k = cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n  gnomonicRaw.invert = azimuthalInvert(atan);\n  function geoGnomonic () {\n    return projection$1(gnomonicRaw).scale(144.049).clipAngle(60);\n  }\n\n  function geoIdentity () {\n    var k = 1,\n      tx = 0,\n      ty = 0,\n      sx = 1,\n      sy = 1,\n      // scale, translate and reflect\n      alpha = 0,\n      ca,\n      sa,\n      // angle\n      x0 = null,\n      y0,\n      x1,\n      y1,\n      // clip extent\n      kx = 1,\n      ky = 1,\n      transform = transformer({\n        point: function (x, y) {\n          var p = projection([x, y]);\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n    function reset() {\n      kx = k * sx;\n      ky = k * sy;\n      cache = cacheStream = null;\n      return projection;\n    }\n    function projection(p) {\n      var x = p[0] * kx,\n        y = p[1] * ky;\n      if (alpha) {\n        var t = y * ca - x * sa;\n        x = x * ca + y * sa;\n        y = t;\n      }\n      return [x + tx, y + ty];\n    }\n    projection.invert = function (p) {\n      var x = p[0] - tx,\n        y = p[1] - ty;\n      if (alpha) {\n        var t = y * ca + x * sa;\n        x = x * ca - y * sa;\n        y = t;\n      }\n      return [x / kx, y / ky];\n    };\n    projection.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    };\n    projection.postclip = function (_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    };\n    projection.clipExtent = function (_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n    projection.scale = function (_) {\n      return arguments.length ? (k = +_, reset()) : k;\n    };\n    projection.translate = function (_) {\n      return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n    };\n    projection.angle = function (_) {\n      return arguments.length ? (alpha = _ % 360 * radians, sa = sin$1(alpha), ca = cos$1(alpha), reset()) : alpha * degrees;\n    };\n    projection.reflectX = function (_) {\n      return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n    };\n    projection.reflectY = function (_) {\n      return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n    };\n    projection.fitExtent = function (extent, object) {\n      return fitExtent(projection, extent, object);\n    };\n    projection.fitSize = function (size, object) {\n      return fitSize(projection, size, object);\n    };\n    projection.fitWidth = function (width, object) {\n      return fitWidth(projection, width, object);\n    };\n    projection.fitHeight = function (height, object) {\n      return fitHeight(projection, height, object);\n    };\n    return projection;\n  }\n\n  function naturalEarth1Raw(lambda, phi) {\n    var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n    return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n  }\n  naturalEarth1Raw.invert = function (x, y) {\n    var phi = y,\n      i = 25,\n      delta;\n    do {\n      var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n      phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n    } while (abs$1(delta) > epsilon$1 && --i > 0);\n    return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n  };\n  function geoNaturalEarth1 () {\n    return projection$1(naturalEarth1Raw).scale(175.295);\n  }\n\n  function orthographicRaw(x, y) {\n    return [cos$1(y) * sin$1(x), sin$1(y)];\n  }\n  orthographicRaw.invert = azimuthalInvert(asin$1);\n  function geoOrthographic () {\n    return projection$1(orthographicRaw).scale(249.5).clipAngle(90 + epsilon$1);\n  }\n\n  function stereographicRaw(x, y) {\n    var cy = cos$1(y),\n      k = 1 + cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n  stereographicRaw.invert = azimuthalInvert(function (z) {\n    return 2 * atan(z);\n  });\n  function geoStereographic () {\n    return projection$1(stereographicRaw).scale(250).clipAngle(142);\n  }\n\n  function transverseMercatorRaw(lambda, phi) {\n    return [log(tan((halfPi$1 + phi) / 2)), -lambda];\n  }\n  transverseMercatorRaw.invert = function (x, y) {\n    return [-y, 2 * atan(exp(x)) - halfPi$1];\n  };\n  function geoTransverseMercator () {\n    var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n    m.center = function (_) {\n      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n    m.rotate = function (_) {\n      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n    return rotate([0, 0, 90]).scale(159.155);\n  }\n\n  var abs = Math.abs;\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var epsilon = 1e-6;\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  var sqrt2 = sqrt(2);\n  function asin(x) {\n    return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n  }\n  function sqrt(x) {\n    return x > 0 ? Math.sqrt(x) : 0;\n  }\n\n  function mollweideBromleyTheta(cp, phi) {\n    var cpsinPhi = cp * sin(phi),\n      i = 30,\n      delta;\n    do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi)); while (abs(delta) > epsilon && --i > 0);\n    return phi / 2;\n  }\n  function mollweideBromleyRaw(cx, cy, cp) {\n    function forward(lambda, phi) {\n      return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n    }\n    forward.invert = function (x, y) {\n      return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n    };\n    return forward;\n  }\n  var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n  function geoMollweide () {\n    return projection$1(mollweideRaw).scale(169.529);\n  }\n\n  const defaultPath = geoPath();\n  const projectionProperties = [\n  // standard properties in d3-geo\n  'clipAngle', 'clipExtent', 'scale', 'translate', 'center', 'rotate', 'parallels', 'precision', 'reflectX', 'reflectY',\n  // extended properties in d3-geo-projections\n  'coefficient', 'distance', 'fraction', 'lobes', 'parallel', 'radius', 'ratio', 'spacing', 'tilt'];\n\n  /**\n   * Augment projections with their type and a copy method.\n   */\n  function create(type, constructor) {\n    return function projection() {\n      const p = constructor();\n      p.type = type;\n      p.path = geoPath().projection(p);\n      p.copy = p.copy || function () {\n        const c = projection();\n        projectionProperties.forEach(prop => {\n          if (p[prop]) c[prop](p[prop]());\n        });\n        c.path.pointRadius(p.path.pointRadius());\n        return c;\n      };\n      return vegaScale.registerScale(p);\n    };\n  }\n  function projection(type, proj) {\n    if (!type || typeof type !== 'string') {\n      throw new Error('Projection type must be a name string.');\n    }\n    type = type.toLowerCase();\n    if (arguments.length > 1) {\n      projections[type] = create(type, proj);\n      return this;\n    } else {\n      return projections[type] || null;\n    }\n  }\n  function getProjectionPath(proj) {\n    return proj && proj.path || defaultPath;\n  }\n  const projections = {\n    // base d3-geo projection types\n    albers: geoAlbers,\n    albersusa: geoAlbersUsa,\n    azimuthalequalarea: geoAzimuthalEqualArea,\n    azimuthalequidistant: geoAzimuthalEquidistant,\n    conicconformal: geoConicConformal,\n    conicequalarea: geoConicEqualArea,\n    conicequidistant: geoConicEquidistant,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    gnomonic: geoGnomonic,\n    identity: geoIdentity,\n    mercator: geoMercator,\n    mollweide: geoMollweide,\n    naturalEarth1: geoNaturalEarth1,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    transversemercator: geoTransverseMercator\n  };\n  for (const key in projections) {\n    projection(key, projections[key]);\n  }\n\n  exports.getProjectionPath = getProjectionPath;\n  exports.projection = projection;\n  exports.projectionProperties = projectionProperties;\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","vegaScale","flatten","arrays","array","acos","x","pi$1","Math","asin$1","halfPi$1","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamLine","coordinates","closed","i","n","length","lineStart","coordinate","point","lineEnd","streamPolygon","polygonStart","polygonEnd","geoStream","object","streamObjectType","spherical","cartesian","atan2","lambda","phi","cosPhi","cos$1","sin$1","cartesianDot","a","b","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","sqrt$1","compose","y","invert","compose.invert","rotationIdentity","abs$1","round","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","z","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","rotation.invert","rotate","forward","radians","degrees","forward.invert","circleRadius","cosRadius","radius","epsilon$1","clipBuffer","lines","line","m","push","rejoin","pop","concat","shift","result","pointEqual","Intersection","points","other","entry","o","e","v","p","clipRejoin","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","sort","link","start","current","isSubject","longitude","sign","pointVisible","clipLine","sink","pointLine","pointRing","ring","ringSink","ringStart","ringEnd","clean","ringSegments","ringBuffer","polygon","polygonStarted","filter","validSegment","Array","from","sinPhi","normal","angle","winding","sum","Adder","point0","lambda0","phi0","quarterPi","sinPhi0","cosPhi0","j","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","add","arc","intersection","phiArc","epsilon2","sphere","clipCircle","visible","cr","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","w","uu","t2","t","q","polar","q1","code","r","smallRadius","notHemisphere","c0","v0","v00","c","point2","to","direction","sinRadius","step","t0","t1","x0","y0","x1","y1","ax","ay","dx","bx","dy","by","clipRectangle","a1","corner","comparePoint","ca","cb","activeStream","linePoint","first","x__","y__","v__","v_","x_","max","clipMin","clipMax","min","y_","bufferStream","clipStream","NaN","b0","b1","a0","cleanInside","areaRingStart","areaStream","areaPointFirst","areaPoint","x00$2","x0$3","y00$2","y0$3","areaRingSum","areaRingEnd","centroidPoint","X0","Y0","Z0","centroidLineStart","centroidStream","centroidPointFirstLine","centroidPointLine","x0$1","y0$1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidPointFirstRing","centroidRingEnd","centroidPointRing","x00$1","y00$1","X2","Y2","Z2","PathContext","context","_context","lengthPointFirst","lengthStream","lengthPoint","x00","y00","lengthSum","append","strings","_","arguments","appendRound","digits","floor","RangeError","cacheDigits","cacheAppend","geoPath","projection","path","pointRadius","contextStream","apply","projectionStream","area","path.area","pathArea","measure","path.measure","pathMeasure","bounds","path.bounds","boundsStream$1","centroid","path.centroid","pathCentroid","path.projection","identity","path.context","PathString","path.pointRadius","path.digits","transformer","methods","s","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","fitExtent","extent","h","fitWidth","width","fitHeight","height","resampleNone","project","resample$1","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","lambda00","a00","b00","c00","transformRotate","scaleTranslate","sx","sy","transform","transform.invert","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projection$1","projectionMutator","projectAt","projectRotateTransform","recenter","center","projectTransform","reset","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","projectResample","projection.stream","transformRadians","projection.preclip","undefined","projection.postclip","clipAngle","projection.clipAngle","projection.clipExtent","projection.scale","projection.translate","projection.center","projection.rotate","projection.angle","reflectX","projection.reflectX","reflectY","projection.reflectY","precision","projection.precision","projection.fitExtent","fitSize","projection.fitSize","size","projection.fitWidth","projection.fitHeight","conicProjection","parallels","p.parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0","sy0","project.invert","r0y","geoConicEqualArea","geoAlbers","multiplex","streams","azimuthalRaw","cx","cy","Infinity","azimuthalInvert","sc","cc","mercatorRaw","log","tan","mercatorProjection","reclip","m.scale","m.translate","m.center","m.clipExtent","conicConformalRaw","f","pow","cy0","fy","atan","equirectangularRaw","conicEquidistantRaw","gy","g","nx","equalEarthRaw","M","l2","l6","A1","A2","A3","A4","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","halfPi","create","constructor","copy","projectionProperties","prop","registerScale","proj","Error","toLowerCase","projections","_partials","Float64Array","_n","hi","lo","abs","valueOf","PI","cos","exp","sin","sqrt","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","clipAntimeridianLine","sign0","sign1","sinLambda0Lambda1","clipAntimeridianInterpolate","areaSum","x0$2","y0$2","boundsStream","boundsPoint","prototype","_radius","_line","_point","closePath","moveTo","lineTo","lengthRing","cacheRadius","cacheCircle","_append","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw.invert","equalEarthRaw.invert","iterations","fpy","naturalEarth1Raw.invert","transverseMercatorRaw.invert","pi","sqrt2","mollweideRaw","mollweideBromleyRaw","cp","cpsinPhi","epsilon","defaultPath","albers","albersusa","geoAlbersUsa","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa.invert","albersUsa.stream","albersUsa.precision","albersUsa.scale","albersUsa.translate","albersUsa.fitExtent","albersUsa.fitSize","albersUsa.fitWidth","albersUsa.fitHeight","azimuthalequalarea","geoAzimuthalEqualArea","azimuthalequidistant","geoAzimuthalEquidistant","conicconformal","geoConicConformal","conicequalarea","conicequidistant","geoConicEquidistant","equalEarth","geoEqualEarth","equirectangular","geoEquirectangular","gnomonic","geoGnomonic","geoIdentity","kx","ky","sa","tx","ty","projection.invert","mercator","geoMercator","mollweide","geoMollweide","naturalEarth1","geoNaturalEarth1","orthographic","geoOrthographic","stereographic","geoStereographic","transversemercator","geoTransverseMercator","m.rotate","getProjectionPath"]
}
