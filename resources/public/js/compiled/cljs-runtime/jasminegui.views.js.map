{"version":3,"sources":["jasminegui/views.cljs"],"mappings":"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","names":["jasminegui.views/nav-bar","cljs.core/deref","active-view","G__55540","re-frame.core/subscribe","re-com.core/v-box","re-com.core/h-box","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","iter__4529__auto__","s__55542","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__55544","cljs.core/chunk-buffer","i__55543","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__55541","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","item","jasminegui.static/main-navigation","re-com.core/box","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","re-com.core/hyperlink-href","re-com.core/hyperlink","G__55545","G__55546","re-frame.core/dispatch","re-com.core/gap","re-com.core/line","jasminegui.views/modal-global-password","G__55548","p1__55547#","pw","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","re-com.core/modal-panel","re-com.core/label","re-com.core/input-password","cljs.core/reset!","G__55549","jasminegui.views/modal-mounting","G__55550","re-com.core/alert-box","re-com.core/throbber","jasminegui.views/active-view","G__55551","js/window","G__55552","cljs.core/Keyword","jasminegui.home/home-view","jasminegui.attribution/home-view","jasminegui.var/var-view","jasminegui.portfolioreview/view","jasminegui.administration/administration-view","jasminegui.views/main-panel","cljs.core/chunk-first"],"sourcesContent":["(ns jasminegui.views\r\n  (:require\r\n    [re-frame.core :as rf]\r\n    ;   [reagent.core :as reagent]\r\n    [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                         single-dropdown hyperlink modal-panel alert-box throbber input-password\r\n                         input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n    [re-com.box :refer [h-box-args-desc v-box-args-desc box-args-desc gap-args-desc line-args-desc scroller-args-desc border-args-desc flex-child-style]]\r\n    [re-com.util :refer [px]]\r\n    [re-com.validate :refer [string-or-hiccup? alert-type? vector-of-maps?]]\r\n    [jasminegui.mount :as mount]\r\n    [jasminegui.static :as static]\r\n    [jasminegui.home :as home]\r\n    [jasminegui.var :as var]\r\n    [jasminegui.attribution :as attribution]\r\n    [jasminegui.administration :as administration]\r\n    [jasminegui.portfolioreview :as pr]\r\n    ))\r\n\r\n(defn nav-bar []\r\n  (let [active-view @(rf/subscribe [:active-view])]\r\n    [v-box\r\n     :align :start\r\n     :children [\r\n                [h-box\r\n                 :class \"navbar\"\r\n                 :align :stretch\r\n                 :children (into [] (concat (into [] (for [item static/main-navigation]\r\n                                                       [box\r\n                                                        :width (if (= (:code item) :home) \"250px\" \"150px\")\r\n                                                        :class (if (= active-view (:code item)) \"dropdown-active\" \"dropdown\")\r\n                                                        :child (if (:href item)\r\n                                                                 [hyperlink-href :label (:name item) :href (:href item)]\r\n                                                                 [hyperlink :label (:name item) :on-click #(rf/dispatch [:active-view (:code item)])])]))\r\n                                            [[gap :size \"1\"]\r\n                                             [box :align-self :center :height \"50%\" :width \"3px\" :child [line :color \"#CA3E47\" :size \"3px\"]]\r\n                                             [box :width \"3px\" :child \"\"] ;this is just equal to line above - ugly hack\r\n                                             [box :width \"150px\" :class \"dropdown\" :child [hyperlink :label \"Jasmine\" :on-click nil]]]))\r\n\r\n\r\n                 ;[(for [item static/main-navigation]\r\n                 ;             ^{:key (:code item)}\r\n                 ;             [box\r\n                 ;              :width (if (= (:code item) :home) \"250px\" \"150px\")\r\n                 ;              :class (if (= active-view (:code item)) \"dropdown-active\" \"dropdown\")\r\n                 ;              :child [hyperlink :label (:name item) :on-click #(rf/dispatch [:active-view (:code item)])]])\r\n                 ;           [gap :size \"1\"]\r\n                 ;           [box :align-self :center :height \"50%\" :width \"3px\" :child [line :color \"#CA3E47\" :size \"3px\"]]\r\n                 ;           [box :width \"3px\" :child \"\"]                  ;this is just equal to line above - ugly hack\r\n                 ;           [box :width \"150px\" :class \"dropdown\" :child [hyperlink :label \"Jasmine\" :on-click nil] ]]\r\n                 ;\r\n\r\n                 ]\r\n                [line :color \"#CA3E47\" :class \"separatorline\"]]]))\r\n\r\n;[hyperlink :label @(rf/subscribe [:active-portfolio]) :on-click #(rf/dispatch [:show-portfolio-selector true])]\r\n;\r\n;(defn modal-portfolio-selector []\r\n;  (if @(rf/subscribe [:show-portfolio-selector])\r\n;    [modal-panel\r\n;     :wrap-nicely? true\r\n;     :backdrop-on-click #(rf/dispatch [:show-portfolio-selector false])\r\n;     :child [v-box\r\n;             :width \"250px\"\r\n;             :height \"75px\"\r\n;             :gap \"10px\"\r\n;             :children [[label :label \"Select portfolio:\"]\r\n;                        [single-dropdown\r\n;                         :width \"200px\"\r\n;                         :model (rf/subscribe [:active-portfolio])\r\n;                         :choices (into [] (for [x (conj @(rf/subscribe [:portfolios]) \"All portfolios\")] {:id x :label x}))\r\n;                         :on-change #(rf/dispatch [:active-portfolio %])]]]]))\r\n\r\n;(defn modal-success []\r\n;  (let [modal-data @(rf/subscribe [:success-modal])]\r\n;    (if (:show modal-data)\r\n;      [modal-panel\r\n;       :wrap-nicely? false\r\n;       :backdrop-on-click #(rf/dispatch [(:on-close modal-data)])\r\n;       :child [alert-box\r\n;               :padding \"15px\"\r\n;               :style {:width \"450px\"}\r\n;               :heading (if-let [x (:response modal-data)] x [box :align :center :child [throbber :size :large]])\r\n;               :closeable? true\r\n;               :on-close #(rf/dispatch [(:on-close modal-data)])]])))\r\n\r\n(defn modal-global-password []\r\n  (if @(rf/subscribe [:show-global-password-modal])\r\n    (let [pw (reagent.core/atom nil)]\r\n      [modal-panel\r\n       :wrap-nicely? true\r\n       :backdrop-opacity \"1.0\"\r\n       :child [v-box\r\n               :width \"250px\"\r\n               :height \"75px\"\r\n               :gap \"10px\"\r\n               :children [[label :label \"Team password:\"]\r\n                          [input-password :width \"200px\" :model pw :on-change #(do\r\n                                                                                 (reset! pw %)\r\n                                                                                 ;(rf/dispatch [:show-global-password-modal (not= % static/global-password-EMCD)])\r\n                                                                                 (rf/dispatch [:global-password-check %])\r\n                                                                                 )]]]])))\r\n\r\n(defn modal-mounting []\r\n  (if @(rf/subscribe [:show-mounting-modal])\r\n    [modal-panel\r\n     :wrap-nicely? false\r\n     ;:backdrop-opacity \"1.0\"\r\n     :child [alert-box\r\n             :padding \"15px\"\r\n             :style {:width \"120px\"}\r\n             :heading [box  :align :center :child [throbber :size :large]]\r\n             :closeable? false]]))\r\n\r\n\r\n(defn active-view []\r\n  (let [active-view @(rf/subscribe [:active-view])]\r\n    (.scrollTo js/window 0 0)                             ;on view change we go back to top\r\n    (case active-view\r\n      :home   [home/home-view]\r\n      :attribution [attribution/home-view]\r\n      :var    [var/var-view]\r\n      :portfolio-review [pr/view]\r\n      ;:trade-drilldown  [tradeview/trade-description-view]\r\n      ;:trade-entry      [tradeentry/trade-entry-view]\r\n      ;:sim-trades       [tables/simulated-trades-view]\r\n      :administration   [administration/administration-view]\r\n      ;:implementation   [implementation/trade-implementation-view]\r\n      [:div.output \"nothing to display\"])))\r\n\r\n\r\n(defn main-panel []\r\n  [v-box\r\n   :gap \"0px\"\r\n   :class \"body\"\r\n   :children [\r\n              ;[modal-global-password]\r\n              [modal-mounting]\r\n              [nav-bar] [active-view]\r\n              ;[modal-portfolio-selector] [modal-success]\r\n              ]])\r\n"]}