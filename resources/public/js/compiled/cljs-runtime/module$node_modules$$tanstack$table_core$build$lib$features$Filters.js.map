{
"version":3,
"file":"module$node_modules$$tanstack$table_core$build$lib$features$Filters.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/@tanstack/table-core/build/lib/features/Filters.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$table_core$build$lib$features$Filters\"] = function(global,require,module,exports) {\n/**\n * table-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar filterFns = require('../filterFns.js');\nvar utils = require('../utils.js');\n\n//\n\nconst Filters = {\n  getDefaultColumnDef: () => {\n    return {\n      filterFn: 'auto'\n    };\n  },\n  getInitialState: state => {\n    return {\n      columnFilters: [],\n      globalFilter: undefined,\n      // filtersProgress: 1,\n      // facetProgress: {},\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnFiltersChange: utils.makeStateUpdater('columnFilters', table),\n      onGlobalFilterChange: utils.makeStateUpdater('globalFilter', table),\n      filterFromLeafRows: false,\n      maxLeafRowFilterDepth: 100,\n      globalFilterFn: 'auto',\n      getColumnCanGlobalFilter: column => {\n        var _table$getCoreRowMode, _table$getCoreRowMode2;\n        const value = (_table$getCoreRowMode = table.getCoreRowModel().flatRows[0]) == null ? void 0 : (_table$getCoreRowMode2 = _table$getCoreRowMode._getAllCellsByColumnId()[column.id]) == null ? void 0 : _table$getCoreRowMode2.getValue();\n        return typeof value === 'string' || typeof value === 'number';\n      }\n    };\n  },\n  createColumn: (column, table) => {\n    return {\n      getAutoFilterFn: () => {\n        const firstRow = table.getCoreRowModel().flatRows[0];\n        const value = firstRow == null ? void 0 : firstRow.getValue(column.id);\n        if (typeof value === 'string') {\n          return filterFns.filterFns.includesString;\n        }\n        if (typeof value === 'number') {\n          return filterFns.filterFns.inNumberRange;\n        }\n        if (typeof value === 'boolean') {\n          return filterFns.filterFns.equals;\n        }\n        if (value !== null && typeof value === 'object') {\n          return filterFns.filterFns.equals;\n        }\n        if (Array.isArray(value)) {\n          return filterFns.filterFns.arrIncludes;\n        }\n        return filterFns.filterFns.weakEquals;\n      },\n      getFilterFn: () => {\n        var _table$options$filter, _table$options$filter2;\n        return utils.isFunction(column.columnDef.filterFn) ? column.columnDef.filterFn : column.columnDef.filterFn === 'auto' ? column.getAutoFilterFn()\n        // @ts-ignore \n        : (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[column.columnDef.filterFn]) != null ? _table$options$filter : filterFns.filterFns[column.columnDef.filterFn];\n      },\n      getCanFilter: () => {\n        var _column$columnDef$ena, _table$options$enable, _table$options$enable2;\n        return ((_column$columnDef$ena = column.columnDef.enableColumnFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnFilters) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && !!column.accessorFn;\n      },\n      getCanGlobalFilter: () => {\n        var _column$columnDef$ena2, _table$options$enable3, _table$options$enable4, _table$options$getCol;\n        return ((_column$columnDef$ena2 = column.columnDef.enableGlobalFilter) != null ? _column$columnDef$ena2 : true) && ((_table$options$enable3 = table.options.enableGlobalFilter) != null ? _table$options$enable3 : true) && ((_table$options$enable4 = table.options.enableFilters) != null ? _table$options$enable4 : true) && ((_table$options$getCol = table.options.getColumnCanGlobalFilter == null ? void 0 : table.options.getColumnCanGlobalFilter(column)) != null ? _table$options$getCol : true) && !!column.accessorFn;\n      },\n      getIsFiltered: () => column.getFilterIndex() > -1,\n      getFilterValue: () => {\n        var _table$getState$colum, _table$getState$colum2;\n        return (_table$getState$colum = table.getState().columnFilters) == null ? void 0 : (_table$getState$colum2 = _table$getState$colum.find(d => d.id === column.id)) == null ? void 0 : _table$getState$colum2.value;\n      },\n      getFilterIndex: () => {\n        var _table$getState$colum3, _table$getState$colum4;\n        return (_table$getState$colum3 = (_table$getState$colum4 = table.getState().columnFilters) == null ? void 0 : _table$getState$colum4.findIndex(d => d.id === column.id)) != null ? _table$getState$colum3 : -1;\n      },\n      setFilterValue: value => {\n        table.setColumnFilters(old => {\n          const filterFn = column.getFilterFn();\n          const previousfilter = old == null ? void 0 : old.find(d => d.id === column.id);\n          const newFilter = utils.functionalUpdate(value, previousfilter ? previousfilter.value : undefined);\n\n          //\n          if (shouldAutoRemoveFilter(filterFn, newFilter, column)) {\n            var _old$filter;\n            return (_old$filter = old == null ? void 0 : old.filter(d => d.id !== column.id)) != null ? _old$filter : [];\n          }\n          const newFilterObj = {\n            id: column.id,\n            value: newFilter\n          };\n          if (previousfilter) {\n            var _old$map;\n            return (_old$map = old == null ? void 0 : old.map(d => {\n              if (d.id === column.id) {\n                return newFilterObj;\n              }\n              return d;\n            })) != null ? _old$map : [];\n          }\n          if (old != null && old.length) {\n            return [...old, newFilterObj];\n          }\n          return [newFilterObj];\n        });\n      },\n      _getFacetedRowModel: table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, column.id),\n      getFacetedRowModel: () => {\n        if (!column._getFacetedRowModel) {\n          return table.getPreFilteredRowModel();\n        }\n        return column._getFacetedRowModel();\n      },\n      _getFacetedUniqueValues: table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, column.id),\n      getFacetedUniqueValues: () => {\n        if (!column._getFacetedUniqueValues) {\n          return new Map();\n        }\n        return column._getFacetedUniqueValues();\n      },\n      _getFacetedMinMaxValues: table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, column.id),\n      getFacetedMinMaxValues: () => {\n        if (!column._getFacetedMinMaxValues) {\n          return undefined;\n        }\n        return column._getFacetedMinMaxValues();\n      }\n      // () => [column.getFacetedRowModel()],\n      // facetedRowModel => getRowModelMinMaxValues(facetedRowModel, column.id),\n    };\n  },\n\n  createRow: (row, table) => {\n    return {\n      columnFilters: {},\n      columnFiltersMeta: {}\n    };\n  },\n  createTable: table => {\n    return {\n      getGlobalAutoFilterFn: () => {\n        return filterFns.filterFns.includesString;\n      },\n      getGlobalFilterFn: () => {\n        var _table$options$filter3, _table$options$filter4;\n        const {\n          globalFilterFn: globalFilterFn\n        } = table.options;\n        return utils.isFunction(globalFilterFn) ? globalFilterFn : globalFilterFn === 'auto' ? table.getGlobalAutoFilterFn()\n        // @ts-ignore\n        : (_table$options$filter3 = (_table$options$filter4 = table.options.filterFns) == null ? void 0 : _table$options$filter4[globalFilterFn]) != null ? _table$options$filter3 : filterFns.filterFns[globalFilterFn];\n      },\n      setColumnFilters: updater => {\n        const leafColumns = table.getAllLeafColumns();\n        const updateFn = old => {\n          var _functionalUpdate;\n          return (_functionalUpdate = utils.functionalUpdate(updater, old)) == null ? void 0 : _functionalUpdate.filter(filter => {\n            const column = leafColumns.find(d => d.id === filter.id);\n            if (column) {\n              const filterFn = column.getFilterFn();\n              if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {\n                return false;\n              }\n            }\n            return true;\n          });\n        };\n        table.options.onColumnFiltersChange == null ? void 0 : table.options.onColumnFiltersChange(updateFn);\n      },\n      setGlobalFilter: updater => {\n        table.options.onGlobalFilterChange == null ? void 0 : table.options.onGlobalFilterChange(updater);\n      },\n      resetGlobalFilter: defaultState => {\n        table.setGlobalFilter(defaultState ? undefined : table.initialState.globalFilter);\n      },\n      resetColumnFilters: defaultState => {\n        var _table$initialState$c, _table$initialState;\n        table.setColumnFilters(defaultState ? [] : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnFilters) != null ? _table$initialState$c : []);\n      },\n      getPreFilteredRowModel: () => table.getCoreRowModel(),\n      getFilteredRowModel: () => {\n        if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {\n          table._getFilteredRowModel = table.options.getFilteredRowModel(table);\n        }\n        if (table.options.manualFiltering || !table._getFilteredRowModel) {\n          return table.getPreFilteredRowModel();\n        }\n        return table._getFilteredRowModel();\n      },\n      _getGlobalFacetedRowModel: table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, '__global__'),\n      getGlobalFacetedRowModel: () => {\n        if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {\n          return table.getPreFilteredRowModel();\n        }\n        return table._getGlobalFacetedRowModel();\n      },\n      _getGlobalFacetedUniqueValues: table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, '__global__'),\n      getGlobalFacetedUniqueValues: () => {\n        if (!table._getGlobalFacetedUniqueValues) {\n          return new Map();\n        }\n        return table._getGlobalFacetedUniqueValues();\n      },\n      _getGlobalFacetedMinMaxValues: table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, '__global__'),\n      getGlobalFacetedMinMaxValues: () => {\n        if (!table._getGlobalFacetedMinMaxValues) {\n          return;\n        }\n        return table._getGlobalFacetedMinMaxValues();\n      }\n    };\n  }\n};\nfunction shouldAutoRemoveFilter(filterFn, value, column) {\n  return (filterFn && filterFn.autoRemove ? filterFn.autoRemove(value, column) : false) || typeof value === 'undefined' || typeof value === 'string' && !value;\n}\n\nexports.Filters = Filters;\nexports.shouldAutoRemoveFilter = shouldAutoRemoveFilter;\n//# sourceMappingURL=Filters.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","shouldAutoRemoveFilter","filterFn","value","column","autoRemove","Object","defineProperty","filterFns","utils","Filters","getDefaultColumnDef","getInitialState","state","columnFilters","globalFilter","undefined","getDefaultOptions","table","onColumnFiltersChange","makeStateUpdater","onGlobalFilterChange","filterFromLeafRows","maxLeafRowFilterDepth","globalFilterFn","getColumnCanGlobalFilter","_table$getCoreRowMode","_table$getCoreRowMode2","getCoreRowModel","flatRows","_getAllCellsByColumnId","id","getValue","createColumn","getAutoFilterFn","firstRow","includesString","inNumberRange","equals","Array","isArray","arrIncludes","weakEquals","getFilterFn","_table$options$filter","_table$options$filter2","isFunction","columnDef","options","getCanFilter","_column$columnDef$ena","_table$options$enable","_table$options$enable2","enableColumnFilter","enableColumnFilters","enableFilters","accessorFn","getCanGlobalFilter","_column$columnDef$ena2","_table$options$enable3","_table$options$enable4","_table$options$getCol","enableGlobalFilter","getIsFiltered","getFilterIndex","getFilterValue","_table$getState$colum","_table$getState$colum2","getState","find","d","_table$getState$colum3","_table$getState$colum4","findIndex","setFilterValue","setColumnFilters","old","previousfilter","newFilter","functionalUpdate","_old$filter","filter","newFilterObj","_old$map","map","length","_getFacetedRowModel","getFacetedRowModel","getPreFilteredRowModel","_getFacetedUniqueValues","getFacetedUniqueValues","Map","_getFacetedMinMaxValues","getFacetedMinMaxValues","createRow","row","columnFiltersMeta","createTable","getGlobalAutoFilterFn","getGlobalFilterFn","_table$options$filter3","_table$options$filter4","updater","leafColumns","getAllLeafColumns","updateFn","_functionalUpdate","setGlobalFilter","resetGlobalFilter","defaultState","initialState","resetColumnFilters","_table$initialState$c","_table$initialState","getFilteredRowModel","_getFilteredRowModel","manualFiltering","_getGlobalFacetedRowModel","getGlobalFacetedRowModel","_getGlobalFacetedUniqueValues","getGlobalFacetedUniqueValues","_getGlobalFacetedMinMaxValues","getGlobalFacetedMinMaxValues"]
}
