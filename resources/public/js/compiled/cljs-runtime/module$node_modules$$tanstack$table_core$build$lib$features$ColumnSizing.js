shadow$provide.module$node_modules$$tanstack$table_core$build$lib$features$ColumnSizing=function(global,require,module,exports){function passiveEventSupported(){if("boolean"===typeof passiveSupported)return passiveSupported;let supported=!1;try{const noop=()=>{};window.addEventListener("test",noop,{get passive(){supported=!0;return!1}});window.removeEventListener("test",noop)}catch(err){supported=!1}return passiveSupported=supported}Object.defineProperty(exports,"__esModule",{value:!0});var utils=
require("module$node_modules$$tanstack$table_core$build$lib$utils");const defaultColumnSizing={size:150,minSize:20,maxSize:Number.MAX_SAFE_INTEGER},getDefaultColumnSizingInfoState=()=>({startOffset:null,startSize:null,deltaOffset:null,deltaPercentage:null,isResizingColumn:!1,columnSizingStart:[]});let passiveSupported=null;exports.ColumnSizing={getDefaultColumnDef:()=>defaultColumnSizing,getInitialState:state=>Object.assign({},{columnSizing:{},columnSizingInfo:getDefaultColumnSizingInfoState()},state),
getDefaultOptions:table=>({columnResizeMode:"onEnd",onColumnSizingChange:utils.makeStateUpdater("columnSizing",table),onColumnSizingInfoChange:utils.makeStateUpdater("columnSizingInfo",table)}),createColumn:(column,table)=>({getSize:()=>{var _column$columnDef$min,_ref,_column$columnDef$max;const columnSize=table.getState().columnSizing[column.id];return Math.min(Math.max(null!=(_column$columnDef$min=column.columnDef.minSize)?_column$columnDef$min:defaultColumnSizing.minSize,null!=(_ref=null!=columnSize?
columnSize:column.columnDef.size)?_ref:defaultColumnSizing.size),null!=(_column$columnDef$max=column.columnDef.maxSize)?_column$columnDef$max:defaultColumnSizing.maxSize)},getStart:position=>{var columns=position?"left"===position?table.getLeftVisibleLeafColumns():table.getRightVisibleLeafColumns():table.getVisibleLeafColumns();const index=columns.findIndex(d=>d.id===column.id);return 0<index?(columns=columns[index-1],columns.getStart(position)+columns.getSize()):0},resetSize:()=>{table.setColumnSizing(_ref2=>
{_ref2=Object.assign({},_ref2);return delete _ref2[column.id],_ref2})},getCanResize:()=>{var _column$columnDef$ena,_table$options$enable;return(null!=(_column$columnDef$ena=column.columnDef.enableResizing)?_column$columnDef$ena:!0)&&(null!=(_table$options$enable=table.options.enableColumnResizing)?_table$options$enable:!0)},getIsResizing:()=>table.getState().columnSizingInfo.isResizingColumn===column.id}),createHeader:(header$jscomp$0,table)=>({getSize:()=>{let sum=0;const recurse=header=>{if(header.subHeaders.length)header.subHeaders.forEach(recurse);
else{var _header$column$getSiz;sum+=null!=(_header$column$getSiz=header.column.getSize())?_header$column$getSiz:0}};recurse(header$jscomp$0);return sum},getStart:()=>{if(0<header$jscomp$0.index){const prevSiblingHeader=header$jscomp$0.headerGroup.headers[header$jscomp$0.index-1];return prevSiblingHeader.getStart()+prevSiblingHeader.getSize()}return 0},getResizeHandler:()=>{const column=table.getColumn(header$jscomp$0.column.id),canResize=null==column?void 0:column.getCanResize();return e$jscomp$0=>
{if(column&&canResize&&(null==e$jscomp$0.persist?void 0:e$jscomp$0.persist(),!("touchstart"===e$jscomp$0.type&&e$jscomp$0.touches&&1<e$jscomp$0.touches.length))){var startSize=header$jscomp$0.getSize(),columnSizingStart=header$jscomp$0?header$jscomp$0.getLeafHeaders().map(d=>[d.column.id,d.column.getSize()]):[[column.id,column.getSize()]],clientX="touchstart"===e$jscomp$0.type?Math.round(e$jscomp$0.touches[0].clientX):e$jscomp$0.clientX,newColumnSizing={},updateOffset=(eventType,clientXPos)=>{"number"===
typeof clientXPos&&(table.setColumnSizingInfo(old=>{var _old$startOffset,_old$startSize;const deltaOffset=clientXPos-(null!=(_old$startOffset=null==old?void 0:old.startOffset)?_old$startOffset:0),deltaPercentage=Math.max(deltaOffset/(null!=(_old$startSize=null==old?void 0:old.startSize)?_old$startSize:0),-.999999);old.columnSizingStart.forEach(_ref3=>{let [columnId,headerSize]=_ref3;newColumnSizing[columnId]=Math.round(100*Math.max(headerSize+headerSize*deltaPercentage,0))/100});return Object.assign({},
old,{deltaOffset,deltaPercentage})}),"onChange"!==table.options.columnResizeMode&&"end"!==eventType||table.setColumnSizing(old=>Object.assign({},old,newColumnSizing)))},onEnd=clientXPos=>{updateOffset("end",clientXPos);table.setColumnSizingInfo(old=>Object.assign({},old,{isResizingColumn:!1,startOffset:null,startSize:null,deltaOffset:null,deltaPercentage:null,columnSizingStart:[]}))},mouseEvents={moveHandler:e=>updateOffset("move",e.clientX),upHandler:e=>{document.removeEventListener("mousemove",
mouseEvents.moveHandler);document.removeEventListener("mouseup",mouseEvents.upHandler);onEnd(e.clientX)}},touchEvents={moveHandler:e=>{e.cancelable&&(e.preventDefault(),e.stopPropagation());updateOffset("move",e.touches[0].clientX);return!1},upHandler:e=>{var _e$touches$;document.removeEventListener("touchmove",touchEvents.moveHandler);document.removeEventListener("touchend",touchEvents.upHandler);e.cancelable&&(e.preventDefault(),e.stopPropagation());onEnd(null==(_e$touches$=e.touches[0])?void 0:
_e$touches$.clientX)}},passiveIfSupported=passiveEventSupported()?{passive:!1}:!1;"touchstart"===e$jscomp$0.type?(document.addEventListener("touchmove",touchEvents.moveHandler,passiveIfSupported),document.addEventListener("touchend",touchEvents.upHandler,passiveIfSupported)):(document.addEventListener("mousemove",mouseEvents.moveHandler,passiveIfSupported),document.addEventListener("mouseup",mouseEvents.upHandler,passiveIfSupported));table.setColumnSizingInfo(old=>Object.assign({},old,{startOffset:clientX,
startSize,deltaOffset:0,deltaPercentage:0,columnSizingStart,isResizingColumn:column.id}))}}}}),createTable:table=>({setColumnSizing:updater=>null==table.options.onColumnSizingChange?void 0:table.options.onColumnSizingChange(updater),setColumnSizingInfo:updater=>null==table.options.onColumnSizingInfoChange?void 0:table.options.onColumnSizingInfoChange(updater),resetColumnSizing:defaultState=>{var _table$initialState$c;table.setColumnSizing(defaultState?{}:null!=(_table$initialState$c=table.initialState.columnSizing)?
_table$initialState$c:{})},resetHeaderSizeInfo:defaultState=>{var _table$initialState$c2;table.setColumnSizingInfo(defaultState?getDefaultColumnSizingInfoState():null!=(_table$initialState$c2=table.initialState.columnSizingInfo)?_table$initialState$c2:getDefaultColumnSizingInfoState())},getTotalSize:()=>{var _table$getHeaderGroup,_table$getHeaderGroup2;return null!=(_table$getHeaderGroup=null==(_table$getHeaderGroup2=table.getHeaderGroups()[0])?void 0:_table$getHeaderGroup2.headers.reduce((sum,header)=>
sum+header.getSize(),0))?_table$getHeaderGroup:0},getLeftTotalSize:()=>{var _table$getLeftHeaderG,_table$getLeftHeaderG2;return null!=(_table$getLeftHeaderG=null==(_table$getLeftHeaderG2=table.getLeftHeaderGroups()[0])?void 0:_table$getLeftHeaderG2.headers.reduce((sum,header)=>sum+header.getSize(),0))?_table$getLeftHeaderG:0},getCenterTotalSize:()=>{var _table$getCenterHeade,_table$getCenterHeade2;return null!=(_table$getCenterHeade=null==(_table$getCenterHeade2=table.getCenterHeaderGroups()[0])?
void 0:_table$getCenterHeade2.headers.reduce((sum,header)=>sum+header.getSize(),0))?_table$getCenterHeade:0},getRightTotalSize:()=>{var _table$getRightHeader,_table$getRightHeader2;return null!=(_table$getRightHeader=null==(_table$getRightHeader2=table.getRightHeaderGroups()[0])?void 0:_table$getRightHeader2.headers.reduce((sum,header)=>sum+header.getSize(),0))?_table$getRightHeader:0}})};exports.defaultColumnSizing=defaultColumnSizing;exports.passiveEventSupported=passiveEventSupported}
//# sourceMappingURL=module$node_modules$$tanstack$table_core$build$lib$features$ColumnSizing.js.map
