{
"version":3,
"file":"module$node_modules$$tanstack$table_core$build$lib$features$Pagination.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@tanstack/table-core/build/lib/features/Pagination.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$table_core$build$lib$features$Pagination\"] = function(global,require,module,exports) {\n/**\n * table-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('../utils.js');\n\n//\n\nconst defaultPageIndex = 0;\nconst defaultPageSize = 10;\nconst getDefaultPaginationState = () => ({\n  pageIndex: defaultPageIndex,\n  pageSize: defaultPageSize\n});\nconst Pagination = {\n  getInitialState: state => {\n    return {\n      ...state,\n      pagination: {\n        ...getDefaultPaginationState(),\n        ...(state == null ? void 0 : state.pagination)\n      }\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onPaginationChange: utils.makeStateUpdater('pagination', table)\n    };\n  },\n  createTable: table => {\n    let registered = false;\n    let queued = false;\n    return {\n      _autoResetPageIndex: () => {\n        var _ref, _table$options$autoRe;\n        if (!registered) {\n          table._queue(() => {\n            registered = true;\n          });\n          return;\n        }\n        if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetPageIndex) != null ? _ref : !table.options.manualPagination) {\n          if (queued) return;\n          queued = true;\n          table._queue(() => {\n            table.resetPageIndex();\n            queued = false;\n          });\n        }\n      },\n      setPagination: updater => {\n        const safeUpdater = old => {\n          let newState = utils.functionalUpdate(updater, old);\n          return newState;\n        };\n        return table.options.onPaginationChange == null ? void 0 : table.options.onPaginationChange(safeUpdater);\n      },\n      resetPagination: defaultState => {\n        var _table$initialState$p;\n        table.setPagination(defaultState ? getDefaultPaginationState() : (_table$initialState$p = table.initialState.pagination) != null ? _table$initialState$p : getDefaultPaginationState());\n      },\n      setPageIndex: updater => {\n        table.setPagination(old => {\n          let pageIndex = utils.functionalUpdate(updater, old.pageIndex);\n          const maxPageIndex = typeof table.options.pageCount === 'undefined' || table.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : table.options.pageCount - 1;\n          pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex));\n          return {\n            ...old,\n            pageIndex\n          };\n        });\n      },\n      resetPageIndex: defaultState => {\n        var _table$initialState$p2, _table$initialState, _table$initialState$p3;\n        table.setPageIndex(defaultState ? defaultPageIndex : (_table$initialState$p2 = (_table$initialState = table.initialState) == null ? void 0 : (_table$initialState$p3 = _table$initialState.pagination) == null ? void 0 : _table$initialState$p3.pageIndex) != null ? _table$initialState$p2 : defaultPageIndex);\n      },\n      resetPageSize: defaultState => {\n        var _table$initialState$p4, _table$initialState2, _table$initialState2$;\n        table.setPageSize(defaultState ? defaultPageSize : (_table$initialState$p4 = (_table$initialState2 = table.initialState) == null ? void 0 : (_table$initialState2$ = _table$initialState2.pagination) == null ? void 0 : _table$initialState2$.pageSize) != null ? _table$initialState$p4 : defaultPageSize);\n      },\n      setPageSize: updater => {\n        table.setPagination(old => {\n          const pageSize = Math.max(1, utils.functionalUpdate(updater, old.pageSize));\n          const topRowIndex = old.pageSize * old.pageIndex;\n          const pageIndex = Math.floor(topRowIndex / pageSize);\n          return {\n            ...old,\n            pageIndex,\n            pageSize\n          };\n        });\n      },\n      setPageCount: updater => table.setPagination(old => {\n        var _table$options$pageCo;\n        let newPageCount = utils.functionalUpdate(updater, (_table$options$pageCo = table.options.pageCount) != null ? _table$options$pageCo : -1);\n        if (typeof newPageCount === 'number') {\n          newPageCount = Math.max(-1, newPageCount);\n        }\n        return {\n          ...old,\n          pageCount: newPageCount\n        };\n      }),\n      getPageOptions: utils.memo(() => [table.getPageCount()], pageCount => {\n        let pageOptions = [];\n        if (pageCount && pageCount > 0) {\n          pageOptions = [...new Array(pageCount)].fill(null).map((_, i) => i);\n        }\n        return pageOptions;\n      }, {\n        key: process.env.NODE_ENV === 'development' && 'getPageOptions',\n        debug: () => {\n          var _table$options$debugA;\n          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;\n        }\n      }),\n      getCanPreviousPage: () => table.getState().pagination.pageIndex > 0,\n      getCanNextPage: () => {\n        const {\n          pageIndex\n        } = table.getState().pagination;\n        const pageCount = table.getPageCount();\n        if (pageCount === -1) {\n          return true;\n        }\n        if (pageCount === 0) {\n          return false;\n        }\n        return pageIndex < pageCount - 1;\n      },\n      previousPage: () => {\n        return table.setPageIndex(old => old - 1);\n      },\n      nextPage: () => {\n        return table.setPageIndex(old => {\n          return old + 1;\n        });\n      },\n      getPrePaginationRowModel: () => table.getExpandedRowModel(),\n      getPaginationRowModel: () => {\n        if (!table._getPaginationRowModel && table.options.getPaginationRowModel) {\n          table._getPaginationRowModel = table.options.getPaginationRowModel(table);\n        }\n        if (table.options.manualPagination || !table._getPaginationRowModel) {\n          return table.getPrePaginationRowModel();\n        }\n        return table._getPaginationRowModel();\n      },\n      getPageCount: () => {\n        var _table$options$pageCo2;\n        return (_table$options$pageCo2 = table.options.pageCount) != null ? _table$options$pageCo2 : Math.ceil(table.getPrePaginationRowModel().rows.length / table.getState().pagination.pageSize);\n      }\n    };\n  }\n};\n\nexports.Pagination = Pagination;\n//# sourceMappingURL=Pagination.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","Pagination","getInitialState","state","pagination","pageIndex","defaultPageIndex","pageSize","defaultPageSize","getDefaultOptions","table","onPaginationChange","makeStateUpdater","createTable","registered","queued","_autoResetPageIndex","_ref","_table$options$autoRe","options","autoResetAll","autoResetPageIndex","manualPagination","_queue","resetPageIndex","setPagination","updater","safeUpdater","old","functionalUpdate","newState","resetPagination","defaultState","_table$initialState$p","initialState","setPageIndex","Math","max","min","maxPageIndex","pageCount","Number","MAX_SAFE_INTEGER","_table$initialState$p2","_table$initialState","_table$initialState$p3","resetPageSize","_table$initialState$p4","_table$initialState2","_table$initialState2$","setPageSize","floor","setPageCount","_table$options$pageCo","newPageCount","getPageOptions","memo","getPageCount","pageOptions","Array","fill","map","_","i","key","debug","_table$options$debugA","debugAll","debugTable","getCanPreviousPage","getState","getCanNextPage","previousPage","nextPage","getPrePaginationRowModel","getExpandedRowModel","getPaginationRowModel","_getPaginationRowModel","_table$options$pageCo2","ceil","rows","length"]
}
