{"version":3,"sources":["jasminegui/tools.cljs"],"mappings":";;AAEA,AAAA,AAAMA,AAAqBC;AAA3B,AACE,AAAMC,AAAK,AAACC,AAAK,AAACC,AAAKH;AAAvB,AACE,AAAA,AAAAI,AAAAC,AAACC;AAAD,AAAS,AAAAF,AAAA,AAAQ,AAAA,AAACG,AAAwB,AAAAF,AAACG,AAAQP;AAC3C,AAAA,AAAK,AAAA,AAACM,AAAwB,AAACE,AAAIC,AAAKT,AACxCD;;AAEZ,AAAA,AAAMW,AAAwBC,AAAKC;AAAnC,AAAA;AAEE,AAAMC,AAAU,AAAAC,AAAA,AAAA,AAAA,AAAeH;AACzBI,AAAK,AAAA,AAAgBC;AAD3B,AAEE,AAAM,AAAQD,AAAM,AAAkBE,AAAOJ;;AAC7C,AAAA,AAAeE,AAAgBH;;AAC/B,AAAc,AAAQI,AAAaD;;AACnC,AAAQA;;AACR,AAAc,AAAQC,AAAaD","names":["jasminegui.tools/vector-of-maps->csv","vector-of-maps","cols","cljs.core/keys","cljs.core/last","p1__50152#","p2__50153#","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","clojure.string.join.cljs$core$IFn$_invoke$arity$2","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/name","jasminegui.tools/download-object-as-csv","text","export-name","data-blob","js/Blob","link","js/document","js/URL"],"sourcesContent":["(ns jasminegui.tools)\r\n\r\n(defn vector-of-maps->csv [vector-of-maps]\r\n  (let [cols (keys (last vector-of-maps))]                  ;use last not first as first is totals that are different\r\n    (reduce #(str %1 (clojure.string/join \",\" (mapv %2 cols)) \"\\n\")\r\n            (str (clojure.string/join \",\" (map name cols)) \"\\n\")\r\n            vector-of-maps)))\r\n\r\n(defn download-object-as-csv [text export-name]\r\n  \"This creates a temporary download link\"\r\n  (let [data-blob (js/Blob. #js [text] #js {:type \"text/csv\"})\r\n        link (.createElement js/document \"a\")]\r\n    (set! (.-href link) (.createObjectURL js/URL data-blob))\r\n    (.setAttribute link \"download\" export-name)\r\n    (.appendChild (.-body js/document) link)\r\n    (.click link)\r\n    (.removeChild (.-body js/document) link)))\r\n\r\n\r\n"]}