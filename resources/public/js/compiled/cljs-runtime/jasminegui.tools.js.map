{"version":3,"sources":["jasminegui/tools.cljs"],"mappings":";;AAEA,AAAA,AAAMA,AAAcC;AAApB,AAAuB,AAAAC,AAAsC,AAAKD;;AAClE,AAAA,AAAME,AAAmBF;AAAzB,AAA4B,AAAA,AAAA,AAACG,AAAK,AAAWH;;AAG7C,AAAA,AAAA,AAAAI,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AACFE;AADJ,AAEG,AAACC,AAAoBD,AAAe,AAACE,AAAK,AAACC,AAAKH;;;AAFnD,AAAA,AAAA,AAAMF,AAGFE,AAAeI;AAHnB,AAIG,AAAA,AAAAC,AAAAC,AAACC;AAAD,AAAS,AAAAF,AAAA,AAAQ,AAAA,AAACG,AAAwB,AAAAF,AAACG,AAAQL;AAC3C,AAAA,AAAK,AAAA,AAACI,AAAwB,AAACE,AAAIC,AAAKP,AACxCJ;;;AANX,AAAA,AAAA,AAAMF;;AAAN,AAQA,AAAA,AAAMc,AAAwBC,AAAKC;AAAnC,AAAA;AAEE,AAAMC,AAAU,AAAAC,AAAA,AAAA,AAAA,AAAeH;AACzBI,AAAK,AAAA,AAAgBC;AAD3B,AAEE,AAAM,AAAQD,AAAM,AAAkBE,AAAOJ;;AAC7C,AAAA,AAAeE,AAAgBH;;AAC/B,AAAc,AAAQI,AAAaD;;AACnC,AAAQA;;AACR,AAAc,AAAQC,AAAaD;;AAGvC,AAAA,AAAA,AAAArB,AAAMyB;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAtB,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMsB,AACFC,AAAKC;AADT,AAEG,AAACX,AAAuB,AAACY,AAAQ,AAACC,AAAoBH,AAAO,AAAA,AAAKC;;;AAFrE,AAAA,AAAA,AAAMF,AAGFC,AAAKC,AAASnB;AAHlB,AAIG,AAACQ,AAAuB,AAACY,AAAQ,AAACvB,AAAoBqB,AAAKlB,AAAO,AAAA,AAAKmB;;;AAJ1E,AAAA,AAAA,AAAMF;;AAAN","names":["jasminegui.tools/int-to-gdate","x","js/goog.date.UtcDateTime.fromIsoString","jasminegui.tools/gdate-to-yyyymmdd","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","var_args","G__42255","jasminegui.tools/vector-of-maps->csv","js/Error","vector-of-maps","jasminegui.tools.vector_of_maps__GT_csv.cljs$core$IFn$_invoke$arity$2","cljs.core/keys","cljs.core/last","cols","p1__42252#","p2__42253#","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","clojure.string.join.cljs$core$IFn$_invoke$arity$2","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/name","jasminegui.tools/download-object-as-csv","text","export-name","data-blob","js/Blob","link","js/document","js/URL","G__42257","jasminegui.tools/csv-link","data","filename","cljs.core/clj->js","jasminegui.tools.vector_of_maps__GT_csv.cljs$core$IFn$_invoke$arity$1"],"sourcesContent":["(ns jasminegui.tools)\r\n\r\n(defn int-to-gdate [x] (goog.date.UtcDateTime.fromIsoString. (str x)))\r\n(defn gdate-to-yyyymmdd [x] (subs (.toString x) 0 8))\r\n\r\n\r\n(defn vector-of-maps->csv\r\n  ([vector-of-maps]\r\n   (vector-of-maps->csv vector-of-maps (keys (last vector-of-maps)))) ;use last not first as first is totals that are different)\r\n  ([vector-of-maps cols]\r\n   (reduce #(str %1 (clojure.string/join \",\" (mapv %2 cols)) \"\\n\")\r\n           (str (clojure.string/join \",\" (map name cols)) \"\\n\")\r\n           vector-of-maps)))\r\n\r\n(defn download-object-as-csv [text export-name]\r\n  \"This creates a temporary download link\"\r\n  (let [data-blob (js/Blob. #js [text] #js {:type \"text/csv\"})\r\n        link (.createElement js/document \"a\")]\r\n    (set! (.-href link) (.createObjectURL js/URL data-blob))\r\n    (.setAttribute link \"download\" export-name)\r\n    (.appendChild (.-body js/document) link)\r\n    (.click link)\r\n    (.removeChild (.-body js/document) link)))\r\n\r\n\r\n(defn csv-link\r\n  ([data filename]\r\n   (download-object-as-csv (clj->js (vector-of-maps->csv data)) (str filename \".csv\")))\r\n  ([data filename cols]\r\n   (download-object-as-csv (clj->js (vector-of-maps->csv data cols)) (str filename \".csv\"))))\r\n"]}