{"version":3,"sources":["jasminegui/riskviews.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2","p__94523","p__94524","map__94529","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","vec__94531","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","db","_","bond-sedol","portfolios","start-date","end-date","jasminegui.mount/server-address","jasminegui.riskviews/round0pc-trigger","this","reagent.core/as-element","temp__5733__auto__","x","c","v","G__94576","G__94577","goog.string/format","colorize","jasminegui.riskviews/strategy-pop-up","jasminegui.riskviews/last-price-props","status","prefix","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__94606","G__94607","cljs.core/clj->js","jasminegui.riskviews/dropdown-width","jasminegui.riskviews/single-bond-trade-history","state","rowInfo","instance","G__94724","cljs.core/deref","re-frame.core/dispatch","G__94725","re-frame.core/subscribe","G__94726","G__94727","jasminegui.riskviews/single-portfolio-risk-display","p1__94731#","positions","G__94732","portfolio","G__94733","is-tree","G__94736","portfolio-positions","p1__94728#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","risk-choices","rfil","G__94737","p1__94729#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.range.cljs$core$IFn$_invoke$arity$2","grouping-columns","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4529__auto__","s__94739","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__94741","cljs.core/chunk-buffer","i__94740","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__94738","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","r","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","jasminegui.tables/risk-table-columns","additional-des-cols","cljs.core/set","cljs.core.map.cljs$core$IFn$_invoke$arity$2","jasminegui.static/risk-choice-map","accessors","display","G__94751","js/module$node_modules$react_table$lib$index.default","jasminegui.tables/case-insensitive-filter","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","G__94759","G__94753","jasminegui.riskviews/multiple-portfolio-risk-display","p1__94771#","display-key-one","G__94841","width-one","G__94842","G__94843","p1__94769#","s__94848","b__94850","i__94849","iter__94847","display-one","G__94889","cols","s__94891","b__94893","i__94892","iter__94890","p","G__94899","cljs.core/some","G__94894","G__94896","jasminegui.tables/sum-rows","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/name","G__94902","G__94900","jasminegui.riskviews/portfolio-alignment-risk-display","p1__94905#","group","p1__94903#","G__94906","jasminegui.static/portfolio-alignment-groups","base-portfolio","display-key","G__94907","cell-one","G__94908","G__94909","p1__94904#","s__94911","b__94913","i__94912","iter__94910","G__94914","s__94918","b__94920","i__94919","iter__94917","G__94926","G__94927","G__94916","jasminegui.riskviews/shortcut-row","key","shortcut","G__94928","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","re-com.core/title","s__94930","b__94932","i__94931","iter__94929","i","re-com.core/md-circle-icon-button","G__94933","G__94934","jasminegui.riskviews/filtering-row","risk-filter","G__94936","s__94938","b__94940","i__94939","p1__94935#","iter__94937","re-com.core/single-dropdown","reagent.core/cursor","G__94941","G__94942","jasminegui.riskviews/csv-link","data","filename","jasminegui.tools/download-object-as-csv","jasminegui.tools/vector-of-maps->csv","jasminegui.riskviews/single-portfolio-risk-controller","p1__94943#","p1__94944#","portfolio-map","s__94947","b__94949","i__94948","iter__94946","G__94950","display-style","G__94951","G__94952","hide-zero-risk","G__94953","re-com.core/box","re-com.core/v-box","G__94955","re-com.core/h-box","jasminegui.static/tree-table-choices","G__94956","re-com.core/checkbox","G__94957","p1__94945#","G__94958","re-com.core/gap","G__94959","jasminegui.riskviews/multiple-portfolio-risk-controller","p1__94960#","p1__94961#","p1__94962#","p1__94963#","s__94965","b__94967","i__94966","iter__94964","G__94968","G__94969","G__94970","selected-portfolios","G__94971","number-of-fields","G__94972","field-one","G__94973","field-two","G__94974","G__94975","G__94977","G__94978","G__94979","jasminegui.static/risk-field-choices","G__94980","re-com.core/button","G__94981","G__94982","G__94983","G__94984","G__94985","G__94986","re-com.core/selection-list","G__94987","G__94988","jasminegui.riskviews/portfolio-alignment-risk-controller","p1__94989#","p1__94990#","p1__94991#","p1__94992#","G__94993","portfolio-alignment-group","G__94994","field","G__94995","threshold","G__94996","G__94998","G__94999","G__95000","jasminegui.static/threshold-choices-alignment","G__95001","G__95002","G__95003","jasminegui.riskviews/go-to-portfolio-risk","G__95004","re-frame.core/dispatch-sync","G__95005","jasminegui.riskviews/summary-display","G__95007","G__95008","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","G__95009","G__95010","G__95011","G__95012","G__95013","G__95014","G__95015","G__95016","G__95017","cljs.core/chunk-first"],"sourcesContent":["(ns jasminegui.riskviews\r\n  (:require\r\n    ; [oz.core :as oz]\r\n    [re-frame.core :as rf]\r\n    [reagent.core :as r]\r\n    [goog.string :as gstring]\r\n    [goog.string.format]\r\n    [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                         single-dropdown hyperlink modal-panel alert-box throbber input-password selection-list md-circle-icon-button\r\n                         input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n    [re-com.box :refer [h-box-args-desc v-box-args-desc box-args-desc gap-args-desc line-args-desc scroller-args-desc border-args-desc flex-child-style]]\r\n    [re-com.util :refer [px]]\r\n    [\"react-table\" :as rt :default ReactTable]\r\n    [jasminegui.mount :as mount]\r\n    [jasminegui.static :as static]\r\n    [jasminegui.tools :as tools]\r\n    [jasminegui.tables :as tables]\r\n    [re-com.validate :refer [string-or-hiccup? alert-type? vector-of-maps?]])\r\n  (:import (goog.i18n NumberFormat)\r\n           (goog.i18n.NumberFormat Format))\r\n  )\r\n\r\n\r\n(rf/reg-event-fx\r\n  :get-single-bond-history\r\n  (fn [{:keys [db]} [_ bond-sedol portfolios start-date end-date]]\r\n    {:http-get-dispatch {:url          (str mount/server-address \"single-bond-history?id=\" bond-sedol \"&portfolios=\" portfolios \"&start-date=\" start-date \"&end-date=\" end-date)\r\n                         :dispatch-key [:single-bond-trade-history/data]\r\n                         :kwk          true}}))\r\n\r\n\r\n(defn round0pc-trigger  [this]\r\n  (r/as-element\r\n    (if-let [x (aget this \"value\")]\r\n      (letfn [(colorize [c v] [:div {:style {:color c}} (gstring/format \"%.0f%\" (* 100 v))])]\r\n        (cond\r\n          (>= x 1.0) (colorize \"red\" x)\r\n          (>= x 0.5) (colorize \"orange\" x)\r\n          (>= x 0.0) (colorize \"black\" x)\r\n          (< x 0.0) \"<0%\"\r\n          :else \"-\"))\r\n      \"-\")))\r\n\r\n(defn strategy-pop-up [this]\r\n  (r/as-element [:div [:span {:title (aget this \"row\" \"strategy\")} (aget this \"row\" \"strategy-shortcut\")]]))\r\n\r\n(defn last-price-props [this]\r\n  (if-not (nil? this)\r\n    (let [status (aget this \"row\" \"status\")\r\n          prefix (if (= status \"CLOSED\") \"(c) \" \"\")]\r\n      (r/as-element (str prefix (gstring/format \"%.2f\" (aget this \"value\")))))\r\n    (clj->js {:style nil})))\r\n\r\n;(defn format-date-from-int-rt [this] (tools/format-date-from-int (aget this \"value\")))\r\n;\r\n;(defn status-props [this]\r\n;  (if-not (nil? this)\r\n;    (let [status (aget this \"row\" \"status\")]\r\n;      (r/as-element (if (= status \"CLOSED\") (tools/format-date-from-int (aget this \"row\" \"exit-date\")) status)))\r\n;    (clj->js {:style nil})))\r\n;\r\n;(defn exit-date-props [this]\r\n;  (if-not (nil? this)\r\n;    (let [status (aget this \"row\" \"status\")]\r\n;      (r/as-element (if (= status \"CLOSED\") (tools/format-date-from-int (aget this \"row\" \"exit-date\")) status)))\r\n;    (clj->js {:style nil})))\r\n\r\n;(defn case-insensitive-filter [filterfn row]\r\n;  \"filterfn is {id: column_name value: text_in_filter_box\"\r\n;  (.includes  (.toLowerCase (str (aget row (aget filterfn \"id\"))))  (.toLowerCase (aget filterfn \"value\"))))\r\n;\r\n;(defn exit-date-filter [filterfn row]\r\n;  \"if user types LIVE, filters by today's exit date\"\r\n;  (if (.includes \"live\" (.toLowerCase (aget filterfn \"value\")))\r\n;    (.includes (.toLowerCase (str (aget row (aget filterfn \"id\")))) (tools/gdate-to-yyyymmdd static/gtoday))\r\n;    (.includes (.toLowerCase (str (aget row (aget filterfn \"id\")))) (.toLowerCase (aget filterfn \"value\")))))\r\n;\r\n\r\n\r\n;(defn sum-rows [vals] (reduce + vals))\r\n\r\n\r\n(def dropdown-width \"150px\")\r\n\r\n(defn single-bond-trade-history [state rowInfo instance]\r\n  (clj->js {:onClick #(do\r\n                        (rf/dispatch [:get-single-bond-history\r\n                                      (aget rowInfo \"row\" \"_original\" \"id\")\r\n                                      [@(rf/subscribe [:single-portfolio-risk/portfolio])]\r\n                                      \"01Jan2019\"\r\n                                      @(rf/subscribe [:qt-date])\r\n                                      ])\r\n                        (rf/dispatch [:single-bond-trade-history/show-modal true])\r\n                        ) :style {:cursor \"pointer\"}}))\r\n\r\n(defn single-portfolio-risk-display []\r\n  (let [positions @(rf/subscribe [:positions])\r\n        portfolio @(rf/subscribe [:single-portfolio-risk/portfolio])\r\n        is-tree (= @(rf/subscribe [:single-portfolio-risk/display-style]) \"Tree\")\r\n        portfolio-positions (filter #(= (:portfolio %) portfolio) positions)\r\n        risk-choices (let [rfil @(rf/subscribe [:single-portfolio-risk/filter])] (mapv #(if (not= \"None\" (rfil %)) (rfil %)) (range 1 4)))\r\n        grouping-columns (into [] (for [r (remove nil? (conj risk-choices :name))] (tables/risk-table-columns r)))\r\n        additional-des-cols (remove (set (conj risk-choices \"None\")) (map :id static/risk-choice-map))\r\n        accessors (mapv :accessor grouping-columns)\r\n        display @(rf/subscribe [:single-portfolio-risk/table])]\r\n    [:> ReactTable\r\n     {:data                display\r\n      :defaultFilterMethod tables/case-insensitive-filter\r\n      :columns             [{:Header \"Groups\" :columns grouping-columns}\r\n                            {:Header \"NAV\" :columns (mapv tables/risk-table-columns [:nav :bm-weight :weight-delta])}\r\n                            {:Header \"Duration\" :columns (mapv tables/risk-table-columns [:contrib-mdur :bm-contrib-eir-duration :mdur-delta])}\r\n                            {:Header \"Yield\" :columns (mapv tables/risk-table-columns [:contrib-yield :bm-contrib-yield])}\r\n                            {:Header \"Z-spread\" :columns (mapv tables/risk-table-columns [:contrib-zspread])}\r\n                            {:Header \"Beta\"  :columns (mapv tables/risk-table-columns [:contrib-beta])}\r\n                            {:Header \"Position\" :columns (mapv tables/risk-table-columns [:value :nominal])}\r\n                            ;{:Header \"Index contribution\" :columns (mapv tables/table-columns [:bm-contrib-yield :bm-contrib-eir-duration])}\r\n                            {:Header (if is-tree \"Bond analytics (median)\" \"Bond analytics\") :columns (mapv tables/risk-table-columns [:yield :z-spread :g-spread :duration])}\r\n                            {:Header \"Description\" :columns (mapv tables/risk-table-columns (into [] (concat [:rating :isin] additional-des-cols [:description])))}]\r\n      :showPagination      (not is-tree)\r\n      :sortable            (not is-tree)\r\n      :filterable          (not is-tree)\r\n      :pageSize            (if is-tree (inc (count (distinct (map (keyword (first accessors)) portfolio-positions)))) 25) ;(inc (count display))\r\n      :className           \"-striped -highlight\"\r\n      :pivotBy             (if is-tree accessors [])\r\n      :getTrProps          single-bond-trade-history\r\n      :defaultFiltered     (if is-tree [] @(rf/subscribe [:single-portfolio-risk/table-filter])) ; [{:id \"analyst\" :value \"Tammy\"}]\r\n      :onFilteredChange    #(rf/dispatch [:single-portfolio-risk/table-filter %])}]))\r\n\r\n\r\n(defn multiple-portfolio-risk-display []\r\n  (let [display-key-one @(rf/subscribe [:multiple-portfolio-risk/field-one])\r\n        width-one 100                                      ;(get-in tables/table-columns [display-key-one :width])\r\n        is-tree (= @(rf/subscribe [:multiple-portfolio-risk/display-style]) \"Tree\")\r\n        risk-choices (let [rfil @(rf/subscribe [:multiple-portfolio-risk/filter])] (mapv #(if (not= \"None\" (rfil %)) (rfil %)) (range 1 4)))\r\n        grouping-columns (into [] (for [r (remove nil? (conj risk-choices :name))] (tables/risk-table-columns r)))\r\n        accessors (mapv :accessor grouping-columns)\r\n        display-one @(rf/subscribe [:multiple-portfolio-risk/table])\r\n        cols (into [] (for [p @(rf/subscribe [:portfolios]) :when (some #{p} @(rf/subscribe [:multiple-portfolio-risk/selected-portfolios]))]\r\n                        {:Header p\r\n                         :accessor p\r\n                         :width width-one\r\n                         :style {:textAlign \"right\"}\r\n                         :aggregate tables/sum-rows\r\n                         :Cell (get-in tables/risk-table-columns [display-key-one :Cell])\r\n                         :filterable false}))]\r\n    [:> ReactTable\r\n     {:data                display-one\r\n      :defaultFilterMethod tables/case-insensitive-filter\r\n      :columns             [{:Header \"Groups\" :columns grouping-columns}\r\n                            {:Header  (str \"Portfolio \" (name display-key-one)) :columns cols}\r\n                            {:Header  \"Description\" :columns (mapv tables/risk-table-columns [:rating :isin :description])}]\r\n      :showPagination      (not is-tree)\r\n      :sortable            (not is-tree)\r\n      :filterable          (not is-tree)\r\n      :pageSize            (if is-tree (inc (count (distinct (map (keyword (first accessors)) display-one)))) 25)\r\n      :className           \"-striped -highlight\"\r\n      :pivotBy             (if is-tree accessors [])\r\n      :defaultFiltered     (if is-tree [] @(rf/subscribe [:multiple-portfolio-risk/table-filter])) ; [{:id \"analyst\" :value \"Tammy\"}]\r\n      :onFilteredChange    #(rf/dispatch [:multiple-portfolio-risk/table-filter %])}]))\r\n\r\n(defn portfolio-alignment-risk-display []\r\n  (let [\r\n        group (:portfolios (first (filter #(= (:id %) @(rf/subscribe [:portfolio-alignment/group])) static/portfolio-alignment-groups)))\r\n        base-portfolio (first group)\r\n        portfolios (rest group)\r\n        display-key @(rf/subscribe [:portfolio-alignment/field])\r\n        cell-one (get-in tables/risk-table-columns [display-key :Cell])\r\n        width-one 100\r\n        is-tree (= @(rf/subscribe [:portfolio-alignment/display-style]) \"Tree\")\r\n        risk-choices (let [rfil @(rf/subscribe [:portfolio-alignment/filter])] (mapv #(if (not= \"None\" (rfil %)) (rfil %)) (range 1 4)))\r\n        grouping-columns (into [] (for [r (remove nil? (conj risk-choices :name))] (tables/risk-table-columns r)))\r\n        accessors (mapv :accessor grouping-columns)\r\n        display @(rf/subscribe [:portfolio-alignment/table])]\r\n    [:> ReactTable\r\n     {:data                display\r\n      :defaultFilterMethod tables/case-insensitive-filter\r\n      :columns\r\n                           [{:Header \"Groups\" :columns grouping-columns}\r\n                            {:Header  (str \"Portfolio \" (name display-key) \" vs \" base-portfolio)\r\n                             :columns (into [] (for [p portfolios] {:Header p :accessor p :width width-one :style {:textAlign \"right\"} :aggregate tables/sum-rows :Cell cell-one :filterable false}))}\r\n                            {:Header  \"Description\"\r\n                             :columns [{:Header \"thinkFolio ID\" :accessor \"description\" :width 500} (tables/risk-table-columns :rating)]}]\r\n      :showPagination      (not is-tree)\r\n      :sortable            (not is-tree)\r\n      :filterable          (not is-tree)\r\n      :pageSize            (if is-tree (inc (count (distinct (map (keyword (first accessors)) display)))) 25)\r\n      :className           \"-striped -highlight\"\r\n      :pivotBy             (if is-tree accessors [])\r\n      :defaultFiltered     (if is-tree [] @(rf/subscribe [:portfolio-alignment/table-filter])) ; [{:id \"analyst\" :value \"Tammy\"}]\r\n      :onFilteredChange    #(rf/dispatch [:portfolio-alignment/table-filter %])}]))\r\n\r\n(defn shortcut-row [key]\r\n  (let [shortcut (rf/subscribe [key])]\r\n    (into [] (concat [[title :label \"Shortcuts:\" :level :level3]]\r\n               (into [] (for [i (range 1 5)]\r\n                          [md-circle-icon-button\r\n                           :md-icon-name (str \"zmdi-collection-item-\" i)\r\n                           :class (if (= @shortcut i) \"active\" \"default\")\r\n                           :on-click #(rf/dispatch [key i])]))))))\r\n\r\n(defn filtering-row [key]\r\n  (let [risk-filter (rf/subscribe [key])]\r\n    (into [] (for [i (range 1 4)]\r\n               [single-dropdown\r\n                :width dropdown-width\r\n                :model (r/cursor risk-filter [i])\r\n                :choices static/risk-choice-map\r\n                :on-change #(rf/dispatch [key i %])]))))\r\n\r\n(defn csv-link [data filename]\r\n  (tools/download-object-as-csv (clj->js (tools/vector-of-maps->csv data)) (str filename \".csv\")))\r\n\r\n;(defn csv-link-single-portfolio []\r\n;  (let [portfolio @(rf/subscribe [:single-portfolio-risk/portfolio])]\r\n;    (tools/download-object-as-csv\r\n;      (clj->js (tools/vector-of-maps->csv (filter #(= (:portfolio %) portfolio) @(rf/subscribe [:positions]))))\r\n;      (str portfolio \".csv\"))))\r\n\r\n(defn single-portfolio-risk-controller []\r\n  (let [portfolio-map (into [] (for [p @(rf/subscribe [:portfolios])] {:id p :label p}))\r\n        display-style (rf/subscribe [:single-portfolio-risk/display-style])\r\n        portfolio (rf/subscribe [:single-portfolio-risk/portfolio])\r\n        hide-zero-risk (rf/subscribe [:single-portfolio-risk/hide-zero-holdings])]\r\n    [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label (str \"Portfolio drill-down \" @(rf/subscribe [:qt-date])) :level :level1]\r\n                 [h-box :gap \"50px\"\r\n                  :children [\r\n                             [v-box :gap \"15px\"\r\n                              :children [\r\n                                         [h-box\r\n                                          :gap \"10px\"\r\n                                          :children [\r\n                                                     [title :label \"Display type:\" :level :level3]\r\n                                                     [single-dropdown :width dropdown-width :model display-style :choices static/tree-table-choices :on-change #(rf/dispatch [:single-portfolio-risk/display-style %])]]]\r\n                                         [checkbox :model hide-zero-risk :label \"Hide zero positions in table view\" :disabled? (= @display-style \"Tree\") :on-change #(rf/dispatch [:single-portfolio-risk/hide-zero-holdings %])]]]\r\n                             [v-box :gap \"10px\" :children [\r\n                                                           [h-box :gap \"10px\" :children\r\n                                                            (into [] (concat [[title :label \"Filtering:\" :level :level3]\r\n                                                                              [single-dropdown :width dropdown-width :model portfolio :choices portfolio-map :on-change #(rf/dispatch [:single-portfolio-risk/portfolio %])]]\r\n                                                                             (filtering-row :single-portfolio-risk/filter)))]\r\n                                                           [h-box :gap \"20px\" :children (into [] (concat\r\n                                                                                                   (shortcut-row :single-portfolio-risk/shortcut)\r\n                                                                                                   [[gap :size \"50px\"]\r\n                                                                                                    [title :label \"Download:\" :level :level3]\r\n                                                                                                     [md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(csv-link @(rf/subscribe [:single-portfolio-risk/table]) @portfolio)]]))]]]]]\r\n                 [single-portfolio-risk-display]]]]))\r\n\r\n\r\n;(defn csv-link-multiple-portfolio []\r\n;  (tools/download-object-as-csv\r\n;    (clj->js (tools/vector-of-maps->csv @(rf/subscribe [:multiple-portfolio-risk/table])))\r\n;    \"pivot.csv\"))\r\n\r\n(defn multiple-portfolio-risk-controller []\r\n  (let [\r\n        portfolio-map (into [] (for [p  @(rf/subscribe [:portfolios])] {:id p :label p}))\r\n        display-style (rf/subscribe [:multiple-portfolio-risk/display-style])\r\n        portfolios @(rf/subscribe [:portfolios])\r\n        selected-portfolios (rf/subscribe [:multiple-portfolio-risk/selected-portfolios])\r\n        number-of-fields (rf/subscribe [:multiple-portfolio-risk/field-number])\r\n        field-one (rf/subscribe [:multiple-portfolio-risk/field-one])\r\n        field-two (rf/subscribe [:multiple-portfolio-risk/field-two])\r\n        hide-zero-risk (rf/subscribe [:multiple-portfolio-risk/hide-zero-holdings])\r\n        ]\r\n    [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label (str \"Portfolio drill-down \" @(rf/subscribe [:qt-date])) :level :level1]\r\n                 [h-box :gap \"50px\"\r\n                  :children\r\n                             [\r\n                              [v-box :gap \"20px\"\r\n                               :children [\r\n                                          [h-box :gap \"10px\" :children [[title :label \"Display type:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model display-style :choices static/tree-table-choices :on-change #(rf/dispatch [:multiple-portfolio-risk/display-style %])]]]\r\n                                          [checkbox :model hide-zero-risk :label \"Hide zero positions in table view\" :disabled? (= @display-style \"Tree\") :on-change #(rf/dispatch [:multiple-portfolio-risk/hide-zero-holdings %])]\r\n                                          [h-box :gap \"10px\" :children [[title :label \"Field:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model field-one :choices static/risk-field-choices :on-change #(rf/dispatch [:multiple-portfolio-risk/field-one %])]]]]]\r\n                              [v-box :gap \"10px\"\r\n                               :children [[title :label \"Portfolios:\" :level :level3]\r\n                                          [button :style {:width \"100%\"} :label \"All\"      :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set portfolios)])]\r\n                                          [button :style {:width \"100%\"} :label \"None\"     :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios #{}])]\r\n                                          [button :style {:width \"100%\"} :label \"CEMBI\"    :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set (:portfolios (first (filter (fn [x] (= (:id x) :cembi)) static/portfolio-alignment-groups))))])]\r\n                                          [button :style {:width \"100%\"} :label \"Allianz\"  :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set (:portfolios (first (filter (fn [x] (= (:id x) :allianz)) static/portfolio-alignment-groups))))])]\r\n                                          [button :style {:width \"100%\"} :label \"IG\"       :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set (:portfolios (first (filter (fn [x] (= (:id x) :ig)) static/portfolio-alignment-groups))))])]\r\n                                          [button :style {:width \"100%\"} :label \"Talanx\"   :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set (:portfolios (first (filter (fn [x] (= (:id x) :talanx)) static/portfolio-alignment-groups))))])]]]\r\n                              [selection-list :width dropdown-width :model selected-portfolios :choices portfolio-map :on-change #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios %])]\r\n                              [v-box :gap \"20px\"\r\n                               :children [[h-box :gap \"10px\" :children (into [] (concat [[title :label \"Filtering:\" :level :level3]] (filtering-row :multiple-portfolio-risk/filter)))]\r\n                                          [h-box :gap \"10px\" :children (shortcut-row :multiple-portfolio-risk/shortcut)]\r\n                                          [h-box :gap \"10px\" :children [ [title :label \"Download:\" :level :level3]\r\n                                                                        [md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(csv-link @(rf/subscribe [:multiple-portfolio-risk/table]) \"pivot\")]]]]]]]\r\n                 [multiple-portfolio-risk-display]]]]))\r\n\r\n;(defn csv-link-portfolio-alignment []\r\n;  (tools/download-object-as-csv\r\n;    (clj->js (tools/vector-of-maps->csv @(rf/subscribe [:portfolio-alignment/table])))\r\n;    \"alignment-pivot.csv\"))\r\n\r\n(defn portfolio-alignment-risk-controller []\r\n  (let [display-style (rf/subscribe [:portfolio-alignment/display-style])\r\n        ;risk-filter (rf/subscribe [:portfolio-alignment/filter])\r\n        portfolio-alignment-group (rf/subscribe [:portfolio-alignment/group])\r\n        field (rf/subscribe [:portfolio-alignment/field])\r\n        threshold (rf/subscribe [:portfolio-alignment/threshold])]\r\n    [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label (str \"Portfolio alignment \" @(rf/subscribe [:qt-date])) :level :level1]\r\n                 [h-box :gap \"50px\"\r\n                  :children\r\n                  [[v-box :gap \"20px\"\r\n                    :children [[h-box :gap \"10px\" :children [[title :label \"Display type:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model display-style :choices static/tree-table-choices :on-change #(rf/dispatch [:portfolio-alignment/display-style %])]]]\r\n                               [h-box :gap \"10px\" :children [[title :label \"Field:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model field :choices static/risk-field-choices :on-change #(rf/dispatch [:portfolio-alignment/field %])]]]\r\n                               [h-box :gap \"10px\" :children [[title :label \"Threshold:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model threshold :choices static/threshold-choices-alignment :on-change #(rf/dispatch [:portfolio-alignment/threshold %])]]]]]\r\n                   [v-box :gap \"20px\"\r\n                     :children [[h-box :gap \"10px\" :children [[title :label \"Portfolios:\" :level :level3] [gap :size \"1\"]\r\n                                                              [single-dropdown :width dropdown-width :model portfolio-alignment-group :choices static/portfolio-alignment-groups :on-change #(rf/dispatch [:portfolio-alignment/group %])]]]]]\r\n\r\n                   [v-box :gap \"20px\"\r\n                    :children [[h-box :gap \"10px\" :children (into [] (concat [[title :label \"Filtering:\" :level :level3]] (filtering-row :portfolio-alignment/filter)))]\r\n                               [h-box :gap \"10px\" :children (shortcut-row :portfolio-alignment/shortcut)]\r\n                               [h-box :gap \"10px\" :children [ [title :label \"Download:\" :level :level3]\r\n                                                             [md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(csv-link @(rf/subscribe [:portfolio-alignment/table]) \"alignment\")]]]]]]]\r\n\r\n\r\n\r\n                 ;[h-box :gap \"10px\"\r\n                 ; :children (into [] (concat [\r\n                 ;                             [v-box :gap \"15px\" :children [[title :label \"Display type:\" :level :level3] [title :label \"Field:\" :level :level3] [title :label \"Threshold:\" :level :level3]]]\r\n                 ;                             [v-box :gap \"10px\" :children [[single-dropdown :width dropdown-width :model display-style :choices [{:id \"Table\" :label \"Table\"} {:id \"Tree\" :label \"Tree\"}] :on-change #(rf/dispatch [:portfolio-alignment/display-style %])]\r\n                 ;                                                           [single-dropdown :width dropdown-width :model field :choices static/field-choices-alignment :on-change #(rf/dispatch [:portfolio-alignment/field %])]\r\n                 ;                                                           [single-dropdown :width dropdown-width :model threshold :choices static/threshold-choices-alignment :on-change #(rf/dispatch [:portfolio-alignment/threshold %])]\r\n                 ;                                                           ]]\r\n                 ;                             [gap :size \"50px\"]\r\n                 ;                             [title :label \"Filtering:\" :level :level3]\r\n                 ;                             [single-dropdown :width dropdown-width :model portfolio-alignment-group :choices static/portfolio-alignment-groups :on-change #(rf/dispatch [:portfolio-alignment/group %])]]\r\n                 ;                            (into [] (for [i (range 1 4)] [single-dropdown :width dropdown-width :model (r/cursor risk-filter [i]) :choices static/risk-choice-map :on-change #(rf/dispatch [:portfolio-alignment/filter i %])]))))]\r\n                 [portfolio-alignment-risk-display]]]]))\r\n\r\n\r\n(defn go-to-portfolio-risk [state rowInfo instance] (clj->js {:onClick #(do (rf/dispatch-sync [:active-home :single-portfolio]) (rf/dispatch [:single-portfolio-risk/portfolio (aget rowInfo \"row\" \"portfolio\")])) :style {:cursor \"pointer\"}}))\r\n\r\n(defn summary-display []\r\n   [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label (str \"Summary \" @(rf/subscribe [:qt-date])) :level :level1]\r\n    [:> ReactTable\r\n     {:data           @(rf/subscribe [:summary-display/table])\r\n      :columns        [{:Header \"Portfolio\" :accessor \"portfolio\" :width 120}\r\n                       {:Header \"Balance\" :columns (mapv tables/risk-table-columns [:value :cash-pct])}\r\n                       {:Header \"Value\" :columns [(assoc (tables/risk-table-columns :contrib-yield) :Header \"Yield\")\r\n                                                  (tables/risk-table-columns :contrib-bond-yield)\r\n                                                  (assoc (tables/risk-table-columns :contrib-mdur) :Header \"M Dur\")\r\n                                                  (tables/risk-table-columns :rating)\r\n                                                  (assoc (tables/risk-table-columns :rating-score) :width 60)\r\n                                                  (assoc (tables/risk-table-columns :contrib-zspread) :Header \"Z-spread\")\r\n                                                  (assoc (tables/risk-table-columns :contrib-gspread) :Header \"G-spread\")\r\n                                                  (assoc (tables/risk-table-columns :contrib-beta) :Header \"Beta\")\r\n                                                  ]}\r\n                       ]\r\n      :showPagination false\r\n      :pageSize       (count @(rf/subscribe [:portfolios]))\r\n      :getTrProps     go-to-portfolio-risk\r\n      :className      \"-striped -highlight\"}]]]])\r\n"]}