{"version":3,"sources":["jasminegui/riskviews.cljs"],"mappings":"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","names":["jasminegui.riskviews/round0pc-trigger","this","reagent.core/as-element","temp__5733__auto__","x","c","v","G__74436","G__74437","goog.string/format","colorize","jasminegui.riskviews/strategy-pop-up","jasminegui.riskviews/last-price-props","status","prefix","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__74462","G__74463","cljs.core/clj->js","jasminegui.riskviews/dropdown-width","jasminegui.riskviews/single-portfolio-risk-display","cljs.core/deref","p1__74471#","positions","G__74477","re-frame.core/subscribe","portfolio","G__74478","is-tree","G__74480","portfolio-positions","p1__74467#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","risk-choices","rfil","G__74482","p1__74468#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.range.cljs$core$IFn$_invoke$arity$2","grouping-columns","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4529__auto__","s__74486","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__74488","cljs.core/chunk-buffer","i__74487","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__74485","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","r","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","jasminegui.tables/risk-table-columns","additional-des-cols","cljs.core/set","cljs.core.map.cljs$core$IFn$_invoke$arity$2","jasminegui.static/risk-choice-map","accessors","display","G__74500","js/module$node_modules$react_table$lib$index.default","jasminegui.tables/case-insensitive-filter","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","G__74505","G__74502","re-frame.core/dispatch","jasminegui.riskviews/multiple-portfolio-risk-display","p1__74512#","display-key-one","G__74514","width-one","G__74515","G__74517","p1__74511#","s__74522","b__74524","i__74523","iter__74521","display-one","G__74539","cols","s__74541","b__74543","i__74542","iter__74540","p","G__74564","cljs.core/some","G__74554","G__74560","jasminegui.tables/sum-rows","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/name","G__74575","G__74566","jasminegui.riskviews/portfolio-alignment-risk-display","p1__74584#","group","p1__74579#","G__74589","jasminegui.static/portfolio-alignment-groups","base-portfolio","portfolios","display-key","G__74591","cell-one","G__74595","G__74596","p1__74582#","s__74601","b__74603","i__74602","iter__74600","G__74615","s__74621","b__74623","i__74622","iter__74620","G__74639","G__74641","G__74618","jasminegui.riskviews/shortcut-row","key","shortcut","G__74648","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","re-com.core/title","s__74650","b__74652","i__74651","iter__74649","i","re-com.core/md-circle-icon-button","G__74662","G__74663","jasminegui.riskviews/filtering-row","risk-filter","G__74672","s__74676","b__74678","i__74677","p1__74667#","iter__74675","re-com.core/single-dropdown","reagent.core/cursor","G__74692","G__74700","jasminegui.riskviews/csv-link","data","filename","jasminegui.tools/download-object-as-csv","jasminegui.tools/vector-of-maps->csv","jasminegui.riskviews/single-portfolio-risk-controller","p1__74710#","p1__74712#","portfolio-map","s__74722","b__74724","i__74723","iter__74721","G__74736","display-style","G__74737","G__74739","hide-zero-risk","G__74740","re-com.core/box","re-com.core/v-box","G__74742","re-com.core/h-box","jasminegui.static/tree-table-choices","G__74743","re-com.core/checkbox","G__74745","p1__74718#","G__74746","re-com.core/gap","G__74748","jasminegui.riskviews/multiple-portfolio-risk-controller","p1__74752#","p1__74753#","p1__74754#","p1__74755#","s__74757","b__74759","i__74758","iter__74756","G__74762","G__74763","G__74764","selected-portfolios","G__74765","number-of-fields","G__74768","field-one","G__74770","field-two","G__74771","G__74773","G__74776","G__74777","G__74780","jasminegui.static/risk-field-choices","G__74781","re-com.core/button","G__74782","G__74785","G__74786","G__74787","G__74789","G__74791","re-com.core/selection-list","G__74794","G__74796","jasminegui.riskviews/portfolio-alignment-risk-controller","p1__74797#","p1__74798#","p1__74799#","p1__74800#","G__74802","portfolio-alignment-group","G__74803","field","G__74804","threshold","G__74805","G__74807","G__74808","G__74810","jasminegui.static/threshold-choices-alignment","G__74811","G__74812","G__74813","jasminegui.riskviews/go-to-portfolio-risk","state","rowInfo","instance","G__74816","re-frame.core/dispatch-sync","G__74817","jasminegui.riskviews/summary-display","G__74821","G__74822","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","G__74823","G__74824","G__74825","G__74826","G__74827","G__74828","G__74829","G__74830","G__74831","cljs.core/chunk-first"],"sourcesContent":["(ns jasminegui.riskviews\r\n  (:require\r\n    ; [oz.core :as oz]\r\n    [re-frame.core :as rf]\r\n    [reagent.core :as r]\r\n    [goog.string :as gstring]\r\n    [goog.string.format]\r\n    [re-com.core :refer [p p-span h-box v-box box gap line scroller border label title button close-button checkbox hyperlink-href slider horizontal-bar-tabs radio-button info-button\r\n                         single-dropdown hyperlink modal-panel alert-box throbber input-password selection-list md-circle-icon-button\r\n                         input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip datepicker-dropdown] :refer-macros [handler-fn]]\r\n    [re-com.box :refer [h-box-args-desc v-box-args-desc box-args-desc gap-args-desc line-args-desc scroller-args-desc border-args-desc flex-child-style]]\r\n    [re-com.util :refer [px]]\r\n    [\"react-table\" :as rt :default ReactTable]\r\n    [jasminegui.mount :as mount]\r\n    [jasminegui.static :as static]\r\n    [jasminegui.tools :as tools]\r\n    [jasminegui.tables :as tables]\r\n\r\n    [re-com.validate :refer [string-or-hiccup? alert-type? vector-of-maps?]])\r\n  (:import (goog.i18n NumberFormat)\r\n           (goog.i18n.NumberFormat Format))\r\n  )\r\n\r\n\r\n\r\n(defn round0pc-trigger  [this]\r\n  (r/as-element\r\n    (if-let [x (aget this \"value\")]\r\n      (letfn [(colorize [c v] [:div {:style {:color c}} (gstring/format \"%.0f%\" (* 100 v))])]\r\n        (cond\r\n          (>= x 1.0) (colorize \"red\" x)\r\n          (>= x 0.5) (colorize \"orange\" x)\r\n          (>= x 0.0) (colorize \"black\" x)\r\n          (< x 0.0) \"<0%\"\r\n          :else \"-\"))\r\n      \"-\")))\r\n\r\n(defn strategy-pop-up [this]\r\n  (r/as-element [:div [:span {:title (aget this \"row\" \"strategy\")} (aget this \"row\" \"strategy-shortcut\")]]))\r\n\r\n(defn last-price-props [this]\r\n  (if-not (nil? this)\r\n    (let [status (aget this \"row\" \"status\")\r\n          prefix (if (= status \"CLOSED\") \"(c) \" \"\")]\r\n      (r/as-element (str prefix (gstring/format \"%.2f\" (aget this \"value\")))))\r\n    (clj->js {:style nil})))\r\n\r\n;(defn format-date-from-int-rt [this] (tools/format-date-from-int (aget this \"value\")))\r\n;\r\n;(defn status-props [this]\r\n;  (if-not (nil? this)\r\n;    (let [status (aget this \"row\" \"status\")]\r\n;      (r/as-element (if (= status \"CLOSED\") (tools/format-date-from-int (aget this \"row\" \"exit-date\")) status)))\r\n;    (clj->js {:style nil})))\r\n;\r\n;(defn exit-date-props [this]\r\n;  (if-not (nil? this)\r\n;    (let [status (aget this \"row\" \"status\")]\r\n;      (r/as-element (if (= status \"CLOSED\") (tools/format-date-from-int (aget this \"row\" \"exit-date\")) status)))\r\n;    (clj->js {:style nil})))\r\n\r\n;(defn case-insensitive-filter [filterfn row]\r\n;  \"filterfn is {id: column_name value: text_in_filter_box\"\r\n;  (.includes  (.toLowerCase (str (aget row (aget filterfn \"id\"))))  (.toLowerCase (aget filterfn \"value\"))))\r\n;\r\n;(defn exit-date-filter [filterfn row]\r\n;  \"if user types LIVE, filters by today's exit date\"\r\n;  (if (.includes \"live\" (.toLowerCase (aget filterfn \"value\")))\r\n;    (.includes (.toLowerCase (str (aget row (aget filterfn \"id\")))) (tools/gdate-to-yyyymmdd static/gtoday))\r\n;    (.includes (.toLowerCase (str (aget row (aget filterfn \"id\")))) (.toLowerCase (aget filterfn \"value\")))))\r\n;\r\n\r\n\r\n;(defn sum-rows [vals] (reduce + vals))\r\n\r\n\r\n(def dropdown-width \"150px\")\r\n\r\n(defn single-portfolio-risk-display []\r\n  (let [positions @(rf/subscribe [:positions])\r\n        portfolio @(rf/subscribe [:single-portfolio-risk/portfolio])\r\n        is-tree (= @(rf/subscribe [:single-portfolio-risk/display-style]) \"Tree\")\r\n        portfolio-positions (filter #(= (:portfolio %) portfolio) positions)\r\n        risk-choices (let [rfil @(rf/subscribe [:single-portfolio-risk/filter])] (mapv #(if (not= \"None\" (rfil %)) (rfil %)) (range 1 4)))\r\n        grouping-columns (into [] (for [r (remove nil? (conj risk-choices :name))] (tables/risk-table-columns r)))\r\n        additional-des-cols (remove (set (conj risk-choices \"None\")) (map :id static/risk-choice-map))\r\n        accessors (mapv :accessor grouping-columns)\r\n        display @(rf/subscribe [:single-portfolio-risk/table])]\r\n    [:> ReactTable\r\n     {:data                display\r\n      :defaultFilterMethod tables/case-insensitive-filter\r\n      :columns             [{:Header \"Groups\" :columns grouping-columns}\r\n                            {:Header \"NAV\" :columns (mapv tables/risk-table-columns [:nav :bm-weight :weight-delta])}\r\n                            {:Header \"Duration\" :columns (mapv tables/risk-table-columns [:contrib-mdur :bm-contrib-eir-duration :mdur-delta])}\r\n                            {:Header \"Yield\" :columns (mapv tables/risk-table-columns [:contrib-yield :bm-contrib-yield])}\r\n                            {:Header \"Z-spread\" :columns (mapv tables/risk-table-columns [:contrib-zspread])}\r\n                            {:Header \"Beta\"  :columns (mapv tables/risk-table-columns [:contrib-beta])}\r\n                            {:Header \"Position\" :columns (mapv tables/risk-table-columns [:value :nominal])}\r\n                            ;{:Header \"Index contribution\" :columns (mapv tables/table-columns [:bm-contrib-yield :bm-contrib-eir-duration])}\r\n                            {:Header (if is-tree \"Bond analytics (median)\" \"Bond analytics\") :columns (mapv tables/risk-table-columns [:yield :z-spread :g-spread :duration])}\r\n                            {:Header \"Description\" :columns (mapv tables/risk-table-columns (into [] (concat [:rating :isin] additional-des-cols [:description])))}]\r\n      :showPagination      (not is-tree)\r\n      :sortable            (not is-tree)\r\n      :filterable          (not is-tree)\r\n      :pageSize            (if is-tree (inc (count (distinct (map (keyword (first accessors)) portfolio-positions)))) 25) ;(inc (count display))\r\n      :className           \"-striped -highlight\"\r\n      :pivotBy             (if is-tree accessors [])\r\n      :defaultFiltered     (if is-tree [] @(rf/subscribe [:single-portfolio-risk/table-filter])) ; [{:id \"analyst\" :value \"Tammy\"}]\r\n      :onFilteredChange    #(rf/dispatch [:single-portfolio-risk/table-filter %])}]))\r\n\r\n\r\n(defn multiple-portfolio-risk-display []\r\n  (let [display-key-one @(rf/subscribe [:multiple-portfolio-risk/field-one])\r\n        width-one 100                                      ;(get-in tables/table-columns [display-key-one :width])\r\n        is-tree (= @(rf/subscribe [:multiple-portfolio-risk/display-style]) \"Tree\")\r\n        risk-choices (let [rfil @(rf/subscribe [:multiple-portfolio-risk/filter])] (mapv #(if (not= \"None\" (rfil %)) (rfil %)) (range 1 4)))\r\n        grouping-columns (into [] (for [r (remove nil? (conj risk-choices :name))] (tables/risk-table-columns r)))\r\n        accessors (mapv :accessor grouping-columns)\r\n        display-one @(rf/subscribe [:multiple-portfolio-risk/table])\r\n        cols (into [] (for [p @(rf/subscribe [:portfolios]) :when (some #{p} @(rf/subscribe [:multiple-portfolio-risk/selected-portfolios]))]\r\n                        {:Header p\r\n                         :accessor p\r\n                         :width width-one\r\n                         :style {:textAlign \"right\"}\r\n                         :aggregate tables/sum-rows\r\n                         :Cell (get-in tables/risk-table-columns [display-key-one :Cell])\r\n                         :filterable false}))]\r\n    [:> ReactTable\r\n     {:data                display-one\r\n      :defaultFilterMethod tables/case-insensitive-filter\r\n      :columns             [{:Header \"Groups\" :columns grouping-columns}\r\n                            {:Header  (str \"Portfolio \" (name display-key-one)) :columns cols}\r\n                            {:Header  \"Description\" :columns (mapv tables/risk-table-columns [:rating :isin :description])}]\r\n      :showPagination      (not is-tree)\r\n      :sortable            (not is-tree)\r\n      :filterable          (not is-tree)\r\n      :pageSize            (if is-tree (inc (count (distinct (map (keyword (first accessors)) display-one)))) 25)\r\n      :className           \"-striped -highlight\"\r\n      :pivotBy             (if is-tree accessors [])\r\n      :defaultFiltered     (if is-tree [] @(rf/subscribe [:multiple-portfolio-risk/table-filter])) ; [{:id \"analyst\" :value \"Tammy\"}]\r\n      :onFilteredChange    #(rf/dispatch [:multiple-portfolio-risk/table-filter %])}]))\r\n\r\n(defn portfolio-alignment-risk-display []\r\n  (let [\r\n        group (:portfolios (first (filter #(= (:id %) @(rf/subscribe [:portfolio-alignment/group])) static/portfolio-alignment-groups)))\r\n        base-portfolio (first group)\r\n        portfolios (rest group)\r\n        display-key @(rf/subscribe [:portfolio-alignment/field])\r\n        cell-one (get-in tables/risk-table-columns [display-key :Cell])\r\n        width-one 100\r\n        is-tree (= @(rf/subscribe [:portfolio-alignment/display-style]) \"Tree\")\r\n        risk-choices (let [rfil @(rf/subscribe [:portfolio-alignment/filter])] (mapv #(if (not= \"None\" (rfil %)) (rfil %)) (range 1 4)))\r\n        grouping-columns (into [] (for [r (remove nil? (conj risk-choices :name))] (tables/risk-table-columns r)))\r\n        accessors (mapv :accessor grouping-columns)\r\n        display @(rf/subscribe [:portfolio-alignment/table])]\r\n    [:> ReactTable\r\n     {:data                display\r\n      :defaultFilterMethod tables/case-insensitive-filter\r\n      :columns\r\n                           [{:Header \"Groups\" :columns grouping-columns}\r\n                            {:Header  (str \"Portfolio \" (name display-key) \" vs \" base-portfolio)\r\n                             :columns (into [] (for [p portfolios] {:Header p :accessor p :width width-one :style {:textAlign \"right\"} :aggregate tables/sum-rows :Cell cell-one :filterable false}))}\r\n                            {:Header  \"Description\"\r\n                             :columns [{:Header \"thinkFolio ID\" :accessor \"description\" :width 500} (tables/risk-table-columns :rating)]}]\r\n      :showPagination      (not is-tree)\r\n      :sortable            (not is-tree)\r\n      :filterable          (not is-tree)\r\n      :pageSize            (if is-tree (inc (count (distinct (map (keyword (first accessors)) display)))) 25)\r\n      :className           \"-striped -highlight\"\r\n      :pivotBy             (if is-tree accessors [])\r\n      :defaultFiltered     (if is-tree [] @(rf/subscribe [:portfolio-alignment/table-filter])) ; [{:id \"analyst\" :value \"Tammy\"}]\r\n      :onFilteredChange    #(rf/dispatch [:portfolio-alignment/table-filter %])}]))\r\n\r\n(defn shortcut-row [key]\r\n  (let [shortcut (rf/subscribe [key])]\r\n    (into [] (concat [[title :label \"Shortcuts:\" :level :level3]]\r\n               (into [] (for [i (range 1 5)]\r\n                          [md-circle-icon-button\r\n                           :md-icon-name (str \"zmdi-collection-item-\" i)\r\n                           :class (if (= @shortcut i) \"active\" \"default\")\r\n                           :on-click #(rf/dispatch [key i])]))))))\r\n\r\n(defn filtering-row [key]\r\n  (let [risk-filter (rf/subscribe [key])]\r\n    (into [] (for [i (range 1 4)]\r\n               [single-dropdown\r\n                :width dropdown-width\r\n                :model (r/cursor risk-filter [i])\r\n                :choices static/risk-choice-map\r\n                :on-change #(rf/dispatch [key i %])]))))\r\n\r\n(defn csv-link [data filename]\r\n  (tools/download-object-as-csv (clj->js (tools/vector-of-maps->csv data)) (str filename \".csv\")))\r\n\r\n;(defn csv-link-single-portfolio []\r\n;  (let [portfolio @(rf/subscribe [:single-portfolio-risk/portfolio])]\r\n;    (tools/download-object-as-csv\r\n;      (clj->js (tools/vector-of-maps->csv (filter #(= (:portfolio %) portfolio) @(rf/subscribe [:positions]))))\r\n;      (str portfolio \".csv\"))))\r\n\r\n(defn single-portfolio-risk-controller []\r\n  (let [portfolio-map (into [] (for [p @(rf/subscribe [:portfolios])] {:id p :label p}))\r\n        display-style (rf/subscribe [:single-portfolio-risk/display-style])\r\n        portfolio (rf/subscribe [:single-portfolio-risk/portfolio])\r\n        hide-zero-risk (rf/subscribe [:single-portfolio-risk/hide-zero-holdings])]\r\n    [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label (str \"Portfolio drill-down \" @(rf/subscribe [:qt-date])) :level :level1]\r\n                 [h-box :gap \"50px\"\r\n                  :children [\r\n                             [v-box :gap \"15px\"\r\n                              :children [\r\n                                         [h-box\r\n                                          :gap \"10px\"\r\n                                          :children [\r\n                                                     [title :label \"Display type:\" :level :level3]\r\n                                                     [single-dropdown :width dropdown-width :model display-style :choices static/tree-table-choices :on-change #(rf/dispatch [:single-portfolio-risk/display-style %])]]]\r\n                                         [checkbox :model hide-zero-risk :label \"Hide zero positions in table view\" :disabled? (= @display-style \"Tree\") :on-change #(rf/dispatch [:single-portfolio-risk/hide-zero-holdings %])]]]\r\n                             [v-box :gap \"10px\" :children [\r\n                                                           [h-box :gap \"10px\" :children\r\n                                                            (into [] (concat [[title :label \"Filtering:\" :level :level3]\r\n                                                                              [single-dropdown :width dropdown-width :model portfolio :choices portfolio-map :on-change #(rf/dispatch [:single-portfolio-risk/portfolio %])]]\r\n                                                                             (filtering-row :single-portfolio-risk/filter)))]\r\n                                                           [h-box :gap \"20px\" :children (into [] (concat\r\n                                                                                                   (shortcut-row :single-portfolio-risk/shortcut)\r\n                                                                                                   [[gap :size \"50px\"]\r\n                                                                                                    [title :label \"Download:\" :level :level3]\r\n                                                                                                     [md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(csv-link @(rf/subscribe [:single-portfolio-risk/table]) @portfolio)]]))]]]]]\r\n                 [single-portfolio-risk-display]]]]))\r\n\r\n\r\n;(defn csv-link-multiple-portfolio []\r\n;  (tools/download-object-as-csv\r\n;    (clj->js (tools/vector-of-maps->csv @(rf/subscribe [:multiple-portfolio-risk/table])))\r\n;    \"pivot.csv\"))\r\n\r\n(defn multiple-portfolio-risk-controller []\r\n  (let [\r\n        portfolio-map (into [] (for [p  @(rf/subscribe [:portfolios])] {:id p :label p}))\r\n        display-style (rf/subscribe [:multiple-portfolio-risk/display-style])\r\n        portfolios @(rf/subscribe [:portfolios])\r\n        selected-portfolios (rf/subscribe [:multiple-portfolio-risk/selected-portfolios])\r\n        number-of-fields (rf/subscribe [:multiple-portfolio-risk/field-number])\r\n        field-one (rf/subscribe [:multiple-portfolio-risk/field-one])\r\n        field-two (rf/subscribe [:multiple-portfolio-risk/field-two])\r\n        hide-zero-risk (rf/subscribe [:multiple-portfolio-risk/hide-zero-holdings])\r\n        ]\r\n    [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label (str \"Portfolio drill-down \" @(rf/subscribe [:qt-date])) :level :level1]\r\n                 [h-box :gap \"50px\"\r\n                  :children\r\n                             [\r\n                              [v-box :gap \"20px\"\r\n                               :children [\r\n                                          [h-box :gap \"10px\" :children [[title :label \"Display type:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model display-style :choices static/tree-table-choices :on-change #(rf/dispatch [:multiple-portfolio-risk/display-style %])]]]\r\n                                          [checkbox :model hide-zero-risk :label \"Hide zero positions in table view\" :disabled? (= @display-style \"Tree\") :on-change #(rf/dispatch [:multiple-portfolio-risk/hide-zero-holdings %])]\r\n                                          [h-box :gap \"10px\" :children [[title :label \"Field:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model field-one :choices static/risk-field-choices :on-change #(rf/dispatch [:multiple-portfolio-risk/field-one %])]]]]]\r\n                              [v-box :gap \"10px\"\r\n                               :children [[title :label \"Portfolios:\" :level :level3]\r\n                                          [button :style {:width \"100%\"} :label \"All\"      :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set portfolios)])]\r\n                                          [button :style {:width \"100%\"} :label \"None\"     :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios #{}])]\r\n                                          [button :style {:width \"100%\"} :label \"CEMBI\"    :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set (:portfolios (first (filter (fn [x] (= (:id x) :cembi)) static/portfolio-alignment-groups))))])]\r\n                                          [button :style {:width \"100%\"} :label \"Allianz\"  :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set (:portfolios (first (filter (fn [x] (= (:id x) :allianz)) static/portfolio-alignment-groups))))])]\r\n                                          [button :style {:width \"100%\"} :label \"IG\"       :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set (:portfolios (first (filter (fn [x] (= (:id x) :ig)) static/portfolio-alignment-groups))))])]\r\n                                          [button :style {:width \"100%\"} :label \"Talanx\"   :on-click #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios (set (:portfolios (first (filter (fn [x] (= (:id x) :talanx)) static/portfolio-alignment-groups))))])]]]\r\n                              [selection-list :width dropdown-width :model selected-portfolios :choices portfolio-map :on-change #(rf/dispatch [:multiple-portfolio-risk/selected-portfolios %])]\r\n                              [v-box :gap \"20px\"\r\n                               :children [[h-box :gap \"10px\" :children (into [] (concat [[title :label \"Filtering:\" :level :level3]] (filtering-row :multiple-portfolio-risk/filter)))]\r\n                                          [h-box :gap \"10px\" :children (shortcut-row :multiple-portfolio-risk/shortcut)]\r\n                                          [h-box :gap \"10px\" :children [ [title :label \"Download:\" :level :level3]\r\n                                                                        [md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(csv-link @(rf/subscribe [:multiple-portfolio-risk/table]) \"pivot\")]]]]]]]\r\n                 [multiple-portfolio-risk-display]]]]))\r\n\r\n;(defn csv-link-portfolio-alignment []\r\n;  (tools/download-object-as-csv\r\n;    (clj->js (tools/vector-of-maps->csv @(rf/subscribe [:portfolio-alignment/table])))\r\n;    \"alignment-pivot.csv\"))\r\n\r\n(defn portfolio-alignment-risk-controller []\r\n  (let [display-style (rf/subscribe [:portfolio-alignment/display-style])\r\n        ;risk-filter (rf/subscribe [:portfolio-alignment/filter])\r\n        portfolio-alignment-group (rf/subscribe [:portfolio-alignment/group])\r\n        field (rf/subscribe [:portfolio-alignment/field])\r\n        threshold (rf/subscribe [:portfolio-alignment/threshold])]\r\n    [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label (str \"Portfolio alignment \" @(rf/subscribe [:qt-date])) :level :level1]\r\n                 [h-box :gap \"50px\"\r\n                  :children\r\n                  [[v-box :gap \"20px\"\r\n                    :children [[h-box :gap \"10px\" :children [[title :label \"Display type:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model display-style :choices static/tree-table-choices :on-change #(rf/dispatch [:portfolio-alignment/display-style %])]]]\r\n                               [h-box :gap \"10px\" :children [[title :label \"Field:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model field :choices static/risk-field-choices :on-change #(rf/dispatch [:portfolio-alignment/field %])]]]\r\n                               [h-box :gap \"10px\" :children [[title :label \"Threshold:\" :level :level3] [gap :size \"1\"] [single-dropdown :width dropdown-width :model threshold :choices static/threshold-choices-alignment :on-change #(rf/dispatch [:portfolio-alignment/threshold %])]]]]]\r\n                   [v-box :gap \"20px\"\r\n                     :children [[h-box :gap \"10px\" :children [[title :label \"Portfolios:\" :level :level3] [gap :size \"1\"]\r\n                                                              [single-dropdown :width dropdown-width :model portfolio-alignment-group :choices static/portfolio-alignment-groups :on-change #(rf/dispatch [:portfolio-alignment/group %])]]]]]\r\n\r\n                   [v-box :gap \"20px\"\r\n                    :children [[h-box :gap \"10px\" :children (into [] (concat [[title :label \"Filtering:\" :level :level3]] (filtering-row :portfolio-alignment/filter)))]\r\n                               [h-box :gap \"10px\" :children (shortcut-row :portfolio-alignment/shortcut)]\r\n                               [h-box :gap \"10px\" :children [ [title :label \"Download:\" :level :level3]\r\n                                                             [md-circle-icon-button :md-icon-name \"zmdi-download\" :on-click #(csv-link @(rf/subscribe [:portfolio-alignment/table]) \"alignment\")]]]]]]]\r\n\r\n\r\n\r\n                 ;[h-box :gap \"10px\"\r\n                 ; :children (into [] (concat [\r\n                 ;                             [v-box :gap \"15px\" :children [[title :label \"Display type:\" :level :level3] [title :label \"Field:\" :level :level3] [title :label \"Threshold:\" :level :level3]]]\r\n                 ;                             [v-box :gap \"10px\" :children [[single-dropdown :width dropdown-width :model display-style :choices [{:id \"Table\" :label \"Table\"} {:id \"Tree\" :label \"Tree\"}] :on-change #(rf/dispatch [:portfolio-alignment/display-style %])]\r\n                 ;                                                           [single-dropdown :width dropdown-width :model field :choices static/field-choices-alignment :on-change #(rf/dispatch [:portfolio-alignment/field %])]\r\n                 ;                                                           [single-dropdown :width dropdown-width :model threshold :choices static/threshold-choices-alignment :on-change #(rf/dispatch [:portfolio-alignment/threshold %])]\r\n                 ;                                                           ]]\r\n                 ;                             [gap :size \"50px\"]\r\n                 ;                             [title :label \"Filtering:\" :level :level3]\r\n                 ;                             [single-dropdown :width dropdown-width :model portfolio-alignment-group :choices static/portfolio-alignment-groups :on-change #(rf/dispatch [:portfolio-alignment/group %])]]\r\n                 ;                            (into [] (for [i (range 1 4)] [single-dropdown :width dropdown-width :model (r/cursor risk-filter [i]) :choices static/risk-choice-map :on-change #(rf/dispatch [:portfolio-alignment/filter i %])]))))]\r\n                 [portfolio-alignment-risk-display]]]]))\r\n\r\n\r\n(defn go-to-portfolio-risk [state rowInfo instance] (clj->js {:onClick #(do (rf/dispatch-sync [:active-home :single-portfolio]) (rf/dispatch [:single-portfolio-risk/portfolio (aget rowInfo \"row\" \"portfolio\")])) :style {:cursor \"pointer\"}}))\r\n\r\n(defn summary-display []\r\n   [box :class \"subbody rightelement\" :child\r\n     [v-box :class \"element\" :align-self :center :justify :center :gap \"20px\"\r\n      :children [[title :label (str \"Summary \" @(rf/subscribe [:qt-date])) :level :level1]\r\n    [:> ReactTable\r\n     {:data           @(rf/subscribe [:summary-display/table])\r\n      :columns        [{:Header \"Portfolio\" :accessor \"portfolio\" :width 120}\r\n                       {:Header \"Balance\" :columns (mapv tables/risk-table-columns [:value :cash-pct])}\r\n                       {:Header \"Value\" :columns [(assoc (tables/risk-table-columns :contrib-yield) :Header \"Yield\")\r\n                                                  (tables/risk-table-columns :contrib-bond-yield)\r\n                                                  (assoc (tables/risk-table-columns :contrib-mdur) :Header \"M Dur\")\r\n                                                  (tables/risk-table-columns :rating)\r\n                                                  (assoc (tables/risk-table-columns :rating-score) :width 60)\r\n                                                  (assoc (tables/risk-table-columns :contrib-zspread) :Header \"Z-spread\")\r\n                                                  (assoc (tables/risk-table-columns :contrib-gspread) :Header \"G-spread\")\r\n                                                  (assoc (tables/risk-table-columns :contrib-beta) :Header \"Beta\")\r\n                                                  ]}\r\n                       ]\r\n      :showPagination false\r\n      :pageSize       (count @(rf/subscribe [:portfolios]))\r\n      :getTrProps     go-to-portfolio-risk\r\n      :className      \"-striped -highlight\"}]]]])\r\n"]}